//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region Project
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Project :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Project.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ProjectName
        {
            get
            {
                return this._ProjectName;
            }
            set
            {
                if (this._ProjectName != value)
                {
                    this.RaiseDataMemberChanging("ProjectName");
                    this.ValidateProperty("ProjectName", value);
                    this._ProjectName = value;
                    this.RaiseDataMemberChanged("ProjectName");
                }
            }
        }
        private string _ProjectName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Client
        {
            get
            {
                return this._Client;
            }
            set
            {
                if (this._Client != value)
                {
                    this.RaiseDataMemberChanging("Client");
                    this.ValidateProperty("Client", value);
                    this._Client = value;
                    this.RaiseDataMemberChanged("Client");
                }
            }
        }
        private string _Client;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Phase
        {
            get
            {
                return this._Phase;
            }
            set
            {
                if (this._Phase != value)
                {
                    this.RaiseDataMemberChanging("Phase");
                    this.ValidateProperty("Phase", value);
                    this._Phase = value;
                    this.RaiseDataMemberChanged("Phase");
                }
            }
        }
        private string _Phase;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public double ProjectStatus
        {
            get
            {
                return this._ProjectStatus;
            }
            set
            {
                if (this._ProjectStatus != value)
                {
                    this.RaiseDataMemberChanging("ProjectStatus");
                    this.ValidateProperty("ProjectStatus", value);
                    this._ProjectStatus = value;
                    this.RaiseDataMemberChanged("ProjectStatus");
                }
            }
        }
        private double _ProjectStatus;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public double StaffingStatus
        {
            get
            {
                return this._StaffingStatus;
            }
            set
            {
                if (this._StaffingStatus != value)
                {
                    this.RaiseDataMemberChanging("StaffingStatus");
                    this.ValidateProperty("StaffingStatus", value);
                    this._StaffingStatus = value;
                    this.RaiseDataMemberChanged("StaffingStatus");
                }
            }
        }
        private double _StaffingStatus;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FollowOn
        {
            get
            {
                return this._FollowOn;
            }
            set
            {
                if (this._FollowOn != value)
                {
                    this.RaiseDataMemberChanging("FollowOn");
                    this.ValidateProperty("FollowOn", value);
                    this._FollowOn = value;
                    this.RaiseDataMemberChanged("FollowOn");
                }
            }
        }
        private string _FollowOn;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Notes
        {
            get
            {
                return this._Notes;
            }
            set
            {
                if (this._Notes != value)
                {
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._Notes = value;
                    this.RaiseDataMemberChanged("Notes");
                }
            }
        }
        private string _Notes;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this.RaiseDataMemberChanging("StartDate");
                    this.ValidateProperty("StartDate", value);
                    this._StartDate = value;
                    this.RaiseDataMemberChanged("StartDate");
                }
            }
        }
        private global::System.DateTime _StartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime ProjectedEndDate
        {
            get
            {
                return this._ProjectedEndDate;
            }
            set
            {
                if (this._ProjectedEndDate != value)
                {
                    this.RaiseDataMemberChanging("ProjectedEndDate");
                    this.ValidateProperty("ProjectedEndDate", value);
                    this._ProjectedEndDate = value;
                    this.RaiseDataMemberChanged("ProjectedEndDate");
                }
            }
        }
        private global::System.DateTime _ProjectedEndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Closed
        {
            get
            {
                return this._Closed;
            }
            set
            {
                if (this._Closed != value)
                {
                    this.RaiseDataMemberChanging("Closed");
                    this.ValidateProperty("Closed", value);
                    this._Closed = value;
                    this.RaiseDataMemberChanged("Closed");
                }
            }
        }
        private bool _Closed;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Chargeable
        {
            get
            {
                return this._Chargeable;
            }
            set
            {
                if (this._Chargeable != value)
                {
                    this.RaiseDataMemberChanging("Chargeable");
                    this.ValidateProperty("Chargeable", value);
                    this._Chargeable = value;
                    this.RaiseDataMemberChanged("Chargeable");
                }
            }
        }
        private bool _Chargeable;
        
        [global::System.ComponentModel.DataAnnotations.Association("StaffingRequirement_Project", "Id", "StaffingRequirement_Project")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<StaffingRequirement> StaffingRequirements
        {
            get
            {
                if (this._StaffingRequirements == null)
                {
                    this._StaffingRequirements = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.StaffingRequirement>(this, "StaffingRequirements", this.FilterStaffingRequirements, this.AttachStaffingRequirements, this.DetachStaffingRequirements);
                }
                return this._StaffingRequirements;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.StaffingRequirement> _StaffingRequirements;
        private void AttachStaffingRequirements(global::LightSwitchApplication.Implementation.StaffingRequirement entity)
        {
            entity.Project = this;
        }
        private void DetachStaffingRequirements(global::LightSwitchApplication.Implementation.StaffingRequirement entity)
        {
            entity.Project = null;
        }
        private bool FilterStaffingRequirements(global::LightSwitchApplication.Implementation.StaffingRequirement entity)
        {
            return global::System.Object.Equals(entity.StaffingRequirement_Project, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Project.DetailsClass.IImplementation.StaffingRequirements
        {
            get
            {
                return this.StaffingRequirements;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("EmployeeAssignment_Project", "Id", "EmployeeAssignment_Project")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<EmployeeAssignment> EmployeeAssignment
        {
            get
            {
                if (this._EmployeeAssignment == null)
                {
                    this._EmployeeAssignment = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.EmployeeAssignment>(this, "EmployeeAssignment", this.FilterEmployeeAssignment, this.AttachEmployeeAssignment, this.DetachEmployeeAssignment);
                }
                return this._EmployeeAssignment;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.EmployeeAssignment> _EmployeeAssignment;
        private void AttachEmployeeAssignment(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            entity.Projects = this;
        }
        private void DetachEmployeeAssignment(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            entity.Projects = null;
        }
        private bool FilterEmployeeAssignment(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            return global::System.Object.Equals(entity.EmployeeAssignment_Project, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Project.DetailsClass.IImplementation.EmployeeAssignment
        {
            get
            {
                return this.EmployeeAssignment;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Project_Employee
        {
            get
            {
                return this._Project_Employee;
            }
            set
            {
                if (this._Project_Employee != value)
                {
                    this.RaiseDataMemberChanging("Project_Employee");
                    this.ValidateProperty("Project_Employee", value);
                    this._Project_Employee = value;
                    this.RaiseDataMemberChanged("Project_Employee");
                }
            }
        }
        private global::System.Nullable<int> _Project_Employee;
        
        [global::System.ComponentModel.DataAnnotations.Association("Project_Employee", "Project_Employee", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Employee Director
        {
            get
            {
                if (this._Director == null)
                {
                    this._Director = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee>(this, "Director", this.FilterDirector);
                }
                return this._Director.Entity;
            }
            set
            {
                Employee previous = this.Director;
                if (previous != value)
                {
                    this.ValidateProperty("Director", value);
                    if (previous != null)
                    {
                        this._Director.Entity = null;
                        previous.Projects.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Project_Employee = value.Id;
                    }
                    else
                    {
                        this.Project_Employee = default(global::System.Nullable<int>);
                    }
                    this._Director.Entity = value;
                    if (value != null)
                    {
                        value.Projects.Add(this);
                    }
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee> _Director;
        private bool FilterDirector(global::LightSwitchApplication.Implementation.Employee entity)
        {
            return global::System.Object.Equals(entity.Id, this.Project_Employee);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Project.DetailsClass.IImplementation.Director
        {
            get
            {
                return this.Director;
            }
            set
            {
                this.Director = (global::LightSwitchApplication.Implementation.Employee)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Project_Employee1
        {
            get
            {
                return this._Project_Employee1;
            }
            set
            {
                if (this._Project_Employee1 != value)
                {
                    this.RaiseDataMemberChanging("Project_Employee1");
                    this.ValidateProperty("Project_Employee1", value);
                    this._Project_Employee1 = value;
                    this.RaiseDataMemberChanged("Project_Employee1");
                }
            }
        }
        private global::System.Nullable<int> _Project_Employee1;
        
        [global::System.ComponentModel.DataAnnotations.Association("Project_Employee1", "Project_Employee1", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Employee Manager
        {
            get
            {
                if (this._Manager == null)
                {
                    this._Manager = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee>(this, "Manager", this.FilterManager);
                }
                return this._Manager.Entity;
            }
            set
            {
                Employee previous = this.Manager;
                if (previous != value)
                {
                    this.ValidateProperty("Manager", value);
                    if (previous != null)
                    {
                        this._Manager.Entity = null;
                        previous.Project.Remove(this);
                    }
                    if (value != null)
                    {
                        this.Project_Employee1 = value.Id;
                    }
                    else
                    {
                        this.Project_Employee1 = default(global::System.Nullable<int>);
                    }
                    this._Manager.Entity = value;
                    if (value != null)
                    {
                        value.Project.Add(this);
                    }
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee> _Manager;
        private bool FilterManager(global::LightSwitchApplication.Implementation.Employee entity)
        {
            return global::System.Object.Equals(entity.Id, this.Project_Employee1);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.Project.DetailsClass.IImplementation.Manager
        {
            get
            {
                return this.Manager;
            }
            set
            {
                this.Manager = (global::LightSwitchApplication.Implementation.Employee)value;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("TimeForecast_Project", "Id", "TimeForecast_Project")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<TimeForecast> TimeForecasts
        {
            get
            {
                if (this._TimeForecasts == null)
                {
                    this._TimeForecasts = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.TimeForecast>(this, "TimeForecasts", this.FilterTimeForecasts, this.AttachTimeForecasts, this.DetachTimeForecasts);
                }
                return this._TimeForecasts;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.TimeForecast> _TimeForecasts;
        private void AttachTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            entity.Project1 = this;
        }
        private void DetachTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            entity.Project1 = null;
        }
        private bool FilterTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            return global::System.Object.Equals(entity.TimeForecast_Project, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Project.DetailsClass.IImplementation.TimeForecasts
        {
            get
            {
                return this.TimeForecasts;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region StaffingRequirement
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class StaffingRequirement :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.StaffingRequirement.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public short Level
        {
            get
            {
                return this._Level;
            }
            set
            {
                if (this._Level != value)
                {
                    this.RaiseDataMemberChanging("Level");
                    this.ValidateProperty("Level", value);
                    this._Level = value;
                    this.RaiseDataMemberChanged("Level");
                }
            }
        }
        private short _Level;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public short Skill
        {
            get
            {
                return this._Skill;
            }
            set
            {
                if (this._Skill != value)
                {
                    this.RaiseDataMemberChanging("Skill");
                    this.ValidateProperty("Skill", value);
                    this._Skill = value;
                    this.RaiseDataMemberChanged("Skill");
                }
            }
        }
        private short _Skill;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public short Industry
        {
            get
            {
                return this._Industry;
            }
            set
            {
                if (this._Industry != value)
                {
                    this.RaiseDataMemberChanging("Industry");
                    this.ValidateProperty("Industry", value);
                    this._Industry = value;
                    this.RaiseDataMemberChanged("Industry");
                }
            }
        }
        private short _Industry;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public decimal FTEs
        {
            get
            {
                return this._FTEs;
            }
            set
            {
                if (this._FTEs != value)
                {
                    this.RaiseDataMemberChanging("FTEs");
                    this.ValidateProperty("FTEs", value);
                    this._FTEs = value;
                    this.RaiseDataMemberChanged("FTEs");
                }
            }
        }
        private decimal _FTEs;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime DateRequired
        {
            get
            {
                return this._DateRequired;
            }
            set
            {
                if (this._DateRequired != value)
                {
                    this.RaiseDataMemberChanging("DateRequired");
                    this.ValidateProperty("DateRequired", value);
                    this._DateRequired = value;
                    this.RaiseDataMemberChanged("DateRequired");
                }
            }
        }
        private global::System.DateTime _DateRequired;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int StaffingRequirement_Project
        {
            get
            {
                return this._StaffingRequirement_Project;
            }
            set
            {
                if (this._StaffingRequirement_Project != value)
                {
                    this.RaiseDataMemberChanging("StaffingRequirement_Project");
                    this.ValidateProperty("StaffingRequirement_Project", value);
                    this._StaffingRequirement_Project = value;
                    this.RaiseDataMemberChanged("StaffingRequirement_Project");
                }
            }
        }
        private int _StaffingRequirement_Project;
        
        [global::System.ComponentModel.DataAnnotations.Association("StaffingRequirement_Project", "StaffingRequirement_Project", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Project Project
        {
            get
            {
                if (this._Project == null)
                {
                    this._Project = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project>(this, "Project", this.FilterProject);
                }
                return this._Project.Entity;
            }
            set
            {
                Project previous = this.Project;
                if (previous != value)
                {
                    this.ValidateProperty("Project", value);
                    if (previous != null)
                    {
                        this._Project.Entity = null;
                        previous.StaffingRequirements.Remove(this);
                    }
                    if (value != null)
                    {
                        this.StaffingRequirement_Project = value.Id;
                    }
                    else
                    {
                        this.StaffingRequirement_Project = default(int);
                    }
                    this._Project.Entity = value;
                    if (value != null)
                    {
                        value.StaffingRequirements.Add(this);
                    }
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project> _Project;
        private bool FilterProject(global::LightSwitchApplication.Implementation.Project entity)
        {
            return global::System.Object.Equals(entity.Id, this.StaffingRequirement_Project);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.StaffingRequirement.DetailsClass.IImplementation.Project
        {
            get
            {
                return this.Project;
            }
            set
            {
                this.Project = (global::LightSwitchApplication.Implementation.Project)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Employee
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Employee :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Employee.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string UserID
        {
            get
            {
                return this._UserID;
            }
            set
            {
                if (this._UserID != value)
                {
                    this.RaiseDataMemberChanging("UserID");
                    this.ValidateProperty("UserID", value);
                    this._UserID = value;
                    this.RaiseDataMemberChanged("UserID");
                }
            }
        }
        private string _UserID;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FirstName
        {
            get
            {
                return this._FirstName;
            }
            set
            {
                if (this._FirstName != value)
                {
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._FirstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                }
            }
        }
        private string _FirstName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LastName
        {
            get
            {
                return this._LastName;
            }
            set
            {
                if (this._LastName != value)
                {
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._LastName = value;
                    this.RaiseDataMemberChanged("LastName");
                }
            }
        }
        private string _LastName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.ComponentModel.DataAnnotations.Association("EmployeeAssignment_Employee", "Id", "EmployeeAssignment_Employee")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<EmployeeAssignment> EmployeeAssignments
        {
            get
            {
                if (this._EmployeeAssignments == null)
                {
                    this._EmployeeAssignments = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.EmployeeAssignment>(this, "EmployeeAssignments", this.FilterEmployeeAssignments, this.AttachEmployeeAssignments, this.DetachEmployeeAssignments);
                }
                return this._EmployeeAssignments;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.EmployeeAssignment> _EmployeeAssignments;
        private void AttachEmployeeAssignments(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            entity.Employee = this;
        }
        private void DetachEmployeeAssignments(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            entity.Employee = null;
        }
        private bool FilterEmployeeAssignments(global::LightSwitchApplication.Implementation.EmployeeAssignment entity)
        {
            return global::System.Object.Equals(entity.EmployeeAssignment_Employee, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Employee.DetailsClass.IImplementation.EmployeeAssignments
        {
            get
            {
                return this.EmployeeAssignments;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Project_Employee", "Id", "Project_Employee")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Project> Projects
        {
            get
            {
                if (this._Projects == null)
                {
                    this._Projects = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Project>(this, "Projects", this.FilterProjects, this.AttachProjects, this.DetachProjects);
                }
                return this._Projects;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Project> _Projects;
        private void AttachProjects(global::LightSwitchApplication.Implementation.Project entity)
        {
            entity.Director = this;
        }
        private void DetachProjects(global::LightSwitchApplication.Implementation.Project entity)
        {
            entity.Director = null;
        }
        private bool FilterProjects(global::LightSwitchApplication.Implementation.Project entity)
        {
            return global::System.Object.Equals(entity.Project_Employee, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Employee.DetailsClass.IImplementation.Projects
        {
            get
            {
                return this.Projects;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("Project_Employee1", "Id", "Project_Employee1")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<Project> Project
        {
            get
            {
                if (this._Project == null)
                {
                    this._Project = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Project>(this, "Project", this.FilterProject, this.AttachProject, this.DetachProject);
                }
                return this._Project;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.Project> _Project;
        private void AttachProject(global::LightSwitchApplication.Implementation.Project entity)
        {
            entity.Manager = this;
        }
        private void DetachProject(global::LightSwitchApplication.Implementation.Project entity)
        {
            entity.Manager = null;
        }
        private bool FilterProject(global::LightSwitchApplication.Implementation.Project entity)
        {
            return global::System.Object.Equals(entity.Project_Employee1, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Employee.DetailsClass.IImplementation.Project
        {
            get
            {
                return this.Project;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("TimeForecast_Employee", "Id", "TimeForecast_Employee")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<TimeForecast> TimeForecasts
        {
            get
            {
                if (this._TimeForecasts == null)
                {
                    this._TimeForecasts = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.TimeForecast>(this, "TimeForecasts", this.FilterTimeForecasts, this.AttachTimeForecasts, this.DetachTimeForecasts);
                }
                return this._TimeForecasts;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.TimeForecast> _TimeForecasts;
        private void AttachTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            entity.Employee = this;
        }
        private void DetachTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            entity.Employee = null;
        }
        private bool FilterTimeForecasts(global::LightSwitchApplication.Implementation.TimeForecast entity)
        {
            return global::System.Object.Equals(entity.TimeForecast_Employee, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.Employee.DetailsClass.IImplementation.TimeForecasts
        {
            get
            {
                return this.TimeForecasts;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region EmployeeAssignment
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class EmployeeAssignment :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.EmployeeAssignment.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public decimal Percent
        {
            get
            {
                return this._Percent;
            }
            set
            {
                if (this._Percent != value)
                {
                    this.RaiseDataMemberChanging("Percent");
                    this.ValidateProperty("Percent", value);
                    this._Percent = value;
                    this.RaiseDataMemberChanged("Percent");
                }
            }
        }
        private decimal _Percent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this.RaiseDataMemberChanging("StartDate");
                    this.ValidateProperty("StartDate", value);
                    this._StartDate = value;
                    this.RaiseDataMemberChanged("StartDate");
                }
            }
        }
        private global::System.DateTime _StartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if (this._EndDate != value)
                {
                    this.RaiseDataMemberChanging("EndDate");
                    this.ValidateProperty("EndDate", value);
                    this._EndDate = value;
                    this.RaiseDataMemberChanged("EndDate");
                }
            }
        }
        private global::System.DateTime _EndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int EmployeeAssignment_Project
        {
            get
            {
                return this._EmployeeAssignment_Project;
            }
            set
            {
                if (this._EmployeeAssignment_Project != value)
                {
                    this.RaiseDataMemberChanging("EmployeeAssignment_Project");
                    this.ValidateProperty("EmployeeAssignment_Project", value);
                    this._EmployeeAssignment_Project = value;
                    this.RaiseDataMemberChanged("EmployeeAssignment_Project");
                }
            }
        }
        private int _EmployeeAssignment_Project;
        
        [global::System.ComponentModel.DataAnnotations.Association("EmployeeAssignment_Project", "EmployeeAssignment_Project", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Project Projects
        {
            get
            {
                if (this._Projects == null)
                {
                    this._Projects = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project>(this, "Projects", this.FilterProjects);
                }
                return this._Projects.Entity;
            }
            set
            {
                Project previous = this.Projects;
                if (previous != value)
                {
                    this.ValidateProperty("Projects", value);
                    if (previous != null)
                    {
                        this._Projects.Entity = null;
                        previous.EmployeeAssignment.Remove(this);
                    }
                    if (value != null)
                    {
                        this.EmployeeAssignment_Project = value.Id;
                    }
                    else
                    {
                        this.EmployeeAssignment_Project = default(int);
                    }
                    this._Projects.Entity = value;
                    if (value != null)
                    {
                        value.EmployeeAssignment.Add(this);
                    }
                    this.RaisePropertyChanged("Projects");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project> _Projects;
        private bool FilterProjects(global::LightSwitchApplication.Implementation.Project entity)
        {
            return global::System.Object.Equals(entity.Id, this.EmployeeAssignment_Project);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.EmployeeAssignment.DetailsClass.IImplementation.Projects
        {
            get
            {
                return this.Projects;
            }
            set
            {
                this.Projects = (global::LightSwitchApplication.Implementation.Project)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int EmployeeAssignment_Employee
        {
            get
            {
                return this._EmployeeAssignment_Employee;
            }
            set
            {
                if (this._EmployeeAssignment_Employee != value)
                {
                    this.RaiseDataMemberChanging("EmployeeAssignment_Employee");
                    this.ValidateProperty("EmployeeAssignment_Employee", value);
                    this._EmployeeAssignment_Employee = value;
                    this.RaiseDataMemberChanged("EmployeeAssignment_Employee");
                }
            }
        }
        private int _EmployeeAssignment_Employee;
        
        [global::System.ComponentModel.DataAnnotations.Association("EmployeeAssignment_Employee", "EmployeeAssignment_Employee", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Employee Employee
        {
            get
            {
                if (this._Employee == null)
                {
                    this._Employee = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee>(this, "Employee", this.FilterEmployee);
                }
                return this._Employee.Entity;
            }
            set
            {
                Employee previous = this.Employee;
                if (previous != value)
                {
                    this.ValidateProperty("Employee", value);
                    if (previous != null)
                    {
                        this._Employee.Entity = null;
                        previous.EmployeeAssignments.Remove(this);
                    }
                    if (value != null)
                    {
                        this.EmployeeAssignment_Employee = value.Id;
                    }
                    else
                    {
                        this.EmployeeAssignment_Employee = default(int);
                    }
                    this._Employee.Entity = value;
                    if (value != null)
                    {
                        value.EmployeeAssignments.Add(this);
                    }
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee> _Employee;
        private bool FilterEmployee(global::LightSwitchApplication.Implementation.Employee entity)
        {
            return global::System.Object.Equals(entity.Id, this.EmployeeAssignment_Employee);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.EmployeeAssignment.DetailsClass.IImplementation.Employee
        {
            get
            {
                return this.Employee;
            }
            set
            {
                this.Employee = (global::LightSwitchApplication.Implementation.Employee)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region TimeForecast
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class TimeForecast :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.TimeForecast.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime StartDate
        {
            get
            {
                return this._StartDate;
            }
            set
            {
                if (this._StartDate != value)
                {
                    this.RaiseDataMemberChanging("StartDate");
                    this.ValidateProperty("StartDate", value);
                    this._StartDate = value;
                    this.RaiseDataMemberChanged("StartDate");
                }
            }
        }
        private global::System.DateTime _StartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime EndDate
        {
            get
            {
                return this._EndDate;
            }
            set
            {
                if (this._EndDate != value)
                {
                    this.RaiseDataMemberChanging("EndDate");
                    this.ValidateProperty("EndDate", value);
                    this._EndDate = value;
                    this.RaiseDataMemberChanged("EndDate");
                }
            }
        }
        private global::System.DateTime _EndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Percent
        {
            get
            {
                return this._Percent;
            }
            set
            {
                if (this._Percent != value)
                {
                    this.RaiseDataMemberChanging("Percent");
                    this.ValidateProperty("Percent", value);
                    this._Percent = value;
                    this.RaiseDataMemberChanged("Percent");
                }
            }
        }
        private int _Percent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Chargeable
        {
            get
            {
                return this._Chargeable;
            }
            set
            {
                if (this._Chargeable != value)
                {
                    this.RaiseDataMemberChanging("Chargeable");
                    this.ValidateProperty("Chargeable", value);
                    this._Chargeable = value;
                    this.RaiseDataMemberChanged("Chargeable");
                }
            }
        }
        private bool _Chargeable;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return this._LastUpdate;
            }
            set
            {
                if (this._LastUpdate != value)
                {
                    this.RaiseDataMemberChanging("LastUpdate");
                    this.ValidateProperty("LastUpdate", value);
                    this._LastUpdate = value;
                    this.RaiseDataMemberChanged("LastUpdate");
                }
            }
        }
        private global::System.DateTime _LastUpdate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int TimeForecast_Project
        {
            get
            {
                return this._TimeForecast_Project;
            }
            set
            {
                if (this._TimeForecast_Project != value)
                {
                    this.RaiseDataMemberChanging("TimeForecast_Project");
                    this.ValidateProperty("TimeForecast_Project", value);
                    this._TimeForecast_Project = value;
                    this.RaiseDataMemberChanged("TimeForecast_Project");
                }
            }
        }
        private int _TimeForecast_Project;
        
        [global::System.ComponentModel.DataAnnotations.Association("TimeForecast_Project", "TimeForecast_Project", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Project Project1
        {
            get
            {
                if (this._Project1 == null)
                {
                    this._Project1 = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project>(this, "Project1", this.FilterProject1);
                }
                return this._Project1.Entity;
            }
            set
            {
                Project previous = this.Project1;
                if (previous != value)
                {
                    this.ValidateProperty("Project1", value);
                    if (previous != null)
                    {
                        this._Project1.Entity = null;
                        previous.TimeForecasts.Remove(this);
                    }
                    if (value != null)
                    {
                        this.TimeForecast_Project = value.Id;
                    }
                    else
                    {
                        this.TimeForecast_Project = default(int);
                    }
                    this._Project1.Entity = value;
                    if (value != null)
                    {
                        value.TimeForecasts.Add(this);
                    }
                    this.RaisePropertyChanged("Project1");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Project> _Project1;
        private bool FilterProject1(global::LightSwitchApplication.Implementation.Project entity)
        {
            return global::System.Object.Equals(entity.Id, this.TimeForecast_Project);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.TimeForecast.DetailsClass.IImplementation.Project1
        {
            get
            {
                return this.Project1;
            }
            set
            {
                this.Project1 = (global::LightSwitchApplication.Implementation.Project)value;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int TimeForecast_Employee
        {
            get
            {
                return this._TimeForecast_Employee;
            }
            set
            {
                if (this._TimeForecast_Employee != value)
                {
                    this.RaiseDataMemberChanging("TimeForecast_Employee");
                    this.ValidateProperty("TimeForecast_Employee", value);
                    this._TimeForecast_Employee = value;
                    this.RaiseDataMemberChanged("TimeForecast_Employee");
                }
            }
        }
        private int _TimeForecast_Employee;
        
        [global::System.ComponentModel.DataAnnotations.Association("TimeForecast_Employee", "TimeForecast_Employee", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.Employee Employee
        {
            get
            {
                if (this._Employee == null)
                {
                    this._Employee = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee>(this, "Employee", this.FilterEmployee);
                }
                return this._Employee.Entity;
            }
            set
            {
                Employee previous = this.Employee;
                if (previous != value)
                {
                    this.ValidateProperty("Employee", value);
                    if (previous != null)
                    {
                        this._Employee.Entity = null;
                        previous.TimeForecasts.Remove(this);
                    }
                    if (value != null)
                    {
                        this.TimeForecast_Employee = value.Id;
                    }
                    else
                    {
                        this.TimeForecast_Employee = default(int);
                    }
                    this._Employee.Entity = value;
                    if (value != null)
                    {
                        value.TimeForecasts.Add(this);
                    }
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.Employee> _Employee;
        private bool FilterEmployee(global::LightSwitchApplication.Implementation.Employee entity)
        {
            return global::System.Object.Equals(entity.Id, this.TimeForecast_Employee);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.TimeForecast.DetailsClass.IImplementation.Employee
        {
            get
            {
                return this.Employee;
            }
            set
            {
                this.Employee = (global::LightSwitchApplication.Implementation.Employee)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ForecastException
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/ApplicationData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class ForecastException :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.ForecastException.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Exception
        {
            get
            {
                return this._Exception;
            }
            set
            {
                if (this._Exception != value)
                {
                    this.RaiseDataMemberChanging("Exception");
                    this.ValidateProperty("Exception", value);
                    this._Exception = value;
                    this.RaiseDataMemberChanged("Exception");
                }
            }
        }
        private string _Exception;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ApplicationData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class ApplicationData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public ApplicationData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IApplicationDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-ApplicationDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Project> ProjectEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Project>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.StaffingRequirement> StaffingRequirementEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.StaffingRequirement>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Employee> EmployeeEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Employee>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.EmployeeAssignment> EmployeeAssignmentEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.EmployeeAssignment>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.TimeForecast> TimeForecastEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.TimeForecast>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.ForecastException> ForecastExceptionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.ForecastException>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new ApplicationDataEntityContainer();
        }
    
        internal sealed class ApplicationDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public ApplicationDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Project>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.StaffingRequirement>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Employee>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.EmployeeAssignment>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.TimeForecast>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.ForecastException>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IApplicationDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Projects_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Projects_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Projects_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProjects_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Project> EndProjects_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Projects_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Projects_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Projects_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProjects_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Project> EndProjects_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Projects_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Projects_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Projects_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginProjects_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Project> EndProjects_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStaffingRequirements_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StaffingRequirement> EndStaffingRequirements_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStaffingRequirements_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StaffingRequirement> EndStaffingRequirements_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/StaffingRequirements_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginStaffingRequirements_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.StaffingRequirement> EndStaffingRequirements_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Employees_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Employees_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Employees_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployees_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Employee> EndEmployees_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Employees_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Employees_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Employees_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployees_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Employee> EndEmployees_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/Employees_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/Employees_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/Employees_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployees_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Employee> EndEmployees_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployeeAssignments_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.EmployeeAssignment> EndEmployeeAssignments_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployeeAssignments_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.EmployeeAssignment> EndEmployeeAssignments_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/EmployeeAssignments_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginEmployeeAssignments_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.EmployeeAssignment> EndEmployeeAssignments_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/ActiveProjects", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/ActiveProjectsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/ActiveProjectsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginActiveProjects(string frameworkOperators, global::System.Nullable<bool> ShowClosed, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Project> EndActiveProjects(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTimeForecasts_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.TimeForecast> EndTimeForecasts_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTimeForecasts_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.TimeForecast> EndTimeForecasts_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/TimeForecasts_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginTimeForecasts_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.TimeForecast> EndTimeForecasts_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_Single", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginForecastExceptions_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ForecastException> EndForecastExceptions_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_SingleOrDefault", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginForecastExceptions_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ForecastException> EndForecastExceptions_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_All", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/ForecastExceptions_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginForecastExceptions_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ForecastException> EndForecastExceptions_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/ApplicationDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Project))
            {
                return new global::LightSwitchApplication.Implementation.Project();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.StaffingRequirement))
            {
                return new global::LightSwitchApplication.Implementation.StaffingRequirement();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Employee))
            {
                return new global::LightSwitchApplication.Implementation.Employee();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.EmployeeAssignment))
            {
                return new global::LightSwitchApplication.Implementation.EmployeeAssignment();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.TimeForecast))
            {
                return new global::LightSwitchApplication.Implementation.TimeForecast();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ForecastException))
            {
                return new global::LightSwitchApplication.Implementation.ForecastException();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.ApplicationData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.ApplicationData))
            {
                return new global::LightSwitchApplication.Implementation.ApplicationData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.Project) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Project);
            }
            if (typeof(global::LightSwitchApplication.StaffingRequirement) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.StaffingRequirement);
            }
            if (typeof(global::LightSwitchApplication.Employee) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Employee);
            }
            if (typeof(global::LightSwitchApplication.EmployeeAssignment) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.EmployeeAssignment);
            }
            if (typeof(global::LightSwitchApplication.TimeForecast) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.TimeForecast);
            }
            if (typeof(global::LightSwitchApplication.ForecastException) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ForecastException);
            }
            return null;
        }
    }
}
