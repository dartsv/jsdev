//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class StatusBoardAllProjects
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private StatusBoardAllProjects() : base("LightSwitchApplication:StatusBoardAllProjects")
        {
            global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static StatusBoardAllProjects CreateInstance()
        {
            return new global::LightSwitchApplication.StatusBoardAllProjects(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardAllProjects_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void StaffingRequirements_SelectionChanged();

        partial void StaffingRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Loaded(bool succeeded);

        partial void EmployeeAssignment_SelectionChanged();

        partial void EmployeeAssignment_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Loaded(bool succeeded);

        partial void ShowInactive_Changed();

        partial void ExcludedClient_Changed();

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void EmployeesLookup_SelectionChanged();

        partial void EmployeesLookup_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Loaded(bool succeeded);

        partial void ProjectRateCollection_SelectionChanged();

        partial void ProjectRateCollection_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Loaded(bool succeeded);

        partial void ProjectStatusFilter_Changed();

        partial void ActiveClients_SelectionChanged();

        partial void ActiveClients_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_Loaded(bool succeeded);

        partial void DodEmployeeAssignments_SelectionChanged();

        partial void DodEmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodEmployeeAssignments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the StaffingRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.StaffingRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignment visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.EmployeeAssignment);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ShowInactive
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ShowInactive);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ShowInactive, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowInactive_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ExcludedClient
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ExcludedClient);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ExcludedClient, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExcludedClient_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeesLookup visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> EmployeesLookup
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.EmployeesLookup);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectRateCollection visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectRate> ProjectRateCollection
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ProjectRateCollection);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double ProjectStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ProjectStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ProjectStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ActiveClients visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client> ActiveClients
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ActiveClients);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the DodEmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> DodEmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.DodEmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodEmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the CreateNewProject screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateNewProject()
        {
            this.Details.Methods.CreateNewProject.CreateInvocation().Execute();
        }
        partial void CreateNewProject_CanExecute(ref bool result);
        partial void CreateNewProject_Execute();

        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddNew()
        {
            this.Details.Methods.EmployeeAssignmentAddNew.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddNew_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddNew_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew1()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew1_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew2 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew2()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew2.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew2_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew2_Execute();

        /// <summary>
        /// Calls the ShowJS screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ShowJS()
        {
            this.Details.Methods.ShowJS.CreateInvocation().Execute();
        }
        partial void ShowJS_CanExecute(ref bool result);
        partial void ShowJS_Execute();

        /// <summary>
        /// Calls the ExcludeJS screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExcludeJS()
        {
            this.Details.Methods.ExcludeJS.CreateInvocation().Execute();
        }
        partial void ExcludeJS_CanExecute(ref bool result);
        partial void ExcludeJS_Execute();

        /// <summary>
        /// Calls the ShowInactiveBtn screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ShowInactiveBtn()
        {
            this.Details.Methods.ShowInactiveBtn.CreateInvocation().Execute();
        }
        partial void ShowInactiveBtn_CanExecute(ref bool result);
        partial void ShowInactiveBtn_Execute();

        /// <summary>
        /// Calls the StaffingRequirementsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void StaffingRequirementsAddAndEditNew()
        {
            this.Details.Methods.StaffingRequirementsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void StaffingRequirementsAddAndEditNew_CanExecute(ref bool result);
        partial void StaffingRequirementsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the SaveProjectChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveProjectChanges()
        {
            this.Details.Methods.SaveProjectChanges.CreateInvocation().Execute();
        }
        partial void SaveProjectChanges_CanExecute(ref bool result);
        partial void SaveProjectChanges_Execute();

        /// <summary>
        /// Calls the DiscardProjectChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DiscardProjectChanges()
        {
            this.Details.Methods.DiscardProjectChanges.CreateInvocation().Execute();
        }
        partial void DiscardProjectChanges_CanExecute(ref bool result);
        partial void DiscardProjectChanges_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridEditSelected()
        {
            this.Details.Methods.gridEditSelected.CreateInvocation().Execute();
        }
        partial void gridEditSelected_CanExecute(ref bool result);
        partial void gridEditSelected_Execute();

        /// <summary>
        /// Calls the ViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewSkills()
        {
            this.Details.Methods.ViewSkills.CreateInvocation().Execute();
        }
        partial void ViewSkills_CanExecute(ref bool result);
        partial void ViewSkills_Execute();

        /// <summary>
        /// Calls the DodViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DodViewSkills()
        {
            this.Details.Methods.DodViewSkills.CreateInvocation().Execute();
        }
        partial void DodViewSkills_CanExecute(ref bool result);
        partial void DodViewSkills_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySet, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSet, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.Projects;
                var initializeCommandEntry = global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.CreateNewProject;
                var initializeMethodEntry = global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.CreateNewProject;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                __StatusBoardAllProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeSavingEvent,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeSavedEvent,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeClosingEvent,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeCreated,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeActivated,
                    global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.__StatusBoardAllProjects_InvokeSaveErrorEvent);
            private static void __StatusBoardAllProjects_InvokeInitializeDataWorkspace(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.StatusBoardAllProjects_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __StatusBoardAllProjects_InvokeSavingEvent(global::LightSwitchApplication.StatusBoardAllProjects s)
            {
                bool handled = false;
                s.StatusBoardAllProjects_Saving(ref handled);
                return handled;
            }
            private static void __StatusBoardAllProjects_InvokeSavedEvent(global::LightSwitchApplication.StatusBoardAllProjects s)
            {
                s.StatusBoardAllProjects_Saved();
            }
            private static bool __StatusBoardAllProjects_InvokeClosingEvent(global::LightSwitchApplication.StatusBoardAllProjects s)
            {
                bool cancel = false;
                s.StatusBoardAllProjects_Closing(ref cancel);
                return cancel;
            }
            private static void __StatusBoardAllProjects_InvokeCreated(global::LightSwitchApplication.StatusBoardAllProjects s)
            {
                s.StatusBoardAllProjects_Created();
            }
            private static void __StatusBoardAllProjects_InvokeActivated(global::LightSwitchApplication.StatusBoardAllProjects s)
            {
                s.StatusBoardAllProjects_Activated();
            }
            private static bool __StatusBoardAllProjects_InvokeSaveErrorEvent(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Exception ex)
            {
                bool handled = false;
                s.StatusBoardAllProjects_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery(global::System.Nullable<bool> ShowInactiveParameter, global::System.Nullable<bool> ExcludeInternal, global::System.Nullable<double> ProjectStatus)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                                global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                        this.Screen.DataWorkspace.ApplicationData.Projects,
                                        (p) => ((((p.IsDODOnly == false) && ((ShowInactiveParameter.HasValue && (p.Inactive == ShowInactiveParameter)) || (p.Inactive == false))) && ((p.ProjectStatus >= 0D) || (ProjectStatus.HasValue && (p.ProjectStatus < ProjectStatus)))) && ((p.ForecastException == false) && ((ExcludeInternal.HasValue && (p.Client.IsInternal == ExcludeInternal)) || (p.Client.IsInternal == false))))),
                                    (p) => p.Client.Name),
                                (p) => p.ProjectName),
                            "Client"),
                        "Director"),
                    "Manager");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StaffingRequirementsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.StaffingRequirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "EmployeeLevel"),
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                    loader,
                                    (e) => (e.Employee.IsDod == false)),
                                (e) => e.Employee.Country.Name),
                            "Projects"),
                        "Employee"),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                        this.Screen.DataWorkspace.ApplicationData.Employees,
                        (e) => e.FirstName),
                    (e) => e.LastName);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesLookupQuery(global::System.Nullable<int> Country, string Department, string Title, string Supervsr)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                        this.Screen.DataWorkspace.ApplicationData.EmployeesLookup(Country, Department, Title, Supervsr),
                        (e) => e.FirstName),
                    (e) => e.LastName);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectRateCollectionQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectRatesItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "EmployeeTitle"),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ActiveClientsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.ActiveClients();
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DodEmployeeAssignmentsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (e) => (e.Employee.IsDod == true)),
                        "Employee"),
                    "EmployeeLevel");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data _StaffingRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignment;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Data _ShowInactive;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Data _ExcludedClient;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Data _EmployeesLookup;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data _ProjectRateCollection;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double>.Data _ProjectStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client>.Data _ActiveClients;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _DodEmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _CreateNewProjectCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew2Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ShowJSCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ExcludeJSCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ShowInactiveBtnCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _StaffingRequirementsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _SaveProjectChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _DiscardProjectChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _gridEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _DodViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _CreateNewProjectMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _MethodMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew2Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ShowJSMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ExcludeJSMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ShowInactiveBtnMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _StaffingRequirementsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _SaveProjectChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _DiscardProjectChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _gridEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _ViewSkillsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data _DodViewSkillsMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.StaffingRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.EmployeeAssignment);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool> ShowInactive
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ShowInactive);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool> ExcludedClient
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ExcludedClient);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee> EmployeesLookup
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.EmployeesLookup);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate> ProjectRateCollection
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ProjectRateCollection);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double> ProjectStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ProjectStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client> ActiveClients
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.ActiveClients);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> DodEmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties.DodEmployeeAssignments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> CreateNewProject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.CreateNewProject);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.EmployeeAssignmentAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ShowJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.ShowJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ExcludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.ExcludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ShowInactiveBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.ShowInactiveBtn);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> SaveProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.SaveProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> DiscardProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.DiscardProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties.DodViewSkills);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> CreateNewProject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.CreateNewProject);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.EmployeeAssignmentAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> EmployeeAssignmentAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ShowJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.ShowJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ExcludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.ExcludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ShowInactiveBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.ShowInactiveBtn);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> SaveProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.SaveProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> DiscardProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.DiscardProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties.DodViewSkills);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery((global::System.Nullable<bool>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Nullable<double>)args[2]);
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry
                    StaffingRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry(
                        "StaffingRequirements",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._StaffingRequirements_OnLoaded);
                private static void _StaffingRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirements, sf);
                }
                private static void _StaffingRequirements_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaffingRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _StaffingRequirements_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.StaffingRequirementsQuery();
                }
                private static void _StaffingRequirements_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.StaffingRequirements_SelectionChanged();
                }
                private static void _StaffingRequirements_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.StaffingRequirements_Changed(e);
                }
                private static void _StaffingRequirements_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.StaffingRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignment = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignment",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeeAssignment_OnLoaded);
                private static void _EmployeeAssignment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignment, sf);
                }
                private static void _EmployeeAssignment_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignment_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignment_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentQuery();
                }
                private static void _EmployeeAssignment_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.EmployeeAssignment_SelectionChanged();
                }
                private static void _EmployeeAssignment_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignment_Changed(e);
                }
                private static void _EmployeeAssignment_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.EmployeeAssignment_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Entry
                    ShowInactive = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Entry(
                        "ShowInactive",
                        false,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ShowInactive_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ShowInactive_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ShowInactive_OnValueChanged);
                private static void _ShowInactive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactive, sf);
                }
                private static void _ShowInactive_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowInactive_Validate(r);
                }
                private static void _ShowInactive_OnValueChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.ShowInactive_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Entry
                    ExcludedClient = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Entry(
                        "ExcludedClient",
                        false,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ExcludedClient_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ExcludedClient_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ExcludedClient_OnValueChanged);
                private static void _ExcludedClient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, bool>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludedClient, sf);
                }
                private static void _ExcludedClient_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ExcludedClient_Validate(r);
                }
                private static void _ExcludedClient_OnValueChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.ExcludedClient_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    EmployeesLookup = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "EmployeesLookup",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._EmployeesLookup_OnLoaded);
                private static void _EmployeesLookup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeesLookup, sf);
                }
                private static void _EmployeesLookup_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeesLookup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeesLookup_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.EmployeesLookupQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3]);
                }
                private static void _EmployeesLookup_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.EmployeesLookup_SelectionChanged();
                }
                private static void _EmployeesLookup_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeesLookup_Changed(e);
                }
                private static void _EmployeesLookup_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.EmployeesLookup_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry
                    ProjectRateCollection = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry(
                        "ProjectRateCollection",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectRateCollection_OnLoaded);
                private static void _ProjectRateCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectRateCollection, sf);
                }
                private static void _ProjectRateCollection_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectRateCollection_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectRateCollection_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.ProjectRateCollectionQuery();
                }
                private static void _ProjectRateCollection_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.ProjectRateCollection_SelectionChanged();
                }
                private static void _ProjectRateCollection_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectRateCollection_Changed(e);
                }
                private static void _ProjectRateCollection_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.ProjectRateCollection_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double>.Entry
                    ProjectStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double>.Entry(
                        "ProjectStatusFilter",
                        false,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectStatusFilter_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectStatusFilter_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ProjectStatusFilter_OnValueChanged);
                private static void _ProjectStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, double>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectStatusFilter, sf);
                }
                private static void _ProjectStatusFilter_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectStatusFilter_Validate(r);
                }
                private static void _ProjectStatusFilter_OnValueChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.ProjectStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    ActiveClients = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "ActiveClients",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._ActiveClients_OnLoaded);
                private static void _ActiveClients_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveClients, sf);
                }
                private static void _ActiveClients_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ActiveClients_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ActiveClients_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.ActiveClientsQuery();
                }
                private static void _ActiveClients_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.ActiveClients_SelectionChanged();
                }
                private static void _ActiveClients_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ActiveClients_Changed(e);
                }
                private static void _ActiveClients_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.ActiveClients_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    DodEmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "DodEmployeeAssignments",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_Validate,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.PropertySetProperties._DodEmployeeAssignments_OnLoaded);
                private static void _DodEmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._DodEmployeeAssignments, sf);
                }
                private static void _DodEmployeeAssignments_Validate(global::LightSwitchApplication.StatusBoardAllProjects s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DodEmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _DodEmployeeAssignments_CreateQuery(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object[] args)
                {
                    return d.DodEmployeeAssignmentsQuery();
                }
                private static void _DodEmployeeAssignments_SelectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s)
                {
                    s.DodEmployeeAssignments_SelectionChanged();
                }
                private static void _DodEmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.StatusBoardAllProjects s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.DodEmployeeAssignments_Changed(e);
                }
                private static void _DodEmployeeAssignments_OnLoaded(global::LightSwitchApplication.StatusBoardAllProjects s, bool succeeded)
                {
                    s.DodEmployeeAssignments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    CreateNewProject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "CreateNewProject",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._CreateNewProject_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._CreateNewProject_CreateExecutableObject);
                private static void _CreateNewProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewProjectCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateNewProject_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.CreateNewProject.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.Method.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddNew_CreateExecutableObject);
                private static void _EmployeeAssignmentAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.EmployeeAssignmentAddNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew1_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew2_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew2Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew2_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew2.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ShowJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ShowJS",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ShowJS_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ShowJS_CreateExecutableObject);
                private static void _ShowJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowJSCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ShowJS_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.ShowJS.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ExcludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ExcludeJS",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ExcludeJS_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ExcludeJS_CreateExecutableObject);
                private static void _ExcludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludeJSCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExcludeJS_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.ExcludeJS.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ShowInactiveBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ShowInactiveBtn",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ShowInactiveBtn_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ShowInactiveBtn_CreateExecutableObject);
                private static void _ShowInactiveBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactiveBtnCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ShowInactiveBtn_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.ShowInactiveBtn.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_CreateExecutableObject);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _StaffingRequirementsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.StaffingRequirementsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    SaveProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "SaveProjectChanges",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._SaveProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._SaveProjectChanges_CreateExecutableObject);
                private static void _SaveProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveProjectChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveProjectChanges_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.SaveProjectChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    DiscardProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "DiscardProjectChanges",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._DiscardProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._DiscardProjectChanges_CreateExecutableObject);
                private static void _DiscardProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardProjectChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DiscardProjectChanges_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.DiscardProjectChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._gridEditSelected_CreateExecutableObject);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridEditSelected_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.gridEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._ViewSkills_CreateExecutableObject);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewSkills_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.ViewSkills.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.CommandSetProperties._DodViewSkills_CreateExecutableObject);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DodViewSkills_CreateExecutableObject(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass)d).Methods.DodViewSkills.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    CreateNewProject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "CreateNewProject",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._CreateNewProject_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._CreateNewProject_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._CreateNewProject_InvokeMethod);
                private static void _CreateNewProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewProjectMethod, sf);
                }
                private static global::System.Exception _CreateNewProject_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateNewProject_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateNewProject_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateNewProject_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_InvokeMethod);
                private static void _EmployeeAssignmentAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddNewMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddNew_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddNew_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew1_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew2Method, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew2_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew2_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew2_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew2_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ShowJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ShowJS",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowJS_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowJS_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowJS_InvokeMethod);
                private static void _ShowJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowJSMethod, sf);
                }
                private static global::System.Exception _ShowJS_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ShowJS_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ShowJS_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ShowJS_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ExcludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ExcludeJS",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ExcludeJS_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ExcludeJS_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ExcludeJS_InvokeMethod);
                private static void _ExcludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludeJSMethod, sf);
                }
                private static global::System.Exception _ExcludeJS_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExcludeJS_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExcludeJS_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExcludeJS_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ShowInactiveBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ShowInactiveBtn",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowInactiveBtn_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowInactiveBtn_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ShowInactiveBtn_InvokeMethod);
                private static void _ShowInactiveBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactiveBtnMethod, sf);
                }
                private static global::System.Exception _ShowInactiveBtn_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ShowInactiveBtn_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ShowInactiveBtn_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ShowInactiveBtn_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_InvokeMethod);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _StaffingRequirementsAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.StaffingRequirementsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _StaffingRequirementsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.StaffingRequirementsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    SaveProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "SaveProjectChanges",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._SaveProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._SaveProjectChanges_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._SaveProjectChanges_InvokeMethod);
                private static void _SaveProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveProjectChangesMethod, sf);
                }
                private static global::System.Exception _SaveProjectChanges_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveProjectChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveProjectChanges_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveProjectChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    DiscardProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "DiscardProjectChanges",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DiscardProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DiscardProjectChanges_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DiscardProjectChanges_InvokeMethod);
                private static void _DiscardProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardProjectChangesMethod, sf);
                }
                private static global::System.Exception _DiscardProjectChanges_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DiscardProjectChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DiscardProjectChanges_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DiscardProjectChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridEditSelected_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._gridEditSelected_InvokeMethod);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedMethod, sf);
                }
                private static global::System.Exception _gridEditSelected_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridEditSelected_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ViewSkills_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._ViewSkills_InvokeMethod);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsMethod, sf);
                }
                private static global::System.Exception _ViewSkills_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewSkills_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewSkills_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DodViewSkills_CanInvoke,
                        global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass.MethodSetProperties._DodViewSkills_InvokeMethod);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardAllProjects, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsMethod, sf);
                }
                private static global::System.Exception _DodViewSkills_CanInvoke(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DodViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DodViewSkills_InvokeMethod(global::LightSwitchApplication.StatusBoardAllProjects.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DodViewSkills_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class StatusBoardFiltered
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private StatusBoardFiltered() : base("LightSwitchApplication:StatusBoardFiltered")
        {
            global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static StatusBoardFiltered CreateInstance()
        {
            return new global::LightSwitchApplication.StatusBoardFiltered(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardFiltered_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void ProjectUserID_Changed();

        partial void ShowInactive_Changed();

        partial void ExcludedClient_Changed();

        partial void ProjectStatus_Changed();

        partial void StaffingRequirements_SelectionChanged();

        partial void StaffingRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Loaded(bool succeeded);

        partial void EmployeeAssignment_SelectionChanged();

        partial void EmployeeAssignment_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Loaded(bool succeeded);

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void EmployeesLookup_SelectionChanged();

        partial void EmployeesLookup_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Loaded(bool succeeded);

        partial void ProjectRateCollection_SelectionChanged();

        partial void ProjectRateCollection_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Loaded(bool succeeded);

        partial void ActiveClients_SelectionChanged();

        partial void ActiveClients_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_Loaded(bool succeeded);

        partial void Customers_SelectionChanged();

        partial void Customers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Loaded(bool succeeded);

        partial void DODEmployeeAssignments_SelectionChanged();

        partial void DODEmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployeeAssignments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectUserID
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectUserID);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectUserID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectUserID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ShowInactive
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ShowInactive);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ShowInactive, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowInactive_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ExcludedClient
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ExcludedClient);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ExcludedClient, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExcludedClient_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double ProjectStatus
        {
            get 
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectStatus);
            }
            set
            {
                global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.SetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectStatus, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectStatus_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the StaffingRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.StaffingRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignment visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.EmployeeAssignment);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeesLookup visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> EmployeesLookup
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.EmployeesLookup);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectRateCollection visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectRate> ProjectRateCollection
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectRateCollection);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ActiveClients visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client> ActiveClients
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ActiveClients);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Customers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Customer> Customers
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Customers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the DODEmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> DODEmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.DODEmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the CreateNewProject screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CreateNewProject()
        {
            this.Details.Methods.CreateNewProject.CreateInvocation().Execute();
        }
        partial void CreateNewProject_CanExecute(ref bool result);
        partial void CreateNewProject_Execute();

        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddNew()
        {
            this.Details.Methods.EmployeeAssignmentAddNew.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddNew_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddNew_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew1()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew1_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew2 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew2()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew2.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew2_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew2_Execute();

        /// <summary>
        /// Calls the ShowJS screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ShowJS()
        {
            this.Details.Methods.ShowJS.CreateInvocation().Execute();
        }
        partial void ShowJS_CanExecute(ref bool result);
        partial void ShowJS_Execute();

        /// <summary>
        /// Calls the ExcludeJS screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExcludeJS()
        {
            this.Details.Methods.ExcludeJS.CreateInvocation().Execute();
        }
        partial void ExcludeJS_CanExecute(ref bool result);
        partial void ExcludeJS_Execute();

        /// <summary>
        /// Calls the ShowInactiveBtn screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ShowInactiveBtn()
        {
            this.Details.Methods.ShowInactiveBtn.CreateInvocation().Execute();
        }
        partial void ShowInactiveBtn_CanExecute(ref bool result);
        partial void ShowInactiveBtn_Execute();

        /// <summary>
        /// Calls the StaffingRequirementsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void StaffingRequirementsAddAndEditNew()
        {
            this.Details.Methods.StaffingRequirementsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void StaffingRequirementsAddAndEditNew_CanExecute(ref bool result);
        partial void StaffingRequirementsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew1()
        {
            this.Details.Methods.gridAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew1_CanExecute(ref bool result);
        partial void gridAddAndEditNew1_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew2 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew2()
        {
            this.Details.Methods.gridAddAndEditNew2.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew2_CanExecute(ref bool result);
        partial void gridAddAndEditNew2_Execute();

        /// <summary>
        /// Calls the gridEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridEditSelected()
        {
            this.Details.Methods.gridEditSelected.CreateInvocation().Execute();
        }
        partial void gridEditSelected_CanExecute(ref bool result);
        partial void gridEditSelected_Execute();

        /// <summary>
        /// Calls the SaveProjectChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveProjectChanges()
        {
            this.Details.Methods.SaveProjectChanges.CreateInvocation().Execute();
        }
        partial void SaveProjectChanges_CanExecute(ref bool result);
        partial void SaveProjectChanges_Execute();

        /// <summary>
        /// Calls the DiscardProjectChanges screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DiscardProjectChanges()
        {
            this.Details.Methods.DiscardProjectChanges.CreateInvocation().Execute();
        }
        partial void DiscardProjectChanges_CanExecute(ref bool result);
        partial void DiscardProjectChanges_Execute();

        /// <summary>
        /// Calls the ViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewSkills()
        {
            this.Details.Methods.ViewSkills.CreateInvocation().Execute();
        }
        partial void ViewSkills_CanExecute(ref bool result);
        partial void ViewSkills_Execute();

        /// <summary>
        /// Calls the InvoiceSummaryReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void InvoiceSummaryReport()
        {
            this.Details.Methods.InvoiceSummaryReport.CreateInvocation().Execute();
        }
        partial void InvoiceSummaryReport_CanExecute(ref bool result);
        partial void InvoiceSummaryReport_Execute();

        /// <summary>
        /// Calls the DodViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DodViewSkills()
        {
            this.Details.Methods.DodViewSkills.CreateInvocation().Execute();
        }
        partial void DodViewSkills_CanExecute(ref bool result);
        partial void DodViewSkills_Execute();

        /// <summary>
        /// Calls the CustomersDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CustomersDeleteSelected()
        {
            this.Details.Methods.CustomersDeleteSelected.CreateInvocation().Execute();
        }
        partial void CustomersDeleteSelected_CanExecute(ref bool result);
        partial void CustomersDeleteSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySet, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSet, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Projects;
                var initializeCommandEntry = global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.CreateNewProject;
                var initializeMethodEntry = global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.CreateNewProject;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                __StatusBoardFilteredEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeSavingEvent,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeSavedEvent,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeClosingEvent,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeCreated,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeActivated,
                    global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.__StatusBoardFiltered_InvokeSaveErrorEvent);
            private static void __StatusBoardFiltered_InvokeInitializeDataWorkspace(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.StatusBoardFiltered_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __StatusBoardFiltered_InvokeSavingEvent(global::LightSwitchApplication.StatusBoardFiltered s)
            {
                bool handled = false;
                s.StatusBoardFiltered_Saving(ref handled);
                return handled;
            }
            private static void __StatusBoardFiltered_InvokeSavedEvent(global::LightSwitchApplication.StatusBoardFiltered s)
            {
                s.StatusBoardFiltered_Saved();
            }
            private static bool __StatusBoardFiltered_InvokeClosingEvent(global::LightSwitchApplication.StatusBoardFiltered s)
            {
                bool cancel = false;
                s.StatusBoardFiltered_Closing(ref cancel);
                return cancel;
            }
            private static void __StatusBoardFiltered_InvokeCreated(global::LightSwitchApplication.StatusBoardFiltered s)
            {
                s.StatusBoardFiltered_Created();
            }
            private static void __StatusBoardFiltered_InvokeActivated(global::LightSwitchApplication.StatusBoardFiltered s)
            {
                s.StatusBoardFiltered_Activated();
            }
            private static bool __StatusBoardFiltered_InvokeSaveErrorEvent(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Exception ex)
            {
                bool handled = false;
                s.StatusBoardFiltered_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery(global::System.Nullable<bool> IsInternal, global::System.Nullable<double> ProjectStatus, global::System.Nullable<bool> Inactive)
            {
                string loggedOnUser1 = global::LightSwitchApplication.GlobalStrings.LoggedOnUser();
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                this.Screen.DataWorkspace.ApplicationData.Projects,
                                (p) => (((((p.Client.IsInternal == false) || (IsInternal.HasValue && (p.Client.IsInternal == IsInternal))) && ((p.ProjectStatus >= 0D) || (ProjectStatus.HasValue && (p.ProjectStatus < ProjectStatus)))) && ((p.Inactive == false) || (Inactive.HasValue && (p.Inactive == Inactive)))) && ((p.Director.UserID.CompareTo(loggedOnUser1) == 0) || (p.Manager.UserID.CompareTo(loggedOnUser1) == 0)))),
                            "Client"),
                        "Director"),
                    "Manager");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StaffingRequirementsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.StaffingRequirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "EmployeeLevel"),
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                loader,
                                (e) => (e.Employee.IsDod == false)),
                            "Projects"),
                        "Employee"),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    this.Screen.DataWorkspace.ApplicationData.Employees,
                    (e) => e.FirstName);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesLookupQuery(global::System.Nullable<int> Country, string Department, string Title, string Supervsr)
            {
                return this.Screen.DataWorkspace.ApplicationData.EmployeesLookup(Country, Department, Title, Supervsr);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectRateCollectionQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectRatesItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "EmployeeTitle"),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ActiveClientsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.ActiveClients();
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CustomersQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Customer> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Customer>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.Customers).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DODEmployeeAssignmentsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (e) => (e.Employee.IsDod == true)),
                        "Employee"),
                    "EmployeeLevel");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string>.Data _ProjectUserID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Data _ShowInactive;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Data _ExcludedClient;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double>.Data _ProjectStatus;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data _StaffingRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignment;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Data _EmployeesLookup;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data _ProjectRateCollection;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client>.Data _ActiveClients;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer>.Data _Customers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _DODEmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _CreateNewProjectCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew2Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ShowJSCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ExcludeJSCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ShowInactiveBtnCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _StaffingRequirementsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNew2Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _SaveProjectChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _DiscardProjectChangesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _InvoiceSummaryReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _DodViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _CustomersDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _CreateNewProjectMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _MethodMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _EmployeeAssignmentAddAndEditNew2Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ShowJSMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ExcludeJSMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ShowInactiveBtnMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _StaffingRequirementsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNew1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridAddAndEditNew2Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _gridEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _SaveProjectChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _DiscardProjectChangesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _ViewSkillsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _InvoiceSummaryReportMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _DodViewSkillsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data _CustomersDeleteSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string> ProjectUserID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectUserID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool> ShowInactive
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ShowInactive);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool> ExcludedClient
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ExcludedClient);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double> ProjectStatus
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectStatus);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.StaffingRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.EmployeeAssignment);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee> EmployeesLookup
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.EmployeesLookup);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate> ProjectRateCollection
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ProjectRateCollection);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client> ActiveClients
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.ActiveClients);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer> Customers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.Customers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> DODEmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties.DODEmployeeAssignments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> CreateNewProject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.CreateNewProject);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.EmployeeAssignmentAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ShowJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.ShowJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ExcludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.ExcludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ShowInactiveBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.ShowInactiveBtn);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.gridAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.gridAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> SaveProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.SaveProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> DiscardProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.DiscardProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> InvoiceSummaryReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.InvoiceSummaryReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.DodViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> CustomersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties.CustomersDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> CreateNewProject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.CreateNewProject);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.EmployeeAssignmentAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> EmployeeAssignmentAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ShowJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.ShowJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ExcludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.ExcludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ShowInactiveBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.ShowInactiveBtn);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.gridAddAndEditNew1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridAddAndEditNew2
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.gridAddAndEditNew2);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> SaveProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.SaveProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> DiscardProjectChanges
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.DiscardProjectChanges);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> InvoiceSummaryReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.InvoiceSummaryReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.DodViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass> CustomersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>)base.GetItem(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties.CustomersDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery((global::System.Nullable<bool>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<bool>)args[2]);
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string>.Entry
                    ProjectUserID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string>.Entry(
                        "ProjectUserID",
                        false,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectUserID_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectUserID_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectUserID_OnValueChanged);
                private static void _ProjectUserID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, string>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectUserID, sf);
                }
                private static void _ProjectUserID_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectUserID_Validate(r);
                }
                private static void _ProjectUserID_OnValueChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ProjectUserID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Entry
                    ShowInactive = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Entry(
                        "ShowInactive",
                        false,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ShowInactive_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ShowInactive_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ShowInactive_OnValueChanged);
                private static void _ShowInactive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactive, sf);
                }
                private static void _ShowInactive_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowInactive_Validate(r);
                }
                private static void _ShowInactive_OnValueChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ShowInactive_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Entry
                    ExcludedClient = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Entry(
                        "ExcludedClient",
                        false,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ExcludedClient_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ExcludedClient_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ExcludedClient_OnValueChanged);
                private static void _ExcludedClient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, bool>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludedClient, sf);
                }
                private static void _ExcludedClient_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ExcludedClient_Validate(r);
                }
                private static void _ExcludedClient_OnValueChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ExcludedClient_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double>.Entry
                    ProjectStatus = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double>.Entry(
                        "ProjectStatus",
                        false,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectStatus_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectStatus_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectStatus_OnValueChanged);
                private static void _ProjectStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, double>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectStatus, sf);
                }
                private static void _ProjectStatus_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectStatus_Validate(r);
                }
                private static void _ProjectStatus_OnValueChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ProjectStatus_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry
                    StaffingRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry(
                        "StaffingRequirements",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._StaffingRequirements_OnLoaded);
                private static void _StaffingRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirements, sf);
                }
                private static void _StaffingRequirements_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaffingRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _StaffingRequirements_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.StaffingRequirementsQuery();
                }
                private static void _StaffingRequirements_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.StaffingRequirements_SelectionChanged();
                }
                private static void _StaffingRequirements_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.StaffingRequirements_Changed(e);
                }
                private static void _StaffingRequirements_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.StaffingRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignment = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignment",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeeAssignment_OnLoaded);
                private static void _EmployeeAssignment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignment, sf);
                }
                private static void _EmployeeAssignment_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignment_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignment_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentQuery();
                }
                private static void _EmployeeAssignment_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.EmployeeAssignment_SelectionChanged();
                }
                private static void _EmployeeAssignment_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignment_Changed(e);
                }
                private static void _EmployeeAssignment_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.EmployeeAssignment_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    EmployeesLookup = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "EmployeesLookup",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._EmployeesLookup_OnLoaded);
                private static void _EmployeesLookup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeesLookup, sf);
                }
                private static void _EmployeesLookup_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeesLookup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeesLookup_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.EmployeesLookupQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3]);
                }
                private static void _EmployeesLookup_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.EmployeesLookup_SelectionChanged();
                }
                private static void _EmployeesLookup_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeesLookup_Changed(e);
                }
                private static void _EmployeesLookup_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.EmployeesLookup_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry
                    ProjectRateCollection = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry(
                        "ProjectRateCollection",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ProjectRateCollection_OnLoaded);
                private static void _ProjectRateCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectRateCollection, sf);
                }
                private static void _ProjectRateCollection_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectRateCollection_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectRateCollection_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.ProjectRateCollectionQuery();
                }
                private static void _ProjectRateCollection_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ProjectRateCollection_SelectionChanged();
                }
                private static void _ProjectRateCollection_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectRateCollection_Changed(e);
                }
                private static void _ProjectRateCollection_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.ProjectRateCollection_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    ActiveClients = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "ActiveClients",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._ActiveClients_OnLoaded);
                private static void _ActiveClients_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ActiveClients, sf);
                }
                private static void _ActiveClients_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ActiveClients_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ActiveClients_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.ActiveClientsQuery();
                }
                private static void _ActiveClients_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.ActiveClients_SelectionChanged();
                }
                private static void _ActiveClients_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ActiveClients_Changed(e);
                }
                private static void _ActiveClients_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.ActiveClients_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer>.Entry
                    Customers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer>.Entry(
                        "Customers",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._Customers_OnLoaded);
                private static void _Customers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.Customer>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._Customers, sf);
                }
                private static void _Customers_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Customers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Customers_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.CustomersQuery();
                }
                private static void _Customers_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.Customers_SelectionChanged();
                }
                private static void _Customers_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Customers_Changed(e);
                }
                private static void _Customers_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.Customers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    DODEmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "DODEmployeeAssignments",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_Validate,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.PropertySetProperties._DODEmployeeAssignments_OnLoaded);
                private static void _DODEmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._DODEmployeeAssignments, sf);
                }
                private static void _DODEmployeeAssignments_Validate(global::LightSwitchApplication.StatusBoardFiltered s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DODEmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _DODEmployeeAssignments_CreateQuery(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object[] args)
                {
                    return d.DODEmployeeAssignmentsQuery();
                }
                private static void _DODEmployeeAssignments_SelectionChanged(global::LightSwitchApplication.StatusBoardFiltered s)
                {
                    s.DODEmployeeAssignments_SelectionChanged();
                }
                private static void _DODEmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.StatusBoardFiltered s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.DODEmployeeAssignments_Changed(e);
                }
                private static void _DODEmployeeAssignments_OnLoaded(global::LightSwitchApplication.StatusBoardFiltered s, bool succeeded)
                {
                    s.DODEmployeeAssignments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    CreateNewProject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "CreateNewProject",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._CreateNewProject_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._CreateNewProject_CreateExecutableObject);
                private static void _CreateNewProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewProjectCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CreateNewProject_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.CreateNewProject.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.Method.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddNew_CreateExecutableObject);
                private static void _EmployeeAssignmentAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.EmployeeAssignmentAddNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew1_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew2_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew2Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew2_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew2.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ShowJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ShowJS",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ShowJS_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ShowJS_CreateExecutableObject);
                private static void _ShowJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowJSCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ShowJS_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.ShowJS.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ExcludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ExcludeJS",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ExcludeJS_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ExcludeJS_CreateExecutableObject);
                private static void _ExcludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludeJSCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExcludeJS_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.ExcludeJS.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ShowInactiveBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ShowInactiveBtn",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ShowInactiveBtn_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ShowInactiveBtn_CreateExecutableObject);
                private static void _ShowInactiveBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactiveBtnCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ShowInactiveBtn_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.ShowInactiveBtn.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_CreateExecutableObject);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _StaffingRequirementsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.StaffingRequirementsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew1_CreateExecutableObject);
                private static void _gridAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.gridAddAndEditNew1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridAddAndEditNew2_CreateExecutableObject);
                private static void _gridAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew2Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew2_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.gridAddAndEditNew2.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._gridEditSelected_CreateExecutableObject);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridEditSelected_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.gridEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    SaveProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "SaveProjectChanges",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._SaveProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._SaveProjectChanges_CreateExecutableObject);
                private static void _SaveProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveProjectChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveProjectChanges_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.SaveProjectChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    DiscardProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "DiscardProjectChanges",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._DiscardProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._DiscardProjectChanges_CreateExecutableObject);
                private static void _DiscardProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardProjectChangesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DiscardProjectChanges_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.DiscardProjectChanges.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._ViewSkills_CreateExecutableObject);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewSkills_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.ViewSkills.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    InvoiceSummaryReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "InvoiceSummaryReport",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._InvoiceSummaryReport_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._InvoiceSummaryReport_CreateExecutableObject);
                private static void _InvoiceSummaryReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._InvoiceSummaryReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _InvoiceSummaryReport_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.InvoiceSummaryReport.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._DodViewSkills_CreateExecutableObject);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DodViewSkills_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.DodViewSkills.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    CustomersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "CustomersDeleteSelected",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._CustomersDeleteSelected_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.CommandSetProperties._CustomersDeleteSelected_CreateExecutableObject);
                private static void _CustomersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CustomersDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.StatusBoardFiltered.DetailsClass)d).Methods.CustomersDeleteSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    CreateNewProject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "CreateNewProject",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CreateNewProject_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CreateNewProject_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CreateNewProject_InvokeMethod);
                private static void _CreateNewProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._CreateNewProjectMethod, sf);
                }
                private static global::System.Exception _CreateNewProject_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CreateNewProject_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CreateNewProject_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CreateNewProject_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddNew_InvokeMethod);
                private static void _EmployeeAssignmentAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddNewMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddNew_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddNew_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew1_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew1_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew2_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNew2Method, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew2_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew2_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew2_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew2_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ShowJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ShowJS",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowJS_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowJS_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowJS_InvokeMethod);
                private static void _ShowJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowJSMethod, sf);
                }
                private static global::System.Exception _ShowJS_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ShowJS_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ShowJS_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ShowJS_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ExcludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ExcludeJS",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ExcludeJS_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ExcludeJS_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ExcludeJS_InvokeMethod);
                private static void _ExcludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludeJSMethod, sf);
                }
                private static global::System.Exception _ExcludeJS_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExcludeJS_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExcludeJS_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExcludeJS_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ShowInactiveBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ShowInactiveBtn",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowInactiveBtn_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowInactiveBtn_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ShowInactiveBtn_InvokeMethod);
                private static void _ShowInactiveBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInactiveBtnMethod, sf);
                }
                private static global::System.Exception _ShowInactiveBtn_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ShowInactiveBtn_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ShowInactiveBtn_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ShowInactiveBtn_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_InvokeMethod);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _StaffingRequirementsAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.StaffingRequirementsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _StaffingRequirementsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.StaffingRequirementsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew1",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew1_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew1_InvokeMethod);
                private static void _gridAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _gridAddAndEditNew1_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridAddAndEditNew2 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridAddAndEditNew2",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew2_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew2_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridAddAndEditNew2_InvokeMethod);
                private static void _gridAddAndEditNew2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew2Method, sf);
                }
                private static global::System.Exception _gridAddAndEditNew2_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew2_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew2_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew2_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridEditSelected_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._gridEditSelected_InvokeMethod);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedMethod, sf);
                }
                private static global::System.Exception _gridEditSelected_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridEditSelected_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    SaveProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "SaveProjectChanges",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._SaveProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._SaveProjectChanges_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._SaveProjectChanges_InvokeMethod);
                private static void _SaveProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveProjectChangesMethod, sf);
                }
                private static global::System.Exception _SaveProjectChanges_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveProjectChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveProjectChanges_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveProjectChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    DiscardProjectChanges = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "DiscardProjectChanges",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DiscardProjectChanges_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DiscardProjectChanges_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DiscardProjectChanges_InvokeMethod);
                private static void _DiscardProjectChanges_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._DiscardProjectChangesMethod, sf);
                }
                private static global::System.Exception _DiscardProjectChanges_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DiscardProjectChanges_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DiscardProjectChanges_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DiscardProjectChanges_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ViewSkills_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._ViewSkills_InvokeMethod);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsMethod, sf);
                }
                private static global::System.Exception _ViewSkills_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewSkills_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewSkills_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    InvoiceSummaryReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "InvoiceSummaryReport",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._InvoiceSummaryReport_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._InvoiceSummaryReport_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._InvoiceSummaryReport_InvokeMethod);
                private static void _InvoiceSummaryReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._InvoiceSummaryReportMethod, sf);
                }
                private static global::System.Exception _InvoiceSummaryReport_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.InvoiceSummaryReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _InvoiceSummaryReport_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.InvoiceSummaryReport_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DodViewSkills_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._DodViewSkills_InvokeMethod);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsMethod, sf);
                }
                private static global::System.Exception _DodViewSkills_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DodViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DodViewSkills_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DodViewSkills_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry
                    CustomersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Entry(
                        "CustomersDeleteSelected",
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CustomersDeleteSelected_Stub,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CustomersDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.StatusBoardFiltered.DetailsClass.MethodSetProperties._CustomersDeleteSelected_InvokeMethod);
                private static void _CustomersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardFiltered.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.StatusBoardFiltered, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass>.Data> c, global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _CustomersDeleteSelected_CanInvoke(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CustomersDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CustomersDeleteSelected_InvokeMethod(global::LightSwitchApplication.StatusBoardFiltered.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CustomersDeleteSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EmployeeUpdate
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EmployeeUpdate() : base("LightSwitchApplication:EmployeeUpdate")
        {
            global::LightSwitchApplication.EmployeeUpdate.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EmployeeUpdate CreateInstance()
        {
            return new global::LightSwitchApplication.EmployeeUpdate(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeUpdate_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void CountryFilter_Changed();

        partial void SortByName_SelectionChanged();

        partial void SortByName_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortByName_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.EmployeeUpdate.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Country CountryFilter
        {
            get 
            {
                return global::LightSwitchApplication.EmployeeUpdate.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.CountryFilter);
            }
            set
            {
                global::LightSwitchApplication.EmployeeUpdate.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.CountryFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the SortByName visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeTitle> SortByName
        {
            get
            {
                return global::LightSwitchApplication.EmployeeUpdate.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.SortByName);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortByName_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ImportFromExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ImportFromExcel()
        {
            this.Details.Methods.ImportFromExcel.CreateInvocation().Execute();
        }
        partial void ImportFromExcel_CanExecute(ref bool result);
        partial void ImportFromExcel_Execute();

        /// <summary>
        /// Calls the FilterByCountry screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FilterByCountry()
        {
            this.Details.Methods.FilterByCountry.CreateInvocation().Execute();
        }
        partial void FilterByCountry_CanExecute(ref bool result);
        partial void FilterByCountry_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew1()
        {
            this.Details.Methods.gridAddAndEditNew1.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew1_CanExecute(ref bool result);
        partial void gridAddAndEditNew1_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySet, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSet, global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.Employees;
                var initializeCommandEntry = global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties.ImportFromExcel;
                var initializeMethodEntry = global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties.ImportFromExcel;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                __EmployeeUpdateEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeSavingEvent,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeSavedEvent,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeClosingEvent,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeCreated,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeActivated,
                    global::LightSwitchApplication.EmployeeUpdate.DetailsClass.__EmployeeUpdate_InvokeSaveErrorEvent);
            private static void __EmployeeUpdate_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EmployeeUpdate s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EmployeeUpdate_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EmployeeUpdate_InvokeSavingEvent(global::LightSwitchApplication.EmployeeUpdate s)
            {
                bool handled = false;
                s.EmployeeUpdate_Saving(ref handled);
                return handled;
            }
            private static void __EmployeeUpdate_InvokeSavedEvent(global::LightSwitchApplication.EmployeeUpdate s)
            {
                s.EmployeeUpdate_Saved();
            }
            private static bool __EmployeeUpdate_InvokeClosingEvent(global::LightSwitchApplication.EmployeeUpdate s)
            {
                bool cancel = false;
                s.EmployeeUpdate_Closing(ref cancel);
                return cancel;
            }
            private static void __EmployeeUpdate_InvokeCreated(global::LightSwitchApplication.EmployeeUpdate s)
            {
                s.EmployeeUpdate_Created();
            }
            private static void __EmployeeUpdate_InvokeActivated(global::LightSwitchApplication.EmployeeUpdate s)
            {
                s.EmployeeUpdate_Activated();
            }
            private static bool __EmployeeUpdate_InvokeSaveErrorEvent(global::LightSwitchApplication.EmployeeUpdate s, global::System.Exception ex)
            {
                bool handled = false;
                s.EmployeeUpdate_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery(string CountryName)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                    this.Screen.DataWorkspace.ApplicationData.Employees,
                                    (e) => e.Department),
                                "EmployeeTitle"),
                            "DeptEmployee"),
                        "Country"),
                    "Supervsr");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SortByNameQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.SortByName();
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country>.Data _CountryFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Data _SortByName;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _ImportFromExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _FilterByCountryCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _gridAddAndEditNew1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _ImportFromExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _FilterByCountryMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data _gridAddAndEditNew1Method;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country> CountryFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.CountryFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle> SortByName
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties.SortByName);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> FilterByCountry
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties.FilterByCountry);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> gridAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties.gridAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> FilterByCountry
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties.FilterByCountry);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass> gridAddAndEditNew1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties.gridAddAndEditNew1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.EmployeeUpdate s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery((string)args[0]);
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.EmployeeUpdate s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.EmployeeUpdate s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.EmployeeUpdate s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    CountryFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "CountryFilter",
                        false,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._CountryFilter_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._CountryFilter_Validate,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._CountryFilter_OnValueChanged);
                private static void _CountryFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._CountryFilter, sf);
                }
                private static void _CountryFilter_Validate(global::LightSwitchApplication.EmployeeUpdate s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CountryFilter_Validate(r);
                }
                private static void _CountryFilter_OnValueChanged(global::LightSwitchApplication.EmployeeUpdate s)
                {
                    s.CountryFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Entry
                    SortByName = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Entry(
                        "SortByName",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_Validate,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_CreateQuery,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_SelectionChanged,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.PropertySetProperties._SortByName_OnLoaded);
                private static void _SortByName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._SortByName, sf);
                }
                private static void _SortByName_Validate(global::LightSwitchApplication.EmployeeUpdate s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SortByName_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SortByName_CreateQuery(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object[] args)
                {
                    return d.SortByNameQuery();
                }
                private static void _SortByName_SelectionChanged(global::LightSwitchApplication.EmployeeUpdate s)
                {
                    s.SortByName_SelectionChanged();
                }
                private static void _SortByName_OnCollectionChanged(global::LightSwitchApplication.EmployeeUpdate s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SortByName_Changed(e);
                }
                private static void _SortByName_OnLoaded(global::LightSwitchApplication.EmployeeUpdate s, bool succeeded)
                {
                    s.SortByName_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._ImportFromExcel_CreateExecutableObject);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ImportFromExcel_CreateExecutableObject(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EmployeeUpdate.DetailsClass)d).Methods.ImportFromExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    FilterByCountry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "FilterByCountry",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._FilterByCountry_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._FilterByCountry_CreateExecutableObject);
                private static void _FilterByCountry_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterByCountryCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FilterByCountry_CreateExecutableObject(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EmployeeUpdate.DetailsClass)d).Methods.FilterByCountry.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EmployeeUpdate.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    gridAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "gridAddAndEditNew1",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._gridAddAndEditNew1_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.CommandSetProperties._gridAddAndEditNew1_CreateExecutableObject);
                private static void _gridAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew1_CreateExecutableObject(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EmployeeUpdate.DetailsClass)d).Methods.gridAddAndEditNew1.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._ImportFromExcel_CanInvoke,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._ImportFromExcel_InvokeMethod);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelMethod, sf);
                }
                private static global::System.Exception _ImportFromExcel_CanInvoke(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ImportFromExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ImportFromExcel_InvokeMethod(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ImportFromExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    FilterByCountry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "FilterByCountry",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._FilterByCountry_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._FilterByCountry_CanInvoke,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._FilterByCountry_InvokeMethod);
                private static void _FilterByCountry_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterByCountryMethod, sf);
                }
                private static global::System.Exception _FilterByCountry_CanInvoke(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FilterByCountry_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FilterByCountry_InvokeMethod(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FilterByCountry_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry
                    gridAddAndEditNew1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Entry(
                        "gridAddAndEditNew1",
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew1_Stub,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew1_CanInvoke,
                        global::LightSwitchApplication.EmployeeUpdate.DetailsClass.MethodSetProperties._gridAddAndEditNew1_InvokeMethod);
                private static void _gridAddAndEditNew1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeUpdate.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeUpdate, global::LightSwitchApplication.EmployeeUpdate.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNew1Method, sf);
                }
                private static global::System.Exception _gridAddAndEditNew1_CanInvoke(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew1_InvokeMethod(global::LightSwitchApplication.EmployeeUpdate.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew1_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class OpenStaffingRequirementsReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private OpenStaffingRequirementsReport() : base("LightSwitchApplication:OpenStaffingRequirementsReport")
        {
            global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static OpenStaffingRequirementsReport CreateInstance()
        {
            return new global::LightSwitchApplication.OpenStaffingRequirementsReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OpenStaffingRequirementsReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StaffingRequirements_SelectionChanged();

        partial void StaffingRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Loaded(bool succeeded);

        /// <summary>
        /// Gets the StaffingRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
        {
            get
            {
                return global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties.StaffingRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySet, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.CommandSet, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties.StaffingRequirements;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>.Entry
                __OpenStaffingRequirementsReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeSavingEvent,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeSavedEvent,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeClosingEvent,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeCreated,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeActivated,
                    global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.__OpenStaffingRequirementsReport_InvokeSaveErrorEvent);
            private static void __OpenStaffingRequirementsReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.OpenStaffingRequirementsReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.OpenStaffingRequirementsReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __OpenStaffingRequirementsReport_InvokeSavingEvent(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
            {
                bool handled = false;
                s.OpenStaffingRequirementsReport_Saving(ref handled);
                return handled;
            }
            private static void __OpenStaffingRequirementsReport_InvokeSavedEvent(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
            {
                s.OpenStaffingRequirementsReport_Saved();
            }
            private static bool __OpenStaffingRequirementsReport_InvokeClosingEvent(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
            {
                bool cancel = false;
                s.OpenStaffingRequirementsReport_Closing(ref cancel);
                return cancel;
            }
            private static void __OpenStaffingRequirementsReport_InvokeCreated(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
            {
                s.OpenStaffingRequirementsReport_Created();
            }
            private static void __OpenStaffingRequirementsReport_InvokeActivated(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
            {
                s.OpenStaffingRequirementsReport_Activated();
            }
            private static bool __OpenStaffingRequirementsReport_InvokeSaveErrorEvent(global::LightSwitchApplication.OpenStaffingRequirementsReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.OpenStaffingRequirementsReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StaffingRequirementsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.StaffingRequirements;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data _StaffingRequirements;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement>)base.GetItem(global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties.StaffingRequirements);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry
                    StaffingRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry(
                        "StaffingRequirements",
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_Stub,
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_Validate,
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_CreateQuery,
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_SelectionChanged,
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass.PropertySetProperties._StaffingRequirements_OnLoaded);
                private static void _StaffingRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.OpenStaffingRequirementsReport, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data> c, global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirements, sf);
                }
                private static void _StaffingRequirements_Validate(global::LightSwitchApplication.OpenStaffingRequirementsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaffingRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _StaffingRequirements_CreateQuery(global::LightSwitchApplication.OpenStaffingRequirementsReport.DetailsClass d, object[] args)
                {
                    return d.StaffingRequirementsQuery();
                }
                private static void _StaffingRequirements_SelectionChanged(global::LightSwitchApplication.OpenStaffingRequirementsReport s)
                {
                    s.StaffingRequirements_SelectionChanged();
                }
                private static void _StaffingRequirements_OnCollectionChanged(global::LightSwitchApplication.OpenStaffingRequirementsReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.StaffingRequirements_Changed(e);
                }
                private static void _StaffingRequirements_OnLoaded(global::LightSwitchApplication.OpenStaffingRequirementsReport s, bool succeeded)
                {
                    s.StaffingRequirements_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EmployeeAssignReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EmployeeAssignReport() : base("LightSwitchApplication:EmployeeAssignReport")
        {
            global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EmployeeAssignReport CreateInstance()
        {
            return new global::LightSwitchApplication.EmployeeAssignReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ShowConsulting_Changed();

        partial void EmployeeAssignmentReports_SelectionChanged();

        partial void EmployeeAssignmentReports_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentReports_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShowConsulting
        {
            get 
            {
                return global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.ShowConsulting);
            }
            set
            {
                global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.SetValue(this, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.ShowConsulting, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowConsulting_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignmentReports visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignmentReport> EmployeeAssignmentReports
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.EmployeeAssignmentReports);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentReports_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the FilterConsultingBtn screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FilterConsultingBtn()
        {
            this.Details.Methods.FilterConsultingBtn.CreateInvocation().Execute();
        }
        partial void FilterConsultingBtn_CanExecute(ref bool result);
        partial void FilterConsultingBtn_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySet, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSet, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.ShowConsulting;
                var initializeCommandEntry = global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSetProperties.FilterConsultingBtn;
                var initializeMethodEntry = global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSetProperties.FilterConsultingBtn;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry
                __EmployeeAssignReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeSavingEvent,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeSavedEvent,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeClosingEvent,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeCreated,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeActivated,
                    global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.__EmployeeAssignReport_InvokeSaveErrorEvent);
            private static void __EmployeeAssignReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EmployeeAssignReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EmployeeAssignReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EmployeeAssignReport_InvokeSavingEvent(global::LightSwitchApplication.EmployeeAssignReport s)
            {
                bool handled = false;
                s.EmployeeAssignReport_Saving(ref handled);
                return handled;
            }
            private static void __EmployeeAssignReport_InvokeSavedEvent(global::LightSwitchApplication.EmployeeAssignReport s)
            {
                s.EmployeeAssignReport_Saved();
            }
            private static bool __EmployeeAssignReport_InvokeClosingEvent(global::LightSwitchApplication.EmployeeAssignReport s)
            {
                bool cancel = false;
                s.EmployeeAssignReport_Closing(ref cancel);
                return cancel;
            }
            private static void __EmployeeAssignReport_InvokeCreated(global::LightSwitchApplication.EmployeeAssignReport s)
            {
                s.EmployeeAssignReport_Created();
            }
            private static void __EmployeeAssignReport_InvokeActivated(global::LightSwitchApplication.EmployeeAssignReport s)
            {
                s.EmployeeAssignReport_Activated();
            }
            private static bool __EmployeeAssignReport_InvokeSaveErrorEvent(global::LightSwitchApplication.EmployeeAssignReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.EmployeeAssignReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentReportsQuery(string ShowConsulting)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.EmployeeAssignmentReports,
                    (e) => ((ShowConsulting == null) || (e.Department.CompareTo(ShowConsulting) == 0)));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string>.Data _ShowConsulting;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport>.Data _EmployeeAssignmentReports;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Data _FilterConsultingBtnCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Data _FilterConsultingBtnMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string> ShowConsulting
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.ShowConsulting);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport> EmployeeAssignmentReports
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport>)base.GetItem(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties.EmployeeAssignmentReports);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string>.Entry
                    ShowConsulting = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string>.Entry(
                        "ShowConsulting",
                        false,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._ShowConsulting_Stub,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._ShowConsulting_Validate,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._ShowConsulting_OnValueChanged);
                private static void _ShowConsulting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowConsulting, sf);
                }
                private static void _ShowConsulting_Validate(global::LightSwitchApplication.EmployeeAssignReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowConsulting_Validate(r);
                }
                private static void _ShowConsulting_OnValueChanged(global::LightSwitchApplication.EmployeeAssignReport s)
                {
                    s.ShowConsulting_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport>.Entry
                    EmployeeAssignmentReports = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport>.Entry(
                        "EmployeeAssignmentReports",
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_Stub,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_Validate,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.PropertySetProperties._EmployeeAssignmentReports_OnLoaded);
                private static void _EmployeeAssignmentReports_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentReport>.Data> c, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentReports, sf);
                }
                private static void _EmployeeAssignmentReports_Validate(global::LightSwitchApplication.EmployeeAssignReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignmentReports_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignmentReports_CreateQuery(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentReportsQuery((string)args[0]);
                }
                private static void _EmployeeAssignmentReports_SelectionChanged(global::LightSwitchApplication.EmployeeAssignReport s)
                {
                    s.EmployeeAssignmentReports_SelectionChanged();
                }
                private static void _EmployeeAssignmentReports_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignmentReports_Changed(e);
                }
                private static void _EmployeeAssignmentReports_OnLoaded(global::LightSwitchApplication.EmployeeAssignReport s, bool succeeded)
                {
                    s.EmployeeAssignmentReports_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_CreateExecutableObject);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FilterConsultingBtn_CreateExecutableObject(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EmployeeAssignReport.DetailsClass)d).Methods.FilterConsultingBtn.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_CanInvoke,
                        global::LightSwitchApplication.EmployeeAssignReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_InvokeMethod);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EmployeeAssignReport, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass>.Data> c, global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnMethod, sf);
                }
                private static global::System.Exception _FilterConsultingBtn_CanInvoke(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FilterConsultingBtn_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FilterConsultingBtn_InvokeMethod(global::LightSwitchApplication.EmployeeAssignReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FilterConsultingBtn_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeForecastScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private TimeForecastScreen() : base("LightSwitchApplication:TimeForecastScreen")
        {
            global::LightSwitchApplication.TimeForecastScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static TimeForecastScreen CreateInstance()
        {
            return new global::LightSwitchApplication.TimeForecastScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void TimeForecasts_SelectionChanged();

        partial void TimeForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Loaded(bool succeeded);

        partial void ProjectExceptions_SelectionChanged();

        partial void ProjectExceptions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Loaded(bool succeeded);

        partial void GetSpecificForecast_SelectionChanged();

        partial void GetSpecificForecast_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_Loaded(bool succeeded);

        partial void EmployeeID_Changed();

        partial void TimeForecastExceptionsCollection_SelectionChanged();

        partial void TimeForecastExceptionsCollection_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsCollection_Loaded(bool succeeded);

        partial void ProjectsExceptions_SelectionChanged();

        partial void ProjectsExceptions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsExceptions_Loaded(bool succeeded);

        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecast> TimeForecasts
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.TimeForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectExceptions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> ProjectExceptions
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.ProjectExceptions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the GetSpecificForecast visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Forecast> GetSpecificForecast
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.GetSpecificForecast);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmployeeID
        {
            get 
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.EmployeeID);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.EmployeeID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecastExceptionsCollection visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsCollection
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsCollection);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsCollection_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectsExceptions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> ProjectsExceptions
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.ProjectsExceptions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsExceptions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DateTest screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DateTest()
        {
            this.Details.Methods.DateTest.CreateInvocation().Execute();
        }
        partial void DateTest_CanExecute(ref bool result);
        partial void DateTest_Execute();

        /// <summary>
        /// Calls the TimeForecastsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TimeForecastsAddAndEditNew()
        {
            this.Details.Methods.TimeForecastsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void TimeForecastsAddAndEditNew_CanExecute(ref bool result);
        partial void TimeForecastsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the TimeForecastExceptionsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TimeForecastExceptionsAddAndEditNew()
        {
            this.Details.Methods.TimeForecastExceptionsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void TimeForecastExceptionsAddAndEditNew_CanExecute(ref bool result);
        partial void TimeForecastExceptionsAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySet, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSet, global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.Employees;
                var initializeCommandEntry = global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties.DateTest;
                var initializeMethodEntry = global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties.DateTest;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                __TimeForecastScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeCreated,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeActivated,
                    global::LightSwitchApplication.TimeForecastScreen.DetailsClass.__TimeForecastScreen_InvokeSaveErrorEvent);
            private static void __TimeForecastScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.TimeForecastScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __TimeForecastScreen_InvokeSavingEvent(global::LightSwitchApplication.TimeForecastScreen s)
            {
                bool handled = false;
                s.TimeForecastScreen_Saving(ref handled);
                return handled;
            }
            private static void __TimeForecastScreen_InvokeSavedEvent(global::LightSwitchApplication.TimeForecastScreen s)
            {
                s.TimeForecastScreen_Saved();
            }
            private static bool __TimeForecastScreen_InvokeClosingEvent(global::LightSwitchApplication.TimeForecastScreen s)
            {
                bool cancel = false;
                s.TimeForecastScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __TimeForecastScreen_InvokeCreated(global::LightSwitchApplication.TimeForecastScreen s)
            {
                s.TimeForecastScreen_Created();
            }
            private static void __TimeForecastScreen_InvokeActivated(global::LightSwitchApplication.TimeForecastScreen s)
            {
                s.TimeForecastScreen_Activated();
            }
            private static bool __TimeForecastScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.TimeForecastScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.TimeForecastScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                string loggedOnUser1 = global::LightSwitchApplication.GlobalStrings.LoggedOnUser();
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.Employees,
                        (e) => (e.UserID.CompareTo(loggedOnUser1) == 0)),
                    "Country");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastsQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecast> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecast>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.TimeForecasts).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => (t.Project.ForecastException == false)),
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectExceptionsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.ProjectExceptions();
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable GetSpecificForecastQuery(global::System.Nullable<int> employeeId)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.GetSpecificForecast(employeeId);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastExceptionsCollectionQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecastExceptions> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecastExceptions>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.TimeForecastExceptionsCollection).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsExceptionsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ApplicationData.Projects,
                    (p) => (p.ForecastException == true));
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.Projects,
                        (p) => (p.ForecastException == false)),
                    (p) => p.ProjectName);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data _TimeForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data _ProjectExceptions;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast>.Data _GetSpecificForecast;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int>.Data _EmployeeID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data _TimeForecastExceptionsCollection;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data _ProjectsExceptions;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _DateTestCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _TimeForecastsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _TimeForecastExceptionsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _DateTestMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _TimeForecastsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data _TimeForecastExceptionsAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast> TimeForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.TimeForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project> ProjectExceptions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.ProjectExceptions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast> GetSpecificForecast
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.GetSpecificForecast);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int> EmployeeID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.EmployeeID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsCollection
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsCollection);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project> ProjectsExceptions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.ProjectsExceptions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties.Projects);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> DateTest
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties.DateTest);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> TimeForecastsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties.TimeForecastsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> TimeForecastExceptionsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties.TimeForecastExceptionsAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> DateTest
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties.DateTest);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> TimeForecastsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties.TimeForecastsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass> TimeForecastExceptionsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties.TimeForecastExceptionsAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry
                    TimeForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry(
                        "TimeForecasts",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecasts_OnLoaded);
                private static void _TimeForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecasts, sf);
                }
                private static void _TimeForecasts_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecasts_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.TimeForecastsQuery();
                }
                private static void _TimeForecasts_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.TimeForecasts_SelectionChanged();
                }
                private static void _TimeForecasts_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecasts_Changed(e);
                }
                private static void _TimeForecasts_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.TimeForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    ProjectExceptions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "ProjectExceptions",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectExceptions_OnLoaded);
                private static void _ProjectExceptions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectExceptions, sf);
                }
                private static void _ProjectExceptions_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectExceptions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectExceptions_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.ProjectExceptionsQuery();
                }
                private static void _ProjectExceptions_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.ProjectExceptions_SelectionChanged();
                }
                private static void _ProjectExceptions_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectExceptions_Changed(e);
                }
                private static void _ProjectExceptions_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.ProjectExceptions_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast>.Entry
                    GetSpecificForecast = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast>.Entry(
                        "GetSpecificForecast",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._GetSpecificForecast_OnLoaded);
                private static void _GetSpecificForecast_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Forecast>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._GetSpecificForecast, sf);
                }
                private static void _GetSpecificForecast_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.GetSpecificForecast_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _GetSpecificForecast_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.GetSpecificForecastQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _GetSpecificForecast_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.GetSpecificForecast_SelectionChanged();
                }
                private static void _GetSpecificForecast_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.GetSpecificForecast_Changed(e);
                }
                private static void _GetSpecificForecast_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.GetSpecificForecast_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int>.Entry
                    EmployeeID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int>.Entry(
                        "EmployeeID",
                        false,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._EmployeeID_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._EmployeeID_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._EmployeeID_OnValueChanged);
                private static void _EmployeeID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, int>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeID, sf);
                }
                private static void _EmployeeID_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeID_Validate(r);
                }
                private static void _EmployeeID_OnValueChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.EmployeeID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry
                    TimeForecastExceptionsCollection = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry(
                        "TimeForecastExceptionsCollection",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_OnLoaded);
                private static void _TimeForecastExceptionsCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastExceptionsCollection, sf);
                }
                private static void _TimeForecastExceptionsCollection_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecastExceptionsCollection_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecastExceptionsCollection_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.TimeForecastExceptionsCollectionQuery();
                }
                private static void _TimeForecastExceptionsCollection_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.TimeForecastExceptionsCollection_SelectionChanged();
                }
                private static void _TimeForecastExceptionsCollection_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecastExceptionsCollection_Changed(e);
                }
                private static void _TimeForecastExceptionsCollection_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.TimeForecastExceptionsCollection_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    ProjectsExceptions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "ProjectsExceptions",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._ProjectsExceptions_OnLoaded);
                private static void _ProjectsExceptions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectsExceptions, sf);
                }
                private static void _ProjectsExceptions_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectsExceptions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectsExceptions_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.ProjectsExceptionsQuery();
                }
                private static void _ProjectsExceptions_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.ProjectsExceptions_SelectionChanged();
                }
                private static void _ProjectsExceptions_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectsExceptions_Changed(e);
                }
                private static void _ProjectsExceptions_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.ProjectsExceptions_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.TimeForecastScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.TimeForecastScreen s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.TimeForecastScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.TimeForecastScreen s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    DateTest = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "DateTest",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._DateTest_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._DateTest_CreateExecutableObject);
                private static void _DateTest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._DateTestCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DateTest_CreateExecutableObject(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeForecastScreen.DetailsClass)d).Methods.DateTest.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    TimeForecastsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "TimeForecastsAddAndEditNew",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._TimeForecastsAddAndEditNew_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._TimeForecastsAddAndEditNew_CreateExecutableObject);
                private static void _TimeForecastsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TimeForecastsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeForecastScreen.DetailsClass)d).Methods.TimeForecastsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    TimeForecastExceptionsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "TimeForecastExceptionsAddAndEditNew",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._TimeForecastExceptionsAddAndEditNew_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.CommandSetProperties._TimeForecastExceptionsAddAndEditNew_CreateExecutableObject);
                private static void _TimeForecastExceptionsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastExceptionsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TimeForecastExceptionsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeForecastScreen.DetailsClass)d).Methods.TimeForecastExceptionsAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    DateTest = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "DateTest",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._DateTest_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._DateTest_CanInvoke,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._DateTest_InvokeMethod);
                private static void _DateTest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._DateTestMethod, sf);
                }
                private static global::System.Exception _DateTest_CanInvoke(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DateTest_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DateTest_InvokeMethod(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DateTest_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    TimeForecastsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "TimeForecastsAddAndEditNew",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastsAddAndEditNew_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastsAddAndEditNew_InvokeMethod);
                private static void _TimeForecastsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _TimeForecastsAddAndEditNew_CanInvoke(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TimeForecastsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TimeForecastsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TimeForecastsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry
                    TimeForecastExceptionsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Entry(
                        "TimeForecastExceptionsAddAndEditNew",
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastExceptionsAddAndEditNew_Stub,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastExceptionsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.TimeForecastScreen.DetailsClass.MethodSetProperties._TimeForecastExceptionsAddAndEditNew_InvokeMethod);
                private static void _TimeForecastExceptionsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastScreen, global::LightSwitchApplication.TimeForecastScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastExceptionsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _TimeForecastExceptionsAddAndEditNew_CanInvoke(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TimeForecastExceptionsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TimeForecastExceptionsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.TimeForecastScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TimeForecastExceptionsAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class UnassignedEmployeeReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private UnassignedEmployeeReport() : base("LightSwitchApplication:UnassignedEmployeeReport")
        {
            global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static UnassignedEmployeeReport CreateInstance()
        {
            return new global::LightSwitchApplication.UnassignedEmployeeReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployeeReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void FilterTerm_Changed();

        partial void UnassignedEmployees_SelectionChanged();

        partial void UnassignedEmployees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployees_Loaded(bool succeeded);

        partial void ShowConsulting_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FilterTerm
        {
            get 
            {
                return global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.GetValue(this, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.FilterTerm);
            }
            set
            {
                global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.SetValue(this, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.FilterTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the UnassignedEmployees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.UnassignedEmployee> UnassignedEmployees
        {
            get
            {
                return global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.GetValue(this, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.UnassignedEmployees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShowConsulting
        {
            get 
            {
                return global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.GetValue(this, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.ShowConsulting);
            }
            set
            {
                global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.SetValue(this, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.ShowConsulting, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowConsulting_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the FilterConsultingBtn screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FilterConsultingBtn()
        {
            this.Details.Methods.FilterConsultingBtn.CreateInvocation().Execute();
        }
        partial void FilterConsultingBtn_CanExecute(ref bool result);
        partial void FilterConsultingBtn_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySet, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSet, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.FilterTerm;
                var initializeCommandEntry = global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSetProperties.FilterConsultingBtn;
                var initializeMethodEntry = global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSetProperties.FilterConsultingBtn;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry
                __UnassignedEmployeeReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeSavingEvent,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeSavedEvent,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeClosingEvent,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeCreated,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeActivated,
                    global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.__UnassignedEmployeeReport_InvokeSaveErrorEvent);
            private static void __UnassignedEmployeeReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.UnassignedEmployeeReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.UnassignedEmployeeReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __UnassignedEmployeeReport_InvokeSavingEvent(global::LightSwitchApplication.UnassignedEmployeeReport s)
            {
                bool handled = false;
                s.UnassignedEmployeeReport_Saving(ref handled);
                return handled;
            }
            private static void __UnassignedEmployeeReport_InvokeSavedEvent(global::LightSwitchApplication.UnassignedEmployeeReport s)
            {
                s.UnassignedEmployeeReport_Saved();
            }
            private static bool __UnassignedEmployeeReport_InvokeClosingEvent(global::LightSwitchApplication.UnassignedEmployeeReport s)
            {
                bool cancel = false;
                s.UnassignedEmployeeReport_Closing(ref cancel);
                return cancel;
            }
            private static void __UnassignedEmployeeReport_InvokeCreated(global::LightSwitchApplication.UnassignedEmployeeReport s)
            {
                s.UnassignedEmployeeReport_Created();
            }
            private static void __UnassignedEmployeeReport_InvokeActivated(global::LightSwitchApplication.UnassignedEmployeeReport s)
            {
                s.UnassignedEmployeeReport_Activated();
            }
            private static bool __UnassignedEmployeeReport_InvokeSaveErrorEvent(global::LightSwitchApplication.UnassignedEmployeeReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.UnassignedEmployeeReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable UnassignedEmployeesQuery(string ShowConsulting)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.UnassignedEmployees,
                    (u) => ((ShowConsulting == null) || (u.Department.CompareTo(ShowConsulting) == 0)));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Data _FilterTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee>.Data _UnassignedEmployees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Data _ShowConsulting;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Data _FilterConsultingBtnCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Data _FilterConsultingBtnMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string> FilterTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.FilterTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee> UnassignedEmployees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee>)base.GetItem(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.UnassignedEmployees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string> ShowConsulting
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties.ShowConsulting);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Entry
                    FilterTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Entry(
                        "FilterTerm",
                        false,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._FilterTerm_Stub,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._FilterTerm_Validate,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._FilterTerm_OnValueChanged);
                private static void _FilterTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterTerm, sf);
                }
                private static void _FilterTerm_Validate(global::LightSwitchApplication.UnassignedEmployeeReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterTerm_Validate(r);
                }
                private static void _FilterTerm_OnValueChanged(global::LightSwitchApplication.UnassignedEmployeeReport s)
                {
                    s.FilterTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee>.Entry
                    UnassignedEmployees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee>.Entry(
                        "UnassignedEmployees",
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_Stub,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_Validate,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_CreateQuery,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_SelectionChanged,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_OnCollectionChanged,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._UnassignedEmployees_OnLoaded);
                private static void _UnassignedEmployees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::LightSwitchApplication.UnassignedEmployee>.Data> c, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object sf)
                {
                    c(d, ref d._UnassignedEmployees, sf);
                }
                private static void _UnassignedEmployees_Validate(global::LightSwitchApplication.UnassignedEmployeeReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UnassignedEmployees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _UnassignedEmployees_CreateQuery(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object[] args)
                {
                    return d.UnassignedEmployeesQuery((string)args[0]);
                }
                private static void _UnassignedEmployees_SelectionChanged(global::LightSwitchApplication.UnassignedEmployeeReport s)
                {
                    s.UnassignedEmployees_SelectionChanged();
                }
                private static void _UnassignedEmployees_OnCollectionChanged(global::LightSwitchApplication.UnassignedEmployeeReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.UnassignedEmployees_Changed(e);
                }
                private static void _UnassignedEmployees_OnLoaded(global::LightSwitchApplication.UnassignedEmployeeReport s, bool succeeded)
                {
                    s.UnassignedEmployees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Entry
                    ShowConsulting = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Entry(
                        "ShowConsulting",
                        false,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._ShowConsulting_Stub,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._ShowConsulting_Validate,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.PropertySetProperties._ShowConsulting_OnValueChanged);
                private static void _ShowConsulting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowConsulting, sf);
                }
                private static void _ShowConsulting_Validate(global::LightSwitchApplication.UnassignedEmployeeReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowConsulting_Validate(r);
                }
                private static void _ShowConsulting_OnValueChanged(global::LightSwitchApplication.UnassignedEmployeeReport s)
                {
                    s.ShowConsulting_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_CreateExecutableObject);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Data> c, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FilterConsultingBtn_CreateExecutableObject(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass)d).Methods.FilterConsultingBtn.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_CanInvoke,
                        global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_InvokeMethod);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.UnassignedEmployeeReport, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass>.Data> c, global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnMethod, sf);
                }
                private static global::System.Exception _FilterConsultingBtn_CanInvoke(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FilterConsultingBtn_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FilterConsultingBtn_InvokeMethod(global::LightSwitchApplication.UnassignedEmployeeReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FilterConsultingBtn_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class StatusBoardReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private StatusBoardReport() : base("LightSwitchApplication:StatusBoardReport")
        {
            global::LightSwitchApplication.StatusBoardReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static StatusBoardReport CreateInstance()
        {
            return new global::LightSwitchApplication.StatusBoardReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusBoardReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void StatusSummaries_SelectionChanged();

        partial void StatusSummaries_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummaries_Loaded(bool succeeded);

        /// <summary>
        /// Gets the StatusSummaries visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.StatusSummary> StatusSummaries
        {
            get
            {
                return global::LightSwitchApplication.StatusBoardReport.DetailsClass.GetValue(this, global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties.StatusSummaries);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummaries_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySet, global::LightSwitchApplication.StatusBoardReport.DetailsClass.CommandSet, global::LightSwitchApplication.StatusBoardReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties.StatusSummaries;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>.Entry
                __StatusBoardReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeSavingEvent,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeSavedEvent,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeClosingEvent,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeCreated,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeActivated,
                    global::LightSwitchApplication.StatusBoardReport.DetailsClass.__StatusBoardReport_InvokeSaveErrorEvent);
            private static void __StatusBoardReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.StatusBoardReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.StatusBoardReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __StatusBoardReport_InvokeSavingEvent(global::LightSwitchApplication.StatusBoardReport s)
            {
                bool handled = false;
                s.StatusBoardReport_Saving(ref handled);
                return handled;
            }
            private static void __StatusBoardReport_InvokeSavedEvent(global::LightSwitchApplication.StatusBoardReport s)
            {
                s.StatusBoardReport_Saved();
            }
            private static bool __StatusBoardReport_InvokeClosingEvent(global::LightSwitchApplication.StatusBoardReport s)
            {
                bool cancel = false;
                s.StatusBoardReport_Closing(ref cancel);
                return cancel;
            }
            private static void __StatusBoardReport_InvokeCreated(global::LightSwitchApplication.StatusBoardReport s)
            {
                s.StatusBoardReport_Created();
            }
            private static void __StatusBoardReport_InvokeActivated(global::LightSwitchApplication.StatusBoardReport s)
            {
                s.StatusBoardReport_Activated();
            }
            private static bool __StatusBoardReport_InvokeSaveErrorEvent(global::LightSwitchApplication.StatusBoardReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.StatusBoardReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.StatusBoardReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.StatusBoardReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StatusSummariesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.StatusSummaries,
                    (s) => (s.Inactive == false));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary>.Data _StatusSummaries;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary> StatusSummaries
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary>)base.GetItem(global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties.StatusSummaries);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary>.Entry
                    StatusSummaries = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary>.Entry(
                        "StatusSummaries",
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_Stub,
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_Validate,
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_CreateQuery,
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_SelectionChanged,
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_OnCollectionChanged,
                        global::LightSwitchApplication.StatusBoardReport.DetailsClass.PropertySetProperties._StatusSummaries_OnLoaded);
                private static void _StatusSummaries_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.StatusBoardReport, global::LightSwitchApplication.StatusBoardReport.DetailsClass, global::LightSwitchApplication.StatusSummary>.Data> c, global::LightSwitchApplication.StatusBoardReport.DetailsClass d, object sf)
                {
                    c(d, ref d._StatusSummaries, sf);
                }
                private static void _StatusSummaries_Validate(global::LightSwitchApplication.StatusBoardReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StatusSummaries_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _StatusSummaries_CreateQuery(global::LightSwitchApplication.StatusBoardReport.DetailsClass d, object[] args)
                {
                    return d.StatusSummariesQuery();
                }
                private static void _StatusSummaries_SelectionChanged(global::LightSwitchApplication.StatusBoardReport s)
                {
                    s.StatusSummaries_SelectionChanged();
                }
                private static void _StatusSummaries_OnCollectionChanged(global::LightSwitchApplication.StatusBoardReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.StatusSummaries_Changed(e);
                }
                private static void _StatusSummaries_OnLoaded(global::LightSwitchApplication.StatusBoardReport s, bool succeeded)
                {
                    s.StatusSummaries_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectExceptions
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProjectExceptions() : base("LightSwitchApplication:ProjectExceptions")
        {
            global::LightSwitchApplication.ProjectExceptions.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProjectExceptions CreateInstance()
        {
            return new global::LightSwitchApplication.ProjectExceptions(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ProjectExceptions1_SelectionChanged();

        partial void ProjectExceptions1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the ProjectExceptions1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> ProjectExceptions1
        {
            get
            {
                return global::LightSwitchApplication.ProjectExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties.ProjectExceptions1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySet, global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSet, global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties.ProjectExceptions1;
                var initializeCommandEntry = global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSetProperties.gridAddAndEditNew;
                var initializeMethodEntry = global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSetProperties.gridAddAndEditNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry
                __ProjectExceptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeSavingEvent,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeSavedEvent,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeClosingEvent,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeCreated,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeActivated,
                    global::LightSwitchApplication.ProjectExceptions.DetailsClass.__ProjectExceptions_InvokeSaveErrorEvent);
            private static void __ProjectExceptions_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProjectExceptions s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProjectExceptions_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProjectExceptions_InvokeSavingEvent(global::LightSwitchApplication.ProjectExceptions s)
            {
                bool handled = false;
                s.ProjectExceptions_Saving(ref handled);
                return handled;
            }
            private static void __ProjectExceptions_InvokeSavedEvent(global::LightSwitchApplication.ProjectExceptions s)
            {
                s.ProjectExceptions_Saved();
            }
            private static bool __ProjectExceptions_InvokeClosingEvent(global::LightSwitchApplication.ProjectExceptions s)
            {
                bool cancel = false;
                s.ProjectExceptions_Closing(ref cancel);
                return cancel;
            }
            private static void __ProjectExceptions_InvokeCreated(global::LightSwitchApplication.ProjectExceptions s)
            {
                s.ProjectExceptions_Created();
            }
            private static void __ProjectExceptions_InvokeActivated(global::LightSwitchApplication.ProjectExceptions s)
            {
                s.ProjectExceptions_Activated();
            }
            private static bool __ProjectExceptions_InvokeSaveErrorEvent(global::LightSwitchApplication.ProjectExceptions s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProjectExceptions_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectExceptions1Query()
            {
                return this.Screen.DataWorkspace.ApplicationData.ProjectExceptions();
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project>.Data _ProjectExceptions1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project> ProjectExceptions1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties.ProjectExceptions1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>)base.GetItem(global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    ProjectExceptions1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "ProjectExceptions1",
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_Stub,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_Validate,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_CreateQuery,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_SelectionChanged,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.PropertySetProperties._ProjectExceptions1_OnLoaded);
                private static void _ProjectExceptions1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectExceptions1, sf);
                }
                private static void _ProjectExceptions1_Validate(global::LightSwitchApplication.ProjectExceptions s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectExceptions1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectExceptions1_CreateQuery(global::LightSwitchApplication.ProjectExceptions.DetailsClass d, object[] args)
                {
                    return d.ProjectExceptions1Query();
                }
                private static void _ProjectExceptions1_SelectionChanged(global::LightSwitchApplication.ProjectExceptions s)
                {
                    s.ProjectExceptions1_SelectionChanged();
                }
                private static void _ProjectExceptions1_OnCollectionChanged(global::LightSwitchApplication.ProjectExceptions s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectExceptions1_Changed(e);
                }
                private static void _ProjectExceptions1_OnLoaded(global::LightSwitchApplication.ProjectExceptions s, bool succeeded)
                {
                    s.ProjectExceptions1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ProjectExceptions.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ProjectExceptions.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ProjectExceptions.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ProjectExceptions, global::LightSwitchApplication.ProjectExceptions.DetailsClass>.Data> c, global::LightSwitchApplication.ProjectExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.ProjectExceptions.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ProjectExceptions.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageHolidays
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageHolidays() : base("LightSwitchApplication:ManageHolidays")
        {
            global::LightSwitchApplication.ManageHolidays.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageHolidays CreateInstance()
        {
            return new global::LightSwitchApplication.ManageHolidays(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageHolidays_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Holidays_SelectionChanged();

        partial void Holidays_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Holidays visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Holiday> Holidays
        {
            get
            {
                return global::LightSwitchApplication.ManageHolidays.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties.Holidays);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySet, global::LightSwitchApplication.ManageHolidays.DetailsClass.CommandSet, global::LightSwitchApplication.ManageHolidays.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties.Holidays;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>.Entry
                __ManageHolidaysEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeCreated,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeActivated,
                    global::LightSwitchApplication.ManageHolidays.DetailsClass.__ManageHolidays_InvokeSaveErrorEvent);
            private static void __ManageHolidays_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageHolidays s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageHolidays_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageHolidays_InvokeSavingEvent(global::LightSwitchApplication.ManageHolidays s)
            {
                bool handled = false;
                s.ManageHolidays_Saving(ref handled);
                return handled;
            }
            private static void __ManageHolidays_InvokeSavedEvent(global::LightSwitchApplication.ManageHolidays s)
            {
                s.ManageHolidays_Saved();
            }
            private static bool __ManageHolidays_InvokeClosingEvent(global::LightSwitchApplication.ManageHolidays s)
            {
                bool cancel = false;
                s.ManageHolidays_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageHolidays_InvokeCreated(global::LightSwitchApplication.ManageHolidays s)
            {
                s.ManageHolidays_Created();
            }
            private static void __ManageHolidays_InvokeActivated(global::LightSwitchApplication.ManageHolidays s)
            {
                s.ManageHolidays_Activated();
            }
            private static bool __ManageHolidays_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageHolidays s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageHolidays_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageHolidays.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageHolidays.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable HolidaysQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Holidays;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday>.Data _Holidays;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday> Holidays
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday>)base.GetItem(global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties.Holidays);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday>.Entry
                    Holidays = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday>.Entry(
                        "Holidays",
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_Stub,
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_Validate,
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_CreateQuery,
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_SelectionChanged,
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_OnCollectionChanged,
                        global::LightSwitchApplication.ManageHolidays.DetailsClass.PropertySetProperties._Holidays_OnLoaded);
                private static void _Holidays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageHolidays.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageHolidays, global::LightSwitchApplication.ManageHolidays.DetailsClass, global::LightSwitchApplication.Holiday>.Data> c, global::LightSwitchApplication.ManageHolidays.DetailsClass d, object sf)
                {
                    c(d, ref d._Holidays, sf);
                }
                private static void _Holidays_Validate(global::LightSwitchApplication.ManageHolidays s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Holidays_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Holidays_CreateQuery(global::LightSwitchApplication.ManageHolidays.DetailsClass d, object[] args)
                {
                    return d.HolidaysQuery();
                }
                private static void _Holidays_SelectionChanged(global::LightSwitchApplication.ManageHolidays s)
                {
                    s.Holidays_SelectionChanged();
                }
                private static void _Holidays_OnCollectionChanged(global::LightSwitchApplication.ManageHolidays s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Holidays_Changed(e);
                }
                private static void _Holidays_OnLoaded(global::LightSwitchApplication.ManageHolidays s, bool succeeded)
                {
                    s.Holidays_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeForecastReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private TimeForecastReport() : base("LightSwitchApplication:TimeForecastReport")
        {
            global::LightSwitchApplication.TimeForecastReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static TimeForecastReport CreateInstance()
        {
            return new global::LightSwitchApplication.TimeForecastReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Forecasts_SelectionChanged();

        partial void Forecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_Loaded(bool succeeded);

        partial void MultiPeriodForecasts_SelectionChanged();

        partial void MultiPeriodForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_Loaded(bool succeeded);

        partial void ShowConsulting_Changed();

        partial void UtilizationTotal_Changed();

        /// <summary>
        /// Gets the Forecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Forecast> Forecasts
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.Forecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the MultiPeriodForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.MultiPeriodForecast> MultiPeriodForecasts
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.MultiPeriodForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShowConsulting
        {
            get 
            {
                return global::LightSwitchApplication.TimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.ShowConsulting);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastReport.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.ShowConsulting, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowConsulting_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal UtilizationTotal
        {
            get 
            {
                return global::LightSwitchApplication.TimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.UtilizationTotal);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastReport.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.UtilizationTotal, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UtilizationTotal_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the FilterConsultingBtn screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FilterConsultingBtn()
        {
            this.Details.Methods.FilterConsultingBtn.CreateInvocation().Execute();
        }
        partial void FilterConsultingBtn_CanExecute(ref bool result);
        partial void FilterConsultingBtn_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySet, global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSet, global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.Forecasts;
                var initializeCommandEntry = global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSetProperties.FilterConsultingBtn;
                var initializeMethodEntry = global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSetProperties.FilterConsultingBtn;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry
                __TimeForecastReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeSavingEvent,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeSavedEvent,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeClosingEvent,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeCreated,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeActivated,
                    global::LightSwitchApplication.TimeForecastReport.DetailsClass.__TimeForecastReport_InvokeSaveErrorEvent);
            private static void __TimeForecastReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.TimeForecastReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.TimeForecastReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __TimeForecastReport_InvokeSavingEvent(global::LightSwitchApplication.TimeForecastReport s)
            {
                bool handled = false;
                s.TimeForecastReport_Saving(ref handled);
                return handled;
            }
            private static void __TimeForecastReport_InvokeSavedEvent(global::LightSwitchApplication.TimeForecastReport s)
            {
                s.TimeForecastReport_Saved();
            }
            private static bool __TimeForecastReport_InvokeClosingEvent(global::LightSwitchApplication.TimeForecastReport s)
            {
                bool cancel = false;
                s.TimeForecastReport_Closing(ref cancel);
                return cancel;
            }
            private static void __TimeForecastReport_InvokeCreated(global::LightSwitchApplication.TimeForecastReport s)
            {
                s.TimeForecastReport_Created();
            }
            private static void __TimeForecastReport_InvokeActivated(global::LightSwitchApplication.TimeForecastReport s)
            {
                s.TimeForecastReport_Activated();
            }
            private static bool __TimeForecastReport_InvokeSaveErrorEvent(global::LightSwitchApplication.TimeForecastReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.TimeForecastReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ForecastsQuery()
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.Forecasts;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MultiPeriodForecastsQuery(string ShowConsulting)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.MultiPeriodForecasts,
                    (m) => ((ShowConsulting == null) || (m.Department.CompareTo(ShowConsulting) == 0)));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Data _Forecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data _MultiPeriodForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string>.Data _ShowConsulting;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal>.Data _UtilizationTotal;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Data _FilterConsultingBtnCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Data _FilterConsultingBtnMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast> Forecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.Forecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast> MultiPeriodForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.MultiPeriodForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string> ShowConsulting
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.ShowConsulting);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal> UtilizationTotal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties.UtilizationTotal);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass> FilterConsultingBtn
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSetProperties.FilterConsultingBtn);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Entry
                    Forecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Entry(
                        "Forecasts",
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_Validate,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_CreateQuery,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_OnLoaded);
                private static void _Forecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._Forecasts, sf);
                }
                private static void _Forecasts_Validate(global::LightSwitchApplication.TimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Forecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Forecasts_CreateQuery(global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object[] args)
                {
                    return d.ForecastsQuery();
                }
                private static void _Forecasts_SelectionChanged(global::LightSwitchApplication.TimeForecastReport s)
                {
                    s.Forecasts_SelectionChanged();
                }
                private static void _Forecasts_OnCollectionChanged(global::LightSwitchApplication.TimeForecastReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Forecasts_Changed(e);
                }
                private static void _Forecasts_OnLoaded(global::LightSwitchApplication.TimeForecastReport s, bool succeeded)
                {
                    s.Forecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry
                    MultiPeriodForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry(
                        "MultiPeriodForecasts",
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_Validate,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_CreateQuery,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_SelectionChanged,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_OnLoaded);
                private static void _MultiPeriodForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._MultiPeriodForecasts, sf);
                }
                private static void _MultiPeriodForecasts_Validate(global::LightSwitchApplication.TimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MultiPeriodForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _MultiPeriodForecasts_CreateQuery(global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object[] args)
                {
                    return d.MultiPeriodForecastsQuery((string)args[0]);
                }
                private static void _MultiPeriodForecasts_SelectionChanged(global::LightSwitchApplication.TimeForecastReport s)
                {
                    s.MultiPeriodForecasts_SelectionChanged();
                }
                private static void _MultiPeriodForecasts_OnCollectionChanged(global::LightSwitchApplication.TimeForecastReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.MultiPeriodForecasts_Changed(e);
                }
                private static void _MultiPeriodForecasts_OnLoaded(global::LightSwitchApplication.TimeForecastReport s, bool succeeded)
                {
                    s.MultiPeriodForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string>.Entry
                    ShowConsulting = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string>.Entry(
                        "ShowConsulting",
                        false,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._ShowConsulting_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._ShowConsulting_Validate,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._ShowConsulting_OnValueChanged);
                private static void _ShowConsulting_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowConsulting, sf);
                }
                private static void _ShowConsulting_Validate(global::LightSwitchApplication.TimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowConsulting_Validate(r);
                }
                private static void _ShowConsulting_OnValueChanged(global::LightSwitchApplication.TimeForecastReport s)
                {
                    s.ShowConsulting_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal>.Entry
                    UtilizationTotal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal>.Entry(
                        "UtilizationTotal",
                        false,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._UtilizationTotal_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._UtilizationTotal_Validate,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.PropertySetProperties._UtilizationTotal_OnValueChanged);
                private static void _UtilizationTotal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._UtilizationTotal, sf);
                }
                private static void _UtilizationTotal_Validate(global::LightSwitchApplication.TimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UtilizationTotal_Validate(r);
                }
                private static void _UtilizationTotal_OnValueChanged(global::LightSwitchApplication.TimeForecastReport s)
                {
                    s.UtilizationTotal_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.CommandSetProperties._FilterConsultingBtn_CreateExecutableObject);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FilterConsultingBtn_CreateExecutableObject(global::LightSwitchApplication.TimeForecastReport.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeForecastReport.DetailsClass)d).Methods.FilterConsultingBtn.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry
                    FilterConsultingBtn = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Entry(
                        "FilterConsultingBtn",
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_Stub,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_CanInvoke,
                        global::LightSwitchApplication.TimeForecastReport.DetailsClass.MethodSetProperties._FilterConsultingBtn_InvokeMethod);
                private static void _FilterConsultingBtn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeForecastReport, global::LightSwitchApplication.TimeForecastReport.DetailsClass>.Data> c, global::LightSwitchApplication.TimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterConsultingBtnMethod, sf);
                }
                private static global::System.Exception _FilterConsultingBtn_CanInvoke(global::LightSwitchApplication.TimeForecastReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FilterConsultingBtn_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FilterConsultingBtn_InvokeMethod(global::LightSwitchApplication.TimeForecastReport.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FilterConsultingBtn_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageAnnouncements
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageAnnouncements() : base("LightSwitchApplication:ManageAnnouncements")
        {
            global::LightSwitchApplication.ManageAnnouncements.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageAnnouncements CreateInstance()
        {
            return new global::LightSwitchApplication.ManageAnnouncements(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageAnnouncements_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AnnouncementsSet_SelectionChanged();

        partial void AnnouncementsSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementsSet_Loaded(bool succeeded);

        /// <summary>
        /// Gets the AnnouncementsSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Announcement> AnnouncementsSet
        {
            get
            {
                return global::LightSwitchApplication.ManageAnnouncements.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties.AnnouncementsSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementsSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySet, global::LightSwitchApplication.ManageAnnouncements.DetailsClass.CommandSet, global::LightSwitchApplication.ManageAnnouncements.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties.AnnouncementsSet;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>.Entry
                __ManageAnnouncementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeCreated,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeActivated,
                    global::LightSwitchApplication.ManageAnnouncements.DetailsClass.__ManageAnnouncements_InvokeSaveErrorEvent);
            private static void __ManageAnnouncements_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageAnnouncements s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageAnnouncements_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageAnnouncements_InvokeSavingEvent(global::LightSwitchApplication.ManageAnnouncements s)
            {
                bool handled = false;
                s.ManageAnnouncements_Saving(ref handled);
                return handled;
            }
            private static void __ManageAnnouncements_InvokeSavedEvent(global::LightSwitchApplication.ManageAnnouncements s)
            {
                s.ManageAnnouncements_Saved();
            }
            private static bool __ManageAnnouncements_InvokeClosingEvent(global::LightSwitchApplication.ManageAnnouncements s)
            {
                bool cancel = false;
                s.ManageAnnouncements_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageAnnouncements_InvokeCreated(global::LightSwitchApplication.ManageAnnouncements s)
            {
                s.ManageAnnouncements_Created();
            }
            private static void __ManageAnnouncements_InvokeActivated(global::LightSwitchApplication.ManageAnnouncements s)
            {
                s.ManageAnnouncements_Activated();
            }
            private static bool __ManageAnnouncements_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageAnnouncements s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageAnnouncements_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageAnnouncements.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageAnnouncements.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AnnouncementsSetQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Announcements;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement>.Data _AnnouncementsSet;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement> AnnouncementsSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement>)base.GetItem(global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties.AnnouncementsSet);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement>.Entry
                    AnnouncementsSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement>.Entry(
                        "AnnouncementsSet",
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_Stub,
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_Validate,
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_CreateQuery,
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_SelectionChanged,
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_OnCollectionChanged,
                        global::LightSwitchApplication.ManageAnnouncements.DetailsClass.PropertySetProperties._AnnouncementsSet_OnLoaded);
                private static void _AnnouncementsSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageAnnouncements, global::LightSwitchApplication.ManageAnnouncements.DetailsClass, global::LightSwitchApplication.Announcement>.Data> c, global::LightSwitchApplication.ManageAnnouncements.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnouncementsSet, sf);
                }
                private static void _AnnouncementsSet_Validate(global::LightSwitchApplication.ManageAnnouncements s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AnnouncementsSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AnnouncementsSet_CreateQuery(global::LightSwitchApplication.ManageAnnouncements.DetailsClass d, object[] args)
                {
                    return d.AnnouncementsSetQuery();
                }
                private static void _AnnouncementsSet_SelectionChanged(global::LightSwitchApplication.ManageAnnouncements s)
                {
                    s.AnnouncementsSet_SelectionChanged();
                }
                private static void _AnnouncementsSet_OnCollectionChanged(global::LightSwitchApplication.ManageAnnouncements s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AnnouncementsSet_Changed(e);
                }
                private static void _AnnouncementsSet_OnLoaded(global::LightSwitchApplication.ManageAnnouncements s, bool succeeded)
                {
                    s.AnnouncementsSet_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Home
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private Home() : base("LightSwitchApplication:Home")
        {
            global::LightSwitchApplication.Home.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static Home CreateInstance()
        {
            return new global::LightSwitchApplication.Home(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Home_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AnnouncementsSet_SelectionChanged();

        partial void AnnouncementsSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementsSet_Loaded(bool succeeded);

        partial void EmployeeAssignments_SelectionChanged();

        partial void EmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Loaded(bool succeeded);

        partial void TimeForecasts_SelectionChanged();

        partial void TimeForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Loaded(bool succeeded);

        partial void GetSpecificForecast_SelectionChanged();

        partial void GetSpecificForecast_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_Loaded(bool succeeded);

        partial void EmployeeID_Changed();

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        /// <summary>
        /// Gets the AnnouncementsSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Announcement> AnnouncementsSet
        {
            get
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.AnnouncementsSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementsSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.EmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecast> TimeForecasts
        {
            get
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.TimeForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the GetSpecificForecast visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Forecast> GetSpecificForecast
        {
            get
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.GetSpecificForecast);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmployeeID
        {
            get 
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.EmployeeID);
            }
            set
            {
                global::LightSwitchApplication.Home.DetailsClass.SetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.EmployeeID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.Home.DetailsClass.GetValue(this, global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the LogOut screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void LogOut()
        {
            this.Details.Methods.LogOut.CreateInvocation().Execute();
        }
        partial void LogOut_CanExecute(ref bool result);
        partial void LogOut_Execute();

        /// <summary>
        /// Calls the Help screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Help()
        {
            this.Details.Methods.Help.CreateInvocation().Execute();
        }
        partial void Help_CanExecute(ref bool result);
        partial void Help_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Home.DetailsClass.PropertySet, global::LightSwitchApplication.Home.DetailsClass.CommandSet, global::LightSwitchApplication.Home.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.AnnouncementsSet;
                var initializeCommandEntry = global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties.LogOut;
                var initializeMethodEntry = global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties.LogOut;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry
                __HomeEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry(
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeSavingEvent,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeSavedEvent,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeClosingEvent,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeCreated,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeActivated,
                    global::LightSwitchApplication.Home.DetailsClass.__Home_InvokeSaveErrorEvent);
            private static void __Home_InvokeInitializeDataWorkspace(global::LightSwitchApplication.Home s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.Home_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __Home_InvokeSavingEvent(global::LightSwitchApplication.Home s)
            {
                bool handled = false;
                s.Home_Saving(ref handled);
                return handled;
            }
            private static void __Home_InvokeSavedEvent(global::LightSwitchApplication.Home s)
            {
                s.Home_Saved();
            }
            private static bool __Home_InvokeClosingEvent(global::LightSwitchApplication.Home s)
            {
                bool cancel = false;
                s.Home_Closing(ref cancel);
                return cancel;
            }
            private static void __Home_InvokeCreated(global::LightSwitchApplication.Home s)
            {
                s.Home_Created();
            }
            private static void __Home_InvokeActivated(global::LightSwitchApplication.Home s)
            {
                s.Home_Activated();
            }
            private static bool __Home_InvokeSaveErrorEvent(global::LightSwitchApplication.Home s, global::System.Exception ex)
            {
                bool handled = false;
                s.Home_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.Home.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.Home.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.Home.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AnnouncementsSetQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Announcements;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentsQuery()
            {
                string loggedOnUser1 = global::LightSwitchApplication.GlobalStrings.LoggedOnUser();
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.EmployeeAssignments,
                        (e) => (e.Employee.UserID.CompareTo(loggedOnUser1) == 0)),
                    "Projects");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastsQuery()
            {
                string loggedOnUser1 = global::LightSwitchApplication.GlobalStrings.LoggedOnUser();
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ApplicationData.TimeForecasts,
                    (t) => (t.Employee.UserID.CompareTo(loggedOnUser1) == 0));
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable GetSpecificForecastQuery(global::System.Nullable<int> employeeId)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.GetSpecificForecast(employeeId);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Employees;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement>.Data _AnnouncementsSet;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data _TimeForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast>.Data _GetSpecificForecast;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int>.Data _EmployeeID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data _LogOutCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data _HelpCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data _LogOutMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data _HelpMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement> AnnouncementsSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.AnnouncementsSet);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.EmployeeAssignments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast> TimeForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.TimeForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast> GetSpecificForecast
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.GetSpecificForecast);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int> EmployeeID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.EmployeeID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties.Employees);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass> LogOut
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties.LogOut);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass> Help
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties.Help);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass> LogOut
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties.LogOut);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass> Help
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>)base.GetItem(global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties.Help);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement>.Entry
                    AnnouncementsSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement>.Entry(
                        "AnnouncementsSet",
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_CreateQuery,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_SelectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_OnCollectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._AnnouncementsSet_OnLoaded);
                private static void _AnnouncementsSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Announcement>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnouncementsSet, sf);
                }
                private static void _AnnouncementsSet_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AnnouncementsSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AnnouncementsSet_CreateQuery(global::LightSwitchApplication.Home.DetailsClass d, object[] args)
                {
                    return d.AnnouncementsSetQuery();
                }
                private static void _AnnouncementsSet_SelectionChanged(global::LightSwitchApplication.Home s)
                {
                    s.AnnouncementsSet_SelectionChanged();
                }
                private static void _AnnouncementsSet_OnCollectionChanged(global::LightSwitchApplication.Home s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AnnouncementsSet_Changed(e);
                }
                private static void _AnnouncementsSet_OnLoaded(global::LightSwitchApplication.Home s, bool succeeded)
                {
                    s.AnnouncementsSet_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignments",
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeAssignments_OnLoaded);
                private static void _EmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignments, sf);
                }
                private static void _EmployeeAssignments_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignments_CreateQuery(global::LightSwitchApplication.Home.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentsQuery();
                }
                private static void _EmployeeAssignments_SelectionChanged(global::LightSwitchApplication.Home s)
                {
                    s.EmployeeAssignments_SelectionChanged();
                }
                private static void _EmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.Home s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignments_Changed(e);
                }
                private static void _EmployeeAssignments_OnLoaded(global::LightSwitchApplication.Home s, bool succeeded)
                {
                    s.EmployeeAssignments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry
                    TimeForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry(
                        "TimeForecasts",
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_CreateQuery,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_SelectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._TimeForecasts_OnLoaded);
                private static void _TimeForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecasts, sf);
                }
                private static void _TimeForecasts_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecasts_CreateQuery(global::LightSwitchApplication.Home.DetailsClass d, object[] args)
                {
                    return d.TimeForecastsQuery();
                }
                private static void _TimeForecasts_SelectionChanged(global::LightSwitchApplication.Home s)
                {
                    s.TimeForecasts_SelectionChanged();
                }
                private static void _TimeForecasts_OnCollectionChanged(global::LightSwitchApplication.Home s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecasts_Changed(e);
                }
                private static void _TimeForecasts_OnLoaded(global::LightSwitchApplication.Home s, bool succeeded)
                {
                    s.TimeForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast>.Entry
                    GetSpecificForecast = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast>.Entry(
                        "GetSpecificForecast",
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_CreateQuery,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_SelectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_OnCollectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._GetSpecificForecast_OnLoaded);
                private static void _GetSpecificForecast_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Forecast>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._GetSpecificForecast, sf);
                }
                private static void _GetSpecificForecast_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.GetSpecificForecast_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _GetSpecificForecast_CreateQuery(global::LightSwitchApplication.Home.DetailsClass d, object[] args)
                {
                    return d.GetSpecificForecastQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _GetSpecificForecast_SelectionChanged(global::LightSwitchApplication.Home s)
                {
                    s.GetSpecificForecast_SelectionChanged();
                }
                private static void _GetSpecificForecast_OnCollectionChanged(global::LightSwitchApplication.Home s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.GetSpecificForecast_Changed(e);
                }
                private static void _GetSpecificForecast_OnLoaded(global::LightSwitchApplication.Home s, bool succeeded)
                {
                    s.GetSpecificForecast_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int>.Entry
                    EmployeeID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int>.Entry(
                        "EmployeeID",
                        false,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeID_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeID_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._EmployeeID_OnValueChanged);
                private static void _EmployeeID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, int>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeID, sf);
                }
                private static void _EmployeeID_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeID_Validate(r);
                }
                private static void _EmployeeID_OnValueChanged(global::LightSwitchApplication.Home s)
                {
                    s.EmployeeID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.Home.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.Home s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.Home.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.Home s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.Home s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.Home s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry
                    LogOut = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry(
                        "LogOut",
                        global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties._LogOut_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties._LogOut_CreateExecutableObject);
                private static void _LogOut_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._LogOutCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _LogOut_CreateExecutableObject(global::LightSwitchApplication.Home.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Home.DetailsClass)d).Methods.LogOut.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry
                    Help = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry(
                        "Help",
                        global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties._Help_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.CommandSetProperties._Help_CreateExecutableObject);
                private static void _Help_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._HelpCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Help_CreateExecutableObject(global::LightSwitchApplication.Home.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.Home.DetailsClass)d).Methods.Help.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry
                    LogOut = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry(
                        "LogOut",
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._LogOut_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._LogOut_CanInvoke,
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._LogOut_InvokeMethod);
                private static void _LogOut_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._LogOutMethod, sf);
                }
                private static global::System.Exception _LogOut_CanInvoke(global::LightSwitchApplication.Home.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.LogOut_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _LogOut_InvokeMethod(global::LightSwitchApplication.Home.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.LogOut_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry
                    Help = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Entry(
                        "Help",
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._Help_Stub,
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._Help_CanInvoke,
                        global::LightSwitchApplication.Home.DetailsClass.MethodSetProperties._Help_InvokeMethod);
                private static void _Help_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Home.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.Home, global::LightSwitchApplication.Home.DetailsClass>.Data> c, global::LightSwitchApplication.Home.DetailsClass d, object sf)
                {
                    c(d, ref d._HelpMethod, sf);
                }
                private static global::System.Exception _Help_CanInvoke(global::LightSwitchApplication.Home.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Help_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Help_InvokeMethod(global::LightSwitchApplication.Home.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Help_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EmployeeAssignmentDetailScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EmployeeAssignmentDetailScreen() : base("LightSwitchApplication:EmployeeAssignmentDetailScreen")
        {
            global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EmployeeAssignmentDetailScreen CreateInstance()
        {
            return new global::LightSwitchApplication.EmployeeAssignmentDetailScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentDetailScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void EmployeeAssignments_SelectionChanged();

        partial void EmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Loaded(bool succeeded);

        partial void TimeForecasts_SelectionChanged();

        partial void TimeForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Loaded(bool succeeded);

        partial void TimeForecastExceptionsCollection_SelectionChanged();

        partial void TimeForecastExceptionsCollection_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsCollection_Loaded(bool succeeded);

        partial void EmployeeSkills_SelectionChanged();

        partial void EmployeeSkills_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.EmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecast> TimeForecasts
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.TimeForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecastExceptionsCollection visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsCollection
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsCollection);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsCollection_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeSkills visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeSkill> EmployeeSkills
        {
            get
            {
                return global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.EmployeeSkills);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySet, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.CommandSet, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.Employees;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>.Entry
                __EmployeeAssignmentDetailScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeCreated,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeActivated,
                    global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.__EmployeeAssignmentDetailScreen_InvokeSaveErrorEvent);
            private static void __EmployeeAssignmentDetailScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EmployeeAssignmentDetailScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EmployeeAssignmentDetailScreen_InvokeSavingEvent(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
            {
                bool handled = false;
                s.EmployeeAssignmentDetailScreen_Saving(ref handled);
                return handled;
            }
            private static void __EmployeeAssignmentDetailScreen_InvokeSavedEvent(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
            {
                s.EmployeeAssignmentDetailScreen_Saved();
            }
            private static bool __EmployeeAssignmentDetailScreen_InvokeClosingEvent(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
            {
                bool cancel = false;
                s.EmployeeAssignmentDetailScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __EmployeeAssignmentDetailScreen_InvokeCreated(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
            {
                s.EmployeeAssignmentDetailScreen_Created();
            }
            private static void __EmployeeAssignmentDetailScreen_InvokeActivated(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
            {
                s.EmployeeAssignmentDetailScreen_Activated();
            }
            private static bool __EmployeeAssignmentDetailScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.EmployeeAssignmentDetailScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.Employees,
                            "EmployeeTitle"),
                        "DeptEmployee"),
                    "Country");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentsQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.EmployeeAssignments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Projects");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastsQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecast> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecast>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.TimeForecasts).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastExceptionsCollectionQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecastExceptions> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeForecastExceptions>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.TimeForecastExceptionsCollection).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeSkillsQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeSkill> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeSkill>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.EmployeeSkills).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Skill");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data _TimeForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data _TimeForecastExceptionsCollection;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Data _EmployeeSkills;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.EmployeeAssignments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast> TimeForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>)base.GetItem(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.TimeForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsCollection
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>)base.GetItem(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsCollection);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill> EmployeeSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill>)base.GetItem(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties.EmployeeSkills);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignments",
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_Stub,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_Validate,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeAssignments_OnLoaded);
                private static void _EmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignments, sf);
                }
                private static void _EmployeeAssignments_Validate(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignments_CreateQuery(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentsQuery();
                }
                private static void _EmployeeAssignments_SelectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
                {
                    s.EmployeeAssignments_SelectionChanged();
                }
                private static void _EmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignments_Changed(e);
                }
                private static void _EmployeeAssignments_OnLoaded(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, bool succeeded)
                {
                    s.EmployeeAssignments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry
                    TimeForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Entry(
                        "TimeForecasts",
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_Stub,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_Validate,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecasts_OnLoaded);
                private static void _TimeForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecast>.Data> c, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecasts, sf);
                }
                private static void _TimeForecasts_Validate(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecasts_CreateQuery(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object[] args)
                {
                    return d.TimeForecastsQuery();
                }
                private static void _TimeForecasts_SelectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
                {
                    s.TimeForecasts_SelectionChanged();
                }
                private static void _TimeForecasts_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecasts_Changed(e);
                }
                private static void _TimeForecasts_OnLoaded(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, bool succeeded)
                {
                    s.TimeForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry
                    TimeForecastExceptionsCollection = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry(
                        "TimeForecastExceptionsCollection",
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_Stub,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_Validate,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsCollection_OnLoaded);
                private static void _TimeForecastExceptionsCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data> c, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastExceptionsCollection, sf);
                }
                private static void _TimeForecastExceptionsCollection_Validate(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecastExceptionsCollection_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecastExceptionsCollection_CreateQuery(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object[] args)
                {
                    return d.TimeForecastExceptionsCollectionQuery();
                }
                private static void _TimeForecastExceptionsCollection_SelectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
                {
                    s.TimeForecastExceptionsCollection_SelectionChanged();
                }
                private static void _TimeForecastExceptionsCollection_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecastExceptionsCollection_Changed(e);
                }
                private static void _TimeForecastExceptionsCollection_OnLoaded(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, bool succeeded)
                {
                    s.TimeForecastExceptionsCollection_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Entry
                    EmployeeSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Entry(
                        "EmployeeSkills",
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_Stub,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_Validate,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_CreateQuery,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_SelectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass.PropertySetProperties._EmployeeSkills_OnLoaded);
                private static void _EmployeeSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeAssignmentDetailScreen, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Data> c, global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkills, sf);
                }
                private static void _EmployeeSkills_Validate(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeSkills_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeSkills_CreateQuery(global::LightSwitchApplication.EmployeeAssignmentDetailScreen.DetailsClass d, object[] args)
                {
                    return d.EmployeeSkillsQuery();
                }
                private static void _EmployeeSkills_SelectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s)
                {
                    s.EmployeeSkills_SelectionChanged();
                }
                private static void _EmployeeSkills_OnCollectionChanged(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeSkills_Changed(e);
                }
                private static void _EmployeeSkills_OnLoaded(global::LightSwitchApplication.EmployeeAssignmentDetailScreen s, bool succeeded)
                {
                    s.EmployeeSkills_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EvaluationCriteriaSetup
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EvaluationCriteriaSetup() : base("LightSwitchApplication:EvaluationCriteriaSetup")
        {
            global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EvaluationCriteriaSetup CreateInstance()
        {
            return new global::LightSwitchApplication.EvaluationCriteriaSetup(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaSetup_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EvaluationCriterias_SelectionChanged();

        partial void EvaluationCriterias_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Loaded(bool succeeded);

        partial void FilterLocalProperty_Changed();

        partial void EvaluationCriteriasFilter_SelectionChanged();

        partial void EvaluationCriteriasFilter_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriasFilter_Loaded(bool succeeded);

        partial void FilterTermLocalProperty_Changed();

        /// <summary>
        /// Gets the EvaluationCriterias visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EvaluationCriteria> EvaluationCriterias
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.EvaluationCriterias);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FilterLocalProperty
        {
            get 
            {
                return global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterLocalProperty);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterLocalProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterLocalProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EvaluationCriteriasFilter visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EvaluationCriteria> EvaluationCriteriasFilter
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.EvaluationCriteriasFilter);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriasFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FilterTermLocalProperty
        {
            get 
            {
                return global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterTermLocalProperty);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterTermLocalProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterTermLocalProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ImportFromExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ImportFromExcel()
        {
            this.Details.Methods.ImportFromExcel.CreateInvocation().Execute();
        }
        partial void ImportFromExcel_CanExecute(ref bool result);
        partial void ImportFromExcel_Execute();

        /// <summary>
        /// Calls the ImportFromExcel1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ImportFromExcel1()
        {
            this.Details.Methods.ImportFromExcel1.CreateInvocation().Execute();
        }
        partial void ImportFromExcel1_CanExecute(ref bool result);
        partial void ImportFromExcel1_Execute();

        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        /// <summary>
        /// Calls the ImportFromExcel1a screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ImportFromExcel1a()
        {
            this.Details.Methods.ImportFromExcel1a.CreateInvocation().Execute();
        }
        partial void ImportFromExcel1a_CanExecute(ref bool result);
        partial void ImportFromExcel1a_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySet, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSet, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.EvaluationCriterias;
                var initializeCommandEntry = global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties.ImportFromExcel;
                var initializeMethodEntry = global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties.ImportFromExcel;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                __EvaluationCriteriaSetupEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeSavingEvent,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeSavedEvent,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeClosingEvent,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeCreated,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeActivated,
                    global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.__EvaluationCriteriaSetup_InvokeSaveErrorEvent);
            private static void __EvaluationCriteriaSetup_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EvaluationCriteriaSetup_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EvaluationCriteriaSetup_InvokeSavingEvent(global::LightSwitchApplication.EvaluationCriteriaSetup s)
            {
                bool handled = false;
                s.EvaluationCriteriaSetup_Saving(ref handled);
                return handled;
            }
            private static void __EvaluationCriteriaSetup_InvokeSavedEvent(global::LightSwitchApplication.EvaluationCriteriaSetup s)
            {
                s.EvaluationCriteriaSetup_Saved();
            }
            private static bool __EvaluationCriteriaSetup_InvokeClosingEvent(global::LightSwitchApplication.EvaluationCriteriaSetup s)
            {
                bool cancel = false;
                s.EvaluationCriteriaSetup_Closing(ref cancel);
                return cancel;
            }
            private static void __EvaluationCriteriaSetup_InvokeCreated(global::LightSwitchApplication.EvaluationCriteriaSetup s)
            {
                s.EvaluationCriteriaSetup_Created();
            }
            private static void __EvaluationCriteriaSetup_InvokeActivated(global::LightSwitchApplication.EvaluationCriteriaSetup s)
            {
                s.EvaluationCriteriaSetup_Activated();
            }
            private static bool __EvaluationCriteriaSetup_InvokeSaveErrorEvent(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::System.Exception ex)
            {
                bool handled = false;
                s.EvaluationCriteriaSetup_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EvaluationCriteriasQuery(string FilterControl)
            {
                return this.Screen.DataWorkspace.ApplicationData.EvaluationCriterias;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EvaluationCriteriasFilterQuery(string FilterTerm)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ApplicationData.EvaluationCriteriasFilter(FilterTerm),
                        "EvaluationCriteriaDepartment"),
                    "EmployeeLevel");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data _EvaluationCriterias;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Data _FilterLocalProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data _EvaluationCriteriasFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Data _FilterTermLocalProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcel1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcel1aCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcel1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _MethodMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data _ImportFromExcel1aMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria> EvaluationCriterias
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.EvaluationCriterias);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string> FilterLocalProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterLocalProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria> EvaluationCriteriasFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.EvaluationCriteriasFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string> FilterTermLocalProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties.FilterTermLocalProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties.ImportFromExcel1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel1a
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties.ImportFromExcel1a);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties.ImportFromExcel1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass> ImportFromExcel1a
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>)base.GetItem(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties.ImportFromExcel1a);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry
                    EvaluationCriterias = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry(
                        "EvaluationCriterias",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_Validate,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_CreateQuery,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_SelectionChanged,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_OnCollectionChanged,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriterias_OnLoaded);
                private static void _EvaluationCriterias_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._EvaluationCriterias, sf);
                }
                private static void _EvaluationCriterias_Validate(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EvaluationCriterias_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EvaluationCriterias_CreateQuery(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object[] args)
                {
                    return d.EvaluationCriteriasQuery((string)args[0]);
                }
                private static void _EvaluationCriterias_SelectionChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s)
                {
                    s.EvaluationCriterias_SelectionChanged();
                }
                private static void _EvaluationCriterias_OnCollectionChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EvaluationCriterias_Changed(e);
                }
                private static void _EvaluationCriterias_OnLoaded(global::LightSwitchApplication.EvaluationCriteriaSetup s, bool succeeded)
                {
                    s.EvaluationCriterias_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Entry
                    FilterLocalProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Entry(
                        "FilterLocalProperty",
                        false,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterLocalProperty_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterLocalProperty_Validate,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterLocalProperty_OnValueChanged);
                private static void _FilterLocalProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterLocalProperty, sf);
                }
                private static void _FilterLocalProperty_Validate(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterLocalProperty_Validate(r);
                }
                private static void _FilterLocalProperty_OnValueChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s)
                {
                    s.FilterLocalProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry
                    EvaluationCriteriasFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry(
                        "EvaluationCriteriasFilter",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_Validate,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_CreateQuery,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_SelectionChanged,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_OnCollectionChanged,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._EvaluationCriteriasFilter_OnLoaded);
                private static void _EvaluationCriteriasFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._EvaluationCriteriasFilter, sf);
                }
                private static void _EvaluationCriteriasFilter_Validate(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EvaluationCriteriasFilter_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EvaluationCriteriasFilter_CreateQuery(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object[] args)
                {
                    return d.EvaluationCriteriasFilterQuery((string)args[0]);
                }
                private static void _EvaluationCriteriasFilter_SelectionChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s)
                {
                    s.EvaluationCriteriasFilter_SelectionChanged();
                }
                private static void _EvaluationCriteriasFilter_OnCollectionChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EvaluationCriteriasFilter_Changed(e);
                }
                private static void _EvaluationCriteriasFilter_OnLoaded(global::LightSwitchApplication.EvaluationCriteriaSetup s, bool succeeded)
                {
                    s.EvaluationCriteriasFilter_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Entry
                    FilterTermLocalProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Entry(
                        "FilterTermLocalProperty",
                        false,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterTermLocalProperty_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterTermLocalProperty_Validate,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.PropertySetProperties._FilterTermLocalProperty_OnValueChanged);
                private static void _FilterTermLocalProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterTermLocalProperty, sf);
                }
                private static void _FilterTermLocalProperty_Validate(global::LightSwitchApplication.EvaluationCriteriaSetup s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterTermLocalProperty_Validate(r);
                }
                private static void _FilterTermLocalProperty_OnValueChanged(global::LightSwitchApplication.EvaluationCriteriaSetup s)
                {
                    s.FilterTermLocalProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel_CreateExecutableObject);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ImportFromExcel_CreateExecutableObject(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass)d).Methods.ImportFromExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel1",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel1_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel1_CreateExecutableObject);
                private static void _ImportFromExcel1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcel1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ImportFromExcel1_CreateExecutableObject(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass)d).Methods.ImportFromExcel1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass)d).Methods.Method.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel1a = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel1a",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel1a_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.CommandSetProperties._ImportFromExcel1a_CreateExecutableObject);
                private static void _ImportFromExcel1a_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcel1aCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ImportFromExcel1a_CreateExecutableObject(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass)d).Methods.ImportFromExcel1a.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel_CanInvoke,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel_InvokeMethod);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelMethod, sf);
                }
                private static global::System.Exception _ImportFromExcel_CanInvoke(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ImportFromExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ImportFromExcel_InvokeMethod(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ImportFromExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel1",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1_CanInvoke,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1_InvokeMethod);
                private static void _ImportFromExcel1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcel1Method, sf);
                }
                private static global::System.Exception _ImportFromExcel1_CanInvoke(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ImportFromExcel1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ImportFromExcel1_InvokeMethod(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ImportFromExcel1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry
                    ImportFromExcel1a = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Entry(
                        "ImportFromExcel1a",
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1a_Stub,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1a_CanInvoke,
                        global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass.MethodSetProperties._ImportFromExcel1a_InvokeMethod);
                private static void _ImportFromExcel1a_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.EvaluationCriteriaSetup, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass>.Data> c, global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcel1aMethod, sf);
                }
                private static global::System.Exception _ImportFromExcel1a_CanInvoke(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ImportFromExcel1a_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ImportFromExcel1a_InvokeMethod(global::LightSwitchApplication.EvaluationCriteriaSetup.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ImportFromExcel1a_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewListByEmployee
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ReviewListByEmployee() : base("LightSwitchApplication:ReviewListByEmployee")
        {
            global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ReviewListByEmployee CreateInstance()
        {
            return new global::LightSwitchApplication.ReviewListByEmployee(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewListByEmployee_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void ReviewHeaders_SelectionChanged();

        partial void ReviewHeaders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ReviewHeaders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewHeader> ReviewHeaders
        {
            get
            {
                return global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties.ReviewHeaders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the LaunchReviewForm screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void LaunchReviewForm()
        {
            this.Details.Methods.LaunchReviewForm.CreateInvocation().Execute();
        }
        partial void LaunchReviewForm_CanExecute(ref bool result);
        partial void LaunchReviewForm_Execute();

        /// <summary>
        /// Calls the ReviewHeadersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReviewHeadersAddAndEditNew()
        {
            this.Details.Methods.ReviewHeadersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void ReviewHeadersAddAndEditNew_CanExecute(ref bool result);
        partial void ReviewHeadersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the ReviewHeadersEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReviewHeadersEditSelected()
        {
            this.Details.Methods.ReviewHeadersEditSelected.CreateInvocation().Execute();
        }
        partial void ReviewHeadersEditSelected_CanExecute(ref bool result);
        partial void ReviewHeadersEditSelected_Execute();

        /// <summary>
        /// Calls the ReviewHeadersDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReviewHeadersDeleteSelected()
        {
            this.Details.Methods.ReviewHeadersDeleteSelected.CreateInvocation().Execute();
        }
        partial void ReviewHeadersDeleteSelected_CanExecute(ref bool result);
        partial void ReviewHeadersDeleteSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySet, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSet, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties.Employees;
                var initializeCommandEntry = global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties.LaunchReviewForm;
                var initializeMethodEntry = global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties.LaunchReviewForm;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                __ReviewListByEmployeeEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeSavingEvent,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeSavedEvent,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeClosingEvent,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeCreated,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeActivated,
                    global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.__ReviewListByEmployee_InvokeSaveErrorEvent);
            private static void __ReviewListByEmployee_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ReviewListByEmployee s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ReviewListByEmployee_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ReviewListByEmployee_InvokeSavingEvent(global::LightSwitchApplication.ReviewListByEmployee s)
            {
                bool handled = false;
                s.ReviewListByEmployee_Saving(ref handled);
                return handled;
            }
            private static void __ReviewListByEmployee_InvokeSavedEvent(global::LightSwitchApplication.ReviewListByEmployee s)
            {
                s.ReviewListByEmployee_Saved();
            }
            private static bool __ReviewListByEmployee_InvokeClosingEvent(global::LightSwitchApplication.ReviewListByEmployee s)
            {
                bool cancel = false;
                s.ReviewListByEmployee_Closing(ref cancel);
                return cancel;
            }
            private static void __ReviewListByEmployee_InvokeCreated(global::LightSwitchApplication.ReviewListByEmployee s)
            {
                s.ReviewListByEmployee_Created();
            }
            private static void __ReviewListByEmployee_InvokeActivated(global::LightSwitchApplication.ReviewListByEmployee s)
            {
                s.ReviewListByEmployee_Activated();
            }
            private static bool __ReviewListByEmployee_InvokeSaveErrorEvent(global::LightSwitchApplication.ReviewListByEmployee s, global::System.Exception ex)
            {
                bool handled = false;
                s.ReviewListByEmployee_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                                global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                    this.Screen.DataWorkspace.ApplicationData.Employees,
                                    (e) => e.LastName),
                                (e) => e.FirstName),
                            "DeptEmployee"),
                        "EmployeeTitle"),
                    "Country");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewHeadersQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ReviewHeader> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ReviewHeader>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.ReviewHeaders).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                        loader,
                        (r) => r.ReviewDate),
                    "SupervisorEmployee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeaders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _LaunchReviewFormCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _LaunchReviewFormMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data _ReviewHeadersDeleteSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeaders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties.ReviewHeaders);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> LaunchReviewForm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties.LaunchReviewForm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties.ReviewHeadersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties.ReviewHeadersEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties.ReviewHeadersDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> LaunchReviewForm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties.LaunchReviewForm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties.ReviewHeadersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties.ReviewHeadersEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass> ReviewHeadersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties.ReviewHeadersDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.ReviewListByEmployee s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.ReviewListByEmployee s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.ReviewListByEmployee s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.ReviewListByEmployee s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeaders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeaders",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_Validate,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_CreateQuery,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_SelectionChanged,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.PropertySetProperties._ReviewHeaders_OnLoaded);
                private static void _ReviewHeaders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaders, sf);
                }
                private static void _ReviewHeaders_Validate(global::LightSwitchApplication.ReviewListByEmployee s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewHeaders_CreateQuery(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object[] args)
                {
                    return d.ReviewHeadersQuery();
                }
                private static void _ReviewHeaders_SelectionChanged(global::LightSwitchApplication.ReviewListByEmployee s)
                {
                    s.ReviewHeaders_SelectionChanged();
                }
                private static void _ReviewHeaders_OnCollectionChanged(global::LightSwitchApplication.ReviewListByEmployee s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewHeaders_Changed(e);
                }
                private static void _ReviewHeaders_OnLoaded(global::LightSwitchApplication.ReviewListByEmployee s, bool succeeded)
                {
                    s.ReviewHeaders_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    LaunchReviewForm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "LaunchReviewForm",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._LaunchReviewForm_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._LaunchReviewForm_CreateExecutableObject);
                private static void _LaunchReviewForm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._LaunchReviewFormCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _LaunchReviewForm_CreateExecutableObject(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewListByEmployee.DetailsClass)d).Methods.LaunchReviewForm.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersAddAndEditNew",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersAddAndEditNew_CreateExecutableObject);
                private static void _ReviewHeadersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReviewHeadersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewListByEmployee.DetailsClass)d).Methods.ReviewHeadersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersEditSelected",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersEditSelected_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersEditSelected_CreateExecutableObject);
                private static void _ReviewHeadersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReviewHeadersEditSelected_CreateExecutableObject(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewListByEmployee.DetailsClass)d).Methods.ReviewHeadersEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersDeleteSelected",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersDeleteSelected_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.CommandSetProperties._ReviewHeadersDeleteSelected_CreateExecutableObject);
                private static void _ReviewHeadersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReviewHeadersDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewListByEmployee.DetailsClass)d).Methods.ReviewHeadersDeleteSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    LaunchReviewForm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "LaunchReviewForm",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._LaunchReviewForm_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._LaunchReviewForm_CanInvoke,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._LaunchReviewForm_InvokeMethod);
                private static void _LaunchReviewForm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._LaunchReviewFormMethod, sf);
                }
                private static global::System.Exception _LaunchReviewForm_CanInvoke(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.LaunchReviewForm_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _LaunchReviewForm_InvokeMethod(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.LaunchReviewForm_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersAddAndEditNew",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersAddAndEditNew_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersAddAndEditNew_InvokeMethod);
                private static void _ReviewHeadersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _ReviewHeadersAddAndEditNew_CanInvoke(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReviewHeadersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReviewHeadersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReviewHeadersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersEditSelected",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersEditSelected_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersEditSelected_CanInvoke,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersEditSelected_InvokeMethod);
                private static void _ReviewHeadersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersEditSelectedMethod, sf);
                }
                private static global::System.Exception _ReviewHeadersEditSelected_CanInvoke(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReviewHeadersEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReviewHeadersEditSelected_InvokeMethod(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReviewHeadersEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry
                    ReviewHeadersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Entry(
                        "ReviewHeadersDeleteSelected",
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersDeleteSelected_Stub,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.ReviewListByEmployee.DetailsClass.MethodSetProperties._ReviewHeadersDeleteSelected_InvokeMethod);
                private static void _ReviewHeadersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewListByEmployee.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewListByEmployee, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeadersDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _ReviewHeadersDeleteSelected_CanInvoke(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReviewHeadersDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReviewHeadersDeleteSelected_InvokeMethod(global::LightSwitchApplication.ReviewListByEmployee.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReviewHeadersDeleteSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewForm
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ReviewForm(global::System.Nullable<int> ReviewHeaderID, int EmployeeIDParameter, string ParentScreen) : base("LightSwitchApplication:ReviewForm")
        {
                this.ReviewHeaderID = ReviewHeaderID;
                this.EmployeeIDParameter = EmployeeIDParameter;
                this.ParentScreen = ParentScreen;
            global::LightSwitchApplication.ReviewForm.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ReviewForm CreateInstance(global::System.Nullable<int> ReviewHeaderID, int EmployeeIDParameter, string ParentScreen)
        {
            return new global::LightSwitchApplication.ReviewForm(
                        ReviewHeaderID
                        ,EmployeeIDParameter
                        ,ParentScreen
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewForm_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ReviewHeaderProperty_Changed();

        partial void ReviewCritieria_SelectionChanged();

        partial void ReviewCritieria_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritieria_Loaded(bool succeeded);

        partial void ReviewHeaderID_Changed();

        partial void ReviewHeader_Changed();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Loaded(bool succeeded);

        partial void EmployeeIDParameter_Changed();

        partial void EvaluationCriterias_SelectionChanged();

        partial void EvaluationCriterias_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Loaded(bool succeeded);

        partial void ECDepartment_Changed();

        partial void ECLevel_Changed();

        partial void AverageRating_Changed();

        partial void Signatures_SelectionChanged();

        partial void Signatures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Loaded(bool succeeded);

        partial void TrainingPlans_SelectionChanged();

        partial void TrainingPlans_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Loaded(bool succeeded);

        partial void ParentScreen_Changed();

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ReviewHeader ReviewHeaderProperty
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderProperty);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ReviewCritieria visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewCritieria> ReviewCritieria
        {
            get
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewCritieria);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritieria_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReviewHeaderID
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderID);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderID, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderID_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ReviewHeader ReviewHeader
        {
            get
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeader);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int EmployeeIDParameter
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.EmployeeIDParameter);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.EmployeeIDParameter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeIDParameter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EvaluationCriterias visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EvaluationCriteria> EvaluationCriterias
        {
            get
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.EvaluationCriterias);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ECDepartment
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECDepartment);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECDepartment, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ECDepartment_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ECLevel
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECLevel);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECLevel, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ECLevel_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal AverageRating
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.AverageRating);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.AverageRating, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AverageRating_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Signatures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Signature> Signatures
        {
            get
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.Signatures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TrainingPlans visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TrainingPlan> TrainingPlans
        {
            get
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.TrainingPlans);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentScreen
        {
            get 
            {
                return global::LightSwitchApplication.ReviewForm.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ParentScreen);
            }
            set
            {
                global::LightSwitchApplication.ReviewForm.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ParentScreen, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentScreen_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the EmployeeSignature screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSignature()
        {
            this.Details.Methods.EmployeeSignature.CreateInvocation().Execute();
        }
        partial void EmployeeSignature_CanExecute(ref bool result);
        partial void EmployeeSignature_Execute();

        /// <summary>
        /// Calls the ReviewerSignature screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReviewerSignature()
        {
            this.Details.Methods.ReviewerSignature.CreateInvocation().Execute();
        }
        partial void ReviewerSignature_CanExecute(ref bool result);
        partial void ReviewerSignature_Execute();

        /// <summary>
        /// Calls the ReverseSignatures screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReverseSignatures()
        {
            this.Details.Methods.ReverseSignatures.CreateInvocation().Execute();
        }
        partial void ReverseSignatures_CanExecute(ref bool result);
        partial void ReverseSignatures_Execute();

        /// <summary>
        /// Calls the ReviewCritieriaAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ReviewCritieriaAddAndEditNew()
        {
            this.Details.Methods.ReviewCritieriaAddAndEditNew.CreateInvocation().Execute();
        }
        partial void ReviewCritieriaAddAndEditNew_CanExecute(ref bool result);
        partial void ReviewCritieriaAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySet, global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSet, global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderProperty;
                var initializeCommandEntry = global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties.EmployeeSignature;
                var initializeMethodEntry = global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties.EmployeeSignature;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                __ReviewFormEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeSavingEvent,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeSavedEvent,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeClosingEvent,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeCreated,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeActivated,
                    global::LightSwitchApplication.ReviewForm.DetailsClass.__ReviewForm_InvokeSaveErrorEvent);
            private static void __ReviewForm_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ReviewForm s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ReviewForm_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ReviewForm_InvokeSavingEvent(global::LightSwitchApplication.ReviewForm s)
            {
                bool handled = false;
                s.ReviewForm_Saving(ref handled);
                return handled;
            }
            private static void __ReviewForm_InvokeSavedEvent(global::LightSwitchApplication.ReviewForm s)
            {
                s.ReviewForm_Saved();
            }
            private static bool __ReviewForm_InvokeClosingEvent(global::LightSwitchApplication.ReviewForm s)
            {
                bool cancel = false;
                s.ReviewForm_Closing(ref cancel);
                return cancel;
            }
            private static void __ReviewForm_InvokeCreated(global::LightSwitchApplication.ReviewForm s)
            {
                s.ReviewForm_Created();
            }
            private static void __ReviewForm_InvokeActivated(global::LightSwitchApplication.ReviewForm s)
            {
                s.ReviewForm_Activated();
            }
            private static bool __ReviewForm_InvokeSaveErrorEvent(global::LightSwitchApplication.ReviewForm s, global::System.Exception ex)
            {
                bool handled = false;
                s.ReviewForm_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewCritieriaQuery()
            {
                if (this.Screen.ReviewHeaderProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ReviewCritieria> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ReviewCritieria>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ReviewHeaderProperty.Details.Properties.ReviewCritieria).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EvaluationCriteriasQuery(global::System.Nullable<int> ECDepartment, global::System.Nullable<int> ECLevel)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.EvaluationCriterias,
                        (e) => ((ECDepartment.HasValue && (e.EvaluationCriteriaDepartment.Id == ECDepartment)) && (ECLevel.HasValue && (e.EmployeeLevel.Id == ECLevel)))),
                    (e) => e.Category);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SignaturesQuery()
            {
                if (this.Screen.ReviewHeaderProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Signature> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Signature>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ReviewHeaderProperty.Details.Properties.Signatures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TrainingPlansQuery()
            {
                if (this.Screen.ReviewHeaderProperty == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TrainingPlan> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TrainingPlan>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ReviewHeaderProperty.Details.Properties.TrainingPlans).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "TrainingCourses");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeaderProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Data _ReviewCritieria;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>>.Data _ReviewHeaderID;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeader;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data _EmployeeIDParameter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data _EvaluationCriterias;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data _ECDepartment;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data _ECLevel;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal>.Data _AverageRating;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature>.Data _Signatures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data _TrainingPlans;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string>.Data _ParentScreen;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _EmployeeSignatureCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReviewerSignatureCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReverseSignaturesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReviewCritieriaAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _EmployeeSignatureMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReviewerSignatureMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReverseSignaturesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data _ReviewCritieriaAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeaderProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderProperty);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria> ReviewCritieria
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewCritieria);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>> ReviewHeaderID
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeaderID);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeader
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ReviewHeader);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int> EmployeeIDParameter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.EmployeeIDParameter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria> EvaluationCriterias
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.EvaluationCriterias);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int> ECDepartment
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECDepartment);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int> ECLevel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ECLevel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal> AverageRating
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.AverageRating);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature> Signatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.Signatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan> TrainingPlans
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.TrainingPlans);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string> ParentScreen
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties.ParentScreen);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> EmployeeSignature
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties.EmployeeSignature);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReviewerSignature
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties.ReviewerSignature);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReverseSignatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties.ReverseSignatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReviewCritieriaAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties.ReviewCritieriaAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> EmployeeSignature
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties.EmployeeSignature);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReviewerSignature
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties.ReviewerSignature);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReverseSignatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties.ReverseSignatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass> ReviewCritieriaAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>)base.GetItem(global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties.ReviewCritieriaAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeaderProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeaderProperty",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderProperty_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderProperty_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderProperty_OnValueChanged);
                private static void _ReviewHeaderProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaderProperty, sf);
                }
                private static void _ReviewHeaderProperty_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaderProperty_Validate(r);
                }
                private static void _ReviewHeaderProperty_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ReviewHeaderProperty_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Entry
                    ReviewCritieria = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Entry(
                        "ReviewCritieria",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_CreateQuery,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_SelectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewCritieria_OnLoaded);
                private static void _ReviewCritieria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewCritieria, sf);
                }
                private static void _ReviewCritieria_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewCritieria_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewCritieria_CreateQuery(global::LightSwitchApplication.ReviewForm.DetailsClass d, object[] args)
                {
                    return d.ReviewCritieriaQuery();
                }
                private static void _ReviewCritieria_SelectionChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ReviewCritieria_SelectionChanged();
                }
                private static void _ReviewCritieria_OnCollectionChanged(global::LightSwitchApplication.ReviewForm s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewCritieria_Changed(e);
                }
                private static void _ReviewCritieria_OnLoaded(global::LightSwitchApplication.ReviewForm s, bool succeeded)
                {
                    s.ReviewCritieria_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>>.Entry
                    ReviewHeaderID = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReviewHeaderID",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderID_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderID_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeaderID_OnValueChanged);
                private static void _ReviewHeaderID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaderID, sf);
                }
                private static void _ReviewHeaderID_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaderID_Validate(r);
                }
                private static void _ReviewHeaderID_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ReviewHeaderID_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeader = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeader",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeader_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeader_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeader_CreateQuery,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeader_OnValueChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ReviewHeader_OnLoaded);
                private static void _ReviewHeader_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenReferenceProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeader, sf);
                }
                private static void _ReviewHeader_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeader_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewHeader_CreateQuery(global::LightSwitchApplication.ReviewForm.DetailsClass d, object[] args)
                {
                    return null;
                }
                private static void _ReviewHeader_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ReviewHeader_Changed();
                }

                private static void _ReviewHeader_OnLoaded(global::LightSwitchApplication.ReviewForm s, bool succeeded)
                {
                    s.ReviewHeader_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry
                    EmployeeIDParameter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry(
                        "EmployeeIDParameter",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EmployeeIDParameter_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EmployeeIDParameter_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EmployeeIDParameter_OnValueChanged);
                private static void _EmployeeIDParameter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeIDParameter, sf);
                }
                private static void _EmployeeIDParameter_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeIDParameter_Validate(r);
                }
                private static void _EmployeeIDParameter_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.EmployeeIDParameter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry
                    EvaluationCriterias = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Entry(
                        "EvaluationCriterias",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_CreateQuery,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_SelectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._EvaluationCriterias_OnLoaded);
                private static void _EvaluationCriterias_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.EvaluationCriteria>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._EvaluationCriterias, sf);
                }
                private static void _EvaluationCriterias_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EvaluationCriterias_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EvaluationCriterias_CreateQuery(global::LightSwitchApplication.ReviewForm.DetailsClass d, object[] args)
                {
                    return d.EvaluationCriteriasQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<int>)args[1]);
                }
                private static void _EvaluationCriterias_SelectionChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.EvaluationCriterias_SelectionChanged();
                }
                private static void _EvaluationCriterias_OnCollectionChanged(global::LightSwitchApplication.ReviewForm s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EvaluationCriterias_Changed(e);
                }
                private static void _EvaluationCriterias_OnLoaded(global::LightSwitchApplication.ReviewForm s, bool succeeded)
                {
                    s.EvaluationCriterias_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry
                    ECDepartment = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry(
                        "ECDepartment",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECDepartment_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECDepartment_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECDepartment_OnValueChanged);
                private static void _ECDepartment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ECDepartment, sf);
                }
                private static void _ECDepartment_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ECDepartment_Validate(r);
                }
                private static void _ECDepartment_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ECDepartment_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry
                    ECLevel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Entry(
                        "ECLevel",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECLevel_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECLevel_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ECLevel_OnValueChanged);
                private static void _ECLevel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ECLevel, sf);
                }
                private static void _ECLevel_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ECLevel_Validate(r);
                }
                private static void _ECLevel_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ECLevel_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal>.Entry
                    AverageRating = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal>.Entry(
                        "AverageRating",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._AverageRating_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._AverageRating_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._AverageRating_OnValueChanged);
                private static void _AverageRating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._AverageRating, sf);
                }
                private static void _AverageRating_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AverageRating_Validate(r);
                }
                private static void _AverageRating_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.AverageRating_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature>.Entry
                    Signatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature>.Entry(
                        "Signatures",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_CreateQuery,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_SelectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._Signatures_OnLoaded);
                private static void _Signatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.Signature>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._Signatures, sf);
                }
                private static void _Signatures_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Signatures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Signatures_CreateQuery(global::LightSwitchApplication.ReviewForm.DetailsClass d, object[] args)
                {
                    return d.SignaturesQuery();
                }
                private static void _Signatures_SelectionChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.Signatures_SelectionChanged();
                }
                private static void _Signatures_OnCollectionChanged(global::LightSwitchApplication.ReviewForm s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Signatures_Changed(e);
                }
                private static void _Signatures_OnLoaded(global::LightSwitchApplication.ReviewForm s, bool succeeded)
                {
                    s.Signatures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry
                    TrainingPlans = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry(
                        "TrainingPlans",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_CreateQuery,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_SelectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._TrainingPlans_OnLoaded);
                private static void _TrainingPlans_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._TrainingPlans, sf);
                }
                private static void _TrainingPlans_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TrainingPlans_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TrainingPlans_CreateQuery(global::LightSwitchApplication.ReviewForm.DetailsClass d, object[] args)
                {
                    return d.TrainingPlansQuery();
                }
                private static void _TrainingPlans_SelectionChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.TrainingPlans_SelectionChanged();
                }
                private static void _TrainingPlans_OnCollectionChanged(global::LightSwitchApplication.ReviewForm s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TrainingPlans_Changed(e);
                }
                private static void _TrainingPlans_OnLoaded(global::LightSwitchApplication.ReviewForm s, bool succeeded)
                {
                    s.TrainingPlans_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string>.Entry
                    ParentScreen = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string>.Entry(
                        "ParentScreen",
                        false,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ParentScreen_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ParentScreen_Validate,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.PropertySetProperties._ParentScreen_OnValueChanged);
                private static void _ParentScreen_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentScreen, sf);
                }
                private static void _ParentScreen_Validate(global::LightSwitchApplication.ReviewForm s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ParentScreen_Validate(r);
                }
                private static void _ParentScreen_OnValueChanged(global::LightSwitchApplication.ReviewForm s)
                {
                    s.ParentScreen_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    EmployeeSignature = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "EmployeeSignature",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._EmployeeSignature_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._EmployeeSignature_CreateExecutableObject);
                private static void _EmployeeSignature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSignatureCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSignature_CreateExecutableObject(global::LightSwitchApplication.ReviewForm.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewForm.DetailsClass)d).Methods.EmployeeSignature.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReviewerSignature = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReviewerSignature",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReviewerSignature_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReviewerSignature_CreateExecutableObject);
                private static void _ReviewerSignature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewerSignatureCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReviewerSignature_CreateExecutableObject(global::LightSwitchApplication.ReviewForm.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewForm.DetailsClass)d).Methods.ReviewerSignature.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReverseSignatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReverseSignatures",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReverseSignatures_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReverseSignatures_CreateExecutableObject);
                private static void _ReverseSignatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReverseSignaturesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReverseSignatures_CreateExecutableObject(global::LightSwitchApplication.ReviewForm.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewForm.DetailsClass)d).Methods.ReverseSignatures.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReviewCritieriaAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReviewCritieriaAddAndEditNew",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReviewCritieriaAddAndEditNew_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.CommandSetProperties._ReviewCritieriaAddAndEditNew_CreateExecutableObject);
                private static void _ReviewCritieriaAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewCritieriaAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ReviewCritieriaAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ReviewForm.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ReviewForm.DetailsClass)d).Methods.ReviewCritieriaAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    EmployeeSignature = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "EmployeeSignature",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._EmployeeSignature_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._EmployeeSignature_CanInvoke,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._EmployeeSignature_InvokeMethod);
                private static void _EmployeeSignature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSignatureMethod, sf);
                }
                private static global::System.Exception _EmployeeSignature_CanInvoke(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSignature_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSignature_InvokeMethod(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSignature_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReviewerSignature = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReviewerSignature",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewerSignature_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewerSignature_CanInvoke,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewerSignature_InvokeMethod);
                private static void _ReviewerSignature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewerSignatureMethod, sf);
                }
                private static global::System.Exception _ReviewerSignature_CanInvoke(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReviewerSignature_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReviewerSignature_InvokeMethod(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReviewerSignature_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReverseSignatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReverseSignatures",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReverseSignatures_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReverseSignatures_CanInvoke,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReverseSignatures_InvokeMethod);
                private static void _ReverseSignatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReverseSignaturesMethod, sf);
                }
                private static global::System.Exception _ReverseSignatures_CanInvoke(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReverseSignatures_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReverseSignatures_InvokeMethod(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReverseSignatures_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry
                    ReviewCritieriaAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Entry(
                        "ReviewCritieriaAddAndEditNew",
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewCritieriaAddAndEditNew_Stub,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewCritieriaAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ReviewForm.DetailsClass.MethodSetProperties._ReviewCritieriaAddAndEditNew_InvokeMethod);
                private static void _ReviewCritieriaAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewForm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ReviewForm, global::LightSwitchApplication.ReviewForm.DetailsClass>.Data> c, global::LightSwitchApplication.ReviewForm.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewCritieriaAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _ReviewCritieriaAddAndEditNew_CanInvoke(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ReviewCritieriaAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ReviewCritieriaAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ReviewForm.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ReviewCritieriaAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageTrainingCourses
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageTrainingCourses() : base("LightSwitchApplication:ManageTrainingCourses")
        {
            global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageTrainingCourses CreateInstance()
        {
            return new global::LightSwitchApplication.ManageTrainingCourses(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageTrainingCourses_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void TrainingCoursesSet1_SelectionChanged();

        partial void TrainingCoursesSet1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet1_Loaded(bool succeeded);

        partial void IsInactiveObject_Changed();

        /// <summary>
        /// Gets the TrainingCoursesSet1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TrainingCourses> TrainingCoursesSet1
        {
            get
            {
                return global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.TrainingCoursesSet1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsInactiveObject
        {
            get 
            {
                return global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.IsInactiveObject);
            }
            set
            {
                global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.IsInactiveObject, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInactiveObject_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ImportFromExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ImportFromExcel()
        {
            this.Details.Methods.ImportFromExcel.CreateInvocation().Execute();
        }
        partial void ImportFromExcel_CanExecute(ref bool result);
        partial void ImportFromExcel_Execute();

        /// <summary>
        /// Calls the InactiveCoursesButton screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void InactiveCoursesButton()
        {
            this.Details.Methods.InactiveCoursesButton.CreateInvocation().Execute();
        }
        partial void InactiveCoursesButton_CanExecute(ref bool result);
        partial void InactiveCoursesButton_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySet, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSet, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.TrainingCoursesSet1;
                var initializeCommandEntry = global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties.ImportFromExcel;
                var initializeMethodEntry = global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties.ImportFromExcel;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry
                __ManageTrainingCoursesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeCreated,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeActivated,
                    global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.__ManageTrainingCourses_InvokeSaveErrorEvent);
            private static void __ManageTrainingCourses_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageTrainingCourses s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageTrainingCourses_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageTrainingCourses_InvokeSavingEvent(global::LightSwitchApplication.ManageTrainingCourses s)
            {
                bool handled = false;
                s.ManageTrainingCourses_Saving(ref handled);
                return handled;
            }
            private static void __ManageTrainingCourses_InvokeSavedEvent(global::LightSwitchApplication.ManageTrainingCourses s)
            {
                s.ManageTrainingCourses_Saved();
            }
            private static bool __ManageTrainingCourses_InvokeClosingEvent(global::LightSwitchApplication.ManageTrainingCourses s)
            {
                bool cancel = false;
                s.ManageTrainingCourses_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageTrainingCourses_InvokeCreated(global::LightSwitchApplication.ManageTrainingCourses s)
            {
                s.ManageTrainingCourses_Created();
            }
            private static void __ManageTrainingCourses_InvokeActivated(global::LightSwitchApplication.ManageTrainingCourses s)
            {
                s.ManageTrainingCourses_Activated();
            }
            private static bool __ManageTrainingCourses_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageTrainingCourses s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageTrainingCourses_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TrainingCoursesSet1Query(global::System.Nullable<bool> IsInactiveParameter)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ApplicationData.TrainingCoursesSet,
                    (t) => (IsInactiveParameter.HasValue && (t.IsInactive == IsInactiveParameter)));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses>.Data _TrainingCoursesSet1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool>.Data _IsInactiveObject;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data _ImportFromExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data _InactiveCoursesButtonCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data _ImportFromExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data _InactiveCoursesButtonMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses> TrainingCoursesSet1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.TrainingCoursesSet1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool> IsInactiveObject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties.IsInactiveObject);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass> InactiveCoursesButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties.InactiveCoursesButton);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass> ImportFromExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties.ImportFromExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass> InactiveCoursesButton
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties.InactiveCoursesButton);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses>.Entry
                    TrainingCoursesSet1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses>.Entry(
                        "TrainingCoursesSet1",
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_Validate,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_CreateQuery,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_SelectionChanged,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_OnCollectionChanged,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._TrainingCoursesSet1_OnLoaded);
                private static void _TrainingCoursesSet1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::LightSwitchApplication.TrainingCourses>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._TrainingCoursesSet1, sf);
                }
                private static void _TrainingCoursesSet1_Validate(global::LightSwitchApplication.ManageTrainingCourses s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TrainingCoursesSet1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TrainingCoursesSet1_CreateQuery(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object[] args)
                {
                    return d.TrainingCoursesSet1Query((global::System.Nullable<bool>)args[0]);
                }
                private static void _TrainingCoursesSet1_SelectionChanged(global::LightSwitchApplication.ManageTrainingCourses s)
                {
                    s.TrainingCoursesSet1_SelectionChanged();
                }
                private static void _TrainingCoursesSet1_OnCollectionChanged(global::LightSwitchApplication.ManageTrainingCourses s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TrainingCoursesSet1_Changed(e);
                }
                private static void _TrainingCoursesSet1_OnLoaded(global::LightSwitchApplication.ManageTrainingCourses s, bool succeeded)
                {
                    s.TrainingCoursesSet1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool>.Entry
                    IsInactiveObject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool>.Entry(
                        "IsInactiveObject",
                        false,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._IsInactiveObject_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._IsInactiveObject_Validate,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.PropertySetProperties._IsInactiveObject_OnValueChanged);
                private static void _IsInactiveObject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInactiveObject, sf);
                }
                private static void _IsInactiveObject_Validate(global::LightSwitchApplication.ManageTrainingCourses s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IsInactiveObject_Validate(r);
                }
                private static void _IsInactiveObject_OnValueChanged(global::LightSwitchApplication.ManageTrainingCourses s)
                {
                    s.IsInactiveObject_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties._ImportFromExcel_CreateExecutableObject);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ImportFromExcel_CreateExecutableObject(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageTrainingCourses.DetailsClass)d).Methods.ImportFromExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry
                    InactiveCoursesButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry(
                        "InactiveCoursesButton",
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties._InactiveCoursesButton_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.CommandSetProperties._InactiveCoursesButton_CreateExecutableObject);
                private static void _InactiveCoursesButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._InactiveCoursesButtonCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _InactiveCoursesButton_CreateExecutableObject(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageTrainingCourses.DetailsClass)d).Methods.InactiveCoursesButton.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry
                    ImportFromExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry(
                        "ImportFromExcel",
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._ImportFromExcel_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._ImportFromExcel_CanInvoke,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._ImportFromExcel_InvokeMethod);
                private static void _ImportFromExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._ImportFromExcelMethod, sf);
                }
                private static global::System.Exception _ImportFromExcel_CanInvoke(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ImportFromExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ImportFromExcel_InvokeMethod(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ImportFromExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry
                    InactiveCoursesButton = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Entry(
                        "InactiveCoursesButton",
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._InactiveCoursesButton_Stub,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._InactiveCoursesButton_CanInvoke,
                        global::LightSwitchApplication.ManageTrainingCourses.DetailsClass.MethodSetProperties._InactiveCoursesButton_InvokeMethod);
                private static void _InactiveCoursesButton_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageTrainingCourses.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageTrainingCourses, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass>.Data> c, global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, object sf)
                {
                    c(d, ref d._InactiveCoursesButtonMethod, sf);
                }
                private static global::System.Exception _InactiveCoursesButton_CanInvoke(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.InactiveCoursesButton_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _InactiveCoursesButton_InvokeMethod(global::LightSwitchApplication.ManageTrainingCourses.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.InactiveCoursesButton_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageMyReviews
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageMyReviews() : base("LightSwitchApplication:ManageMyReviews")
        {
            global::LightSwitchApplication.ManageMyReviews.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageMyReviews CreateInstance()
        {
            return new global::LightSwitchApplication.ManageMyReviews(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyReviews_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ReviewHeaders_SelectionChanged();

        partial void ReviewHeaders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Loaded(bool succeeded);

        partial void LoggedOnUser_Changed();

        /// <summary>
        /// Gets the ReviewHeaders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewHeader> ReviewHeaders
        {
            get
            {
                return global::LightSwitchApplication.ManageMyReviews.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.ReviewHeaders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LoggedOnUser
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyReviews.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.LoggedOnUser);
            }
            set
            {
                global::LightSwitchApplication.ManageMyReviews.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.LoggedOnUser, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LoggedOnUser_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySet, global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSet, global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.ReviewHeaders;
                var initializeCommandEntry = global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSetProperties.Method;
                var initializeMethodEntry = global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSetProperties.Method;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry
                __ManageMyReviewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeCreated,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeActivated,
                    global::LightSwitchApplication.ManageMyReviews.DetailsClass.__ManageMyReviews_InvokeSaveErrorEvent);
            private static void __ManageMyReviews_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageMyReviews s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageMyReviews_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageMyReviews_InvokeSavingEvent(global::LightSwitchApplication.ManageMyReviews s)
            {
                bool handled = false;
                s.ManageMyReviews_Saving(ref handled);
                return handled;
            }
            private static void __ManageMyReviews_InvokeSavedEvent(global::LightSwitchApplication.ManageMyReviews s)
            {
                s.ManageMyReviews_Saved();
            }
            private static bool __ManageMyReviews_InvokeClosingEvent(global::LightSwitchApplication.ManageMyReviews s)
            {
                bool cancel = false;
                s.ManageMyReviews_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageMyReviews_InvokeCreated(global::LightSwitchApplication.ManageMyReviews s)
            {
                s.ManageMyReviews_Created();
            }
            private static void __ManageMyReviews_InvokeActivated(global::LightSwitchApplication.ManageMyReviews s)
            {
                s.ManageMyReviews_Activated();
            }
            private static bool __ManageMyReviews_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageMyReviews s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageMyReviews_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewHeadersQuery(string LoggedOnUserParam)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                this.Screen.DataWorkspace.ApplicationData.ReviewHeaders,
                                (r) => (r.Employee.UserID.CompareTo(LoggedOnUserParam) == 0)),
                            (r) => r.ReviewDate),
                        "Employee"),
                    "Employee.Country");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeaders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string>.Data _LoggedOnUser;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Data _MethodMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeaders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.ReviewHeaders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string> LoggedOnUser
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties.LoggedOnUser);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeaders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeaders",
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_Stub,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_Validate,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_CreateQuery,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_SelectionChanged,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._ReviewHeaders_OnLoaded);
                private static void _ReviewHeaders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ManageMyReviews.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaders, sf);
                }
                private static void _ReviewHeaders_Validate(global::LightSwitchApplication.ManageMyReviews s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewHeaders_CreateQuery(global::LightSwitchApplication.ManageMyReviews.DetailsClass d, object[] args)
                {
                    return d.ReviewHeadersQuery((string)args[0]);
                }
                private static void _ReviewHeaders_SelectionChanged(global::LightSwitchApplication.ManageMyReviews s)
                {
                    s.ReviewHeaders_SelectionChanged();
                }
                private static void _ReviewHeaders_OnCollectionChanged(global::LightSwitchApplication.ManageMyReviews s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewHeaders_Changed(e);
                }
                private static void _ReviewHeaders_OnLoaded(global::LightSwitchApplication.ManageMyReviews s, bool succeeded)
                {
                    s.ReviewHeaders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string>.Entry
                    LoggedOnUser = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string>.Entry(
                        "LoggedOnUser",
                        false,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._LoggedOnUser_Stub,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._LoggedOnUser_Validate,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.PropertySetProperties._LoggedOnUser_OnValueChanged);
                private static void _LoggedOnUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyReviews.DetailsClass d, object sf)
                {
                    c(d, ref d._LoggedOnUser, sf);
                }
                private static void _LoggedOnUser_Validate(global::LightSwitchApplication.ManageMyReviews s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.LoggedOnUser_Validate(r);
                }
                private static void _LoggedOnUser_OnValueChanged(global::LightSwitchApplication.ManageMyReviews s)
                {
                    s.LoggedOnUser_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyReviews.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.ManageMyReviews.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyReviews.DetailsClass)d).Methods.Method.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.ManageMyReviews.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyReviews.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyReviews, global::LightSwitchApplication.ManageMyReviews.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyReviews.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.ManageMyReviews.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.ManageMyReviews.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewSummaryReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ReviewSummaryReport() : base("LightSwitchApplication:ReviewSummaryReport")
        {
            global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ReviewSummaryReport CreateInstance()
        {
            return new global::LightSwitchApplication.ReviewSummaryReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void FilterReviews_SelectionChanged();

        partial void FilterReviews_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterReviews_Loaded(bool succeeded);

        partial void ReviewHeaderFilterTerm_Changed();

        partial void ReviewHeaders_SelectionChanged();

        partial void ReviewHeaders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Loaded(bool succeeded);

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void ReviewSummaryReportJS_SelectionChanged();

        partial void ReviewSummaryReportJS_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReportJS_Loaded(bool succeeded);

        /// <summary>
        /// Gets the FilterReviews visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewHeader> FilterReviews
        {
            get
            {
                return global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.FilterReviews);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterReviews_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReviewHeaderFilterTerm
        {
            get 
            {
                return global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewHeaderFilterTerm);
            }
            set
            {
                global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewHeaderFilterTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderFilterTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ReviewHeaders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewHeader> ReviewHeaders
        {
            get
            {
                return global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewHeaders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ReviewSummaryReportJS visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewSummaryReportJ> ReviewSummaryReportJS
        {
            get
            {
                return global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewSummaryReportJS);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReportJS_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySet, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.CommandSet, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.FilterReviews;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>.Entry
                __ReviewSummaryReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeSavingEvent,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeSavedEvent,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeClosingEvent,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeCreated,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeActivated,
                    global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.__ReviewSummaryReport_InvokeSaveErrorEvent);
            private static void __ReviewSummaryReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ReviewSummaryReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ReviewSummaryReport_InvokeSavingEvent(global::LightSwitchApplication.ReviewSummaryReport s)
            {
                bool handled = false;
                s.ReviewSummaryReport_Saving(ref handled);
                return handled;
            }
            private static void __ReviewSummaryReport_InvokeSavedEvent(global::LightSwitchApplication.ReviewSummaryReport s)
            {
                s.ReviewSummaryReport_Saved();
            }
            private static bool __ReviewSummaryReport_InvokeClosingEvent(global::LightSwitchApplication.ReviewSummaryReport s)
            {
                bool cancel = false;
                s.ReviewSummaryReport_Closing(ref cancel);
                return cancel;
            }
            private static void __ReviewSummaryReport_InvokeCreated(global::LightSwitchApplication.ReviewSummaryReport s)
            {
                s.ReviewSummaryReport_Created();
            }
            private static void __ReviewSummaryReport_InvokeActivated(global::LightSwitchApplication.ReviewSummaryReport s)
            {
                s.ReviewSummaryReport_Activated();
            }
            private static bool __ReviewSummaryReport_InvokeSaveErrorEvent(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.ReviewSummaryReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FilterReviewsQuery(string FilterTerm)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                this.Screen.DataWorkspace.ApplicationData.FilterReviews(FilterTerm),
                                (r) => r.EmployeeSupervisorFullName),
                            "Employee"),
                        "Employee.DeptEmployee"),
                    "Employee.EmployeeTitle");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewHeadersQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.ReviewHeaders;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Employees;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewSummaryReportJSQuery()
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.ReviewSummaryReportJS;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _FilterReviews;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string>.Data _ReviewHeaderFilterTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeaders;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ>.Data _ReviewSummaryReportJS;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader> FilterReviews
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.FilterReviews);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string> ReviewHeaderFilterTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewHeaderFilterTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeaders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewHeaders);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ> ReviewSummaryReportJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ>)base.GetItem(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties.ReviewSummaryReportJS);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    FilterReviews = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "FilterReviews",
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_Stub,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_Validate,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_CreateQuery,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_SelectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._FilterReviews_OnLoaded);
                private static void _FilterReviews_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object sf)
                {
                    c(d, ref d._FilterReviews, sf);
                }
                private static void _FilterReviews_Validate(global::LightSwitchApplication.ReviewSummaryReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FilterReviews_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FilterReviews_CreateQuery(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object[] args)
                {
                    return d.FilterReviewsQuery((string)args[0]);
                }
                private static void _FilterReviews_SelectionChanged(global::LightSwitchApplication.ReviewSummaryReport s)
                {
                    s.FilterReviews_SelectionChanged();
                }
                private static void _FilterReviews_OnCollectionChanged(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FilterReviews_Changed(e);
                }
                private static void _FilterReviews_OnLoaded(global::LightSwitchApplication.ReviewSummaryReport s, bool succeeded)
                {
                    s.FilterReviews_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string>.Entry
                    ReviewHeaderFilterTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string>.Entry(
                        "ReviewHeaderFilterTerm",
                        false,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaderFilterTerm_Stub,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaderFilterTerm_Validate,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaderFilterTerm_OnValueChanged);
                private static void _ReviewHeaderFilterTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaderFilterTerm, sf);
                }
                private static void _ReviewHeaderFilterTerm_Validate(global::LightSwitchApplication.ReviewSummaryReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaderFilterTerm_Validate(r);
                }
                private static void _ReviewHeaderFilterTerm_OnValueChanged(global::LightSwitchApplication.ReviewSummaryReport s)
                {
                    s.ReviewHeaderFilterTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeaders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeaders",
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_Stub,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_Validate,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_CreateQuery,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_SelectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewHeaders_OnLoaded);
                private static void _ReviewHeaders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaders, sf);
                }
                private static void _ReviewHeaders_Validate(global::LightSwitchApplication.ReviewSummaryReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewHeaders_CreateQuery(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object[] args)
                {
                    return d.ReviewHeadersQuery();
                }
                private static void _ReviewHeaders_SelectionChanged(global::LightSwitchApplication.ReviewSummaryReport s)
                {
                    s.ReviewHeaders_SelectionChanged();
                }
                private static void _ReviewHeaders_OnCollectionChanged(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewHeaders_Changed(e);
                }
                private static void _ReviewHeaders_OnLoaded(global::LightSwitchApplication.ReviewSummaryReport s, bool succeeded)
                {
                    s.ReviewHeaders_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.ReviewSummaryReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.ReviewSummaryReport s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.ReviewSummaryReport s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ>.Entry
                    ReviewSummaryReportJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ>.Entry(
                        "ReviewSummaryReportJS",
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_Stub,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_Validate,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_CreateQuery,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_SelectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewSummaryReport.DetailsClass.PropertySetProperties._ReviewSummaryReportJS_OnLoaded);
                private static void _ReviewSummaryReportJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewSummaryReport, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass, global::LightSwitchApplication.ReviewSummaryReportJ>.Data> c, global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewSummaryReportJS, sf);
                }
                private static void _ReviewSummaryReportJS_Validate(global::LightSwitchApplication.ReviewSummaryReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewSummaryReportJS_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewSummaryReportJS_CreateQuery(global::LightSwitchApplication.ReviewSummaryReport.DetailsClass d, object[] args)
                {
                    return d.ReviewSummaryReportJSQuery();
                }
                private static void _ReviewSummaryReportJS_SelectionChanged(global::LightSwitchApplication.ReviewSummaryReport s)
                {
                    s.ReviewSummaryReportJS_SelectionChanged();
                }
                private static void _ReviewSummaryReportJS_OnCollectionChanged(global::LightSwitchApplication.ReviewSummaryReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewSummaryReportJS_Changed(e);
                }
                private static void _ReviewSummaryReportJS_OnLoaded(global::LightSwitchApplication.ReviewSummaryReport s, bool succeeded)
                {
                    s.ReviewSummaryReportJS_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TrainingPlanReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private TrainingPlanReport() : base("LightSwitchApplication:TrainingPlanReport")
        {
            global::LightSwitchApplication.TrainingPlanReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static TrainingPlanReport CreateInstance()
        {
            return new global::LightSwitchApplication.TrainingPlanReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlanReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void TrainingPlans_SelectionChanged();

        partial void TrainingPlans_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Loaded(bool succeeded);

        /// <summary>
        /// Gets the TrainingPlans visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TrainingPlan> TrainingPlans
        {
            get
            {
                return global::LightSwitchApplication.TrainingPlanReport.DetailsClass.GetValue(this, global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties.TrainingPlans);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySet, global::LightSwitchApplication.TrainingPlanReport.DetailsClass.CommandSet, global::LightSwitchApplication.TrainingPlanReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties.TrainingPlans;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>.Entry
                __TrainingPlanReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeSavingEvent,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeSavedEvent,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeClosingEvent,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeCreated,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeActivated,
                    global::LightSwitchApplication.TrainingPlanReport.DetailsClass.__TrainingPlanReport_InvokeSaveErrorEvent);
            private static void __TrainingPlanReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.TrainingPlanReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.TrainingPlanReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __TrainingPlanReport_InvokeSavingEvent(global::LightSwitchApplication.TrainingPlanReport s)
            {
                bool handled = false;
                s.TrainingPlanReport_Saving(ref handled);
                return handled;
            }
            private static void __TrainingPlanReport_InvokeSavedEvent(global::LightSwitchApplication.TrainingPlanReport s)
            {
                s.TrainingPlanReport_Saved();
            }
            private static bool __TrainingPlanReport_InvokeClosingEvent(global::LightSwitchApplication.TrainingPlanReport s)
            {
                bool cancel = false;
                s.TrainingPlanReport_Closing(ref cancel);
                return cancel;
            }
            private static void __TrainingPlanReport_InvokeCreated(global::LightSwitchApplication.TrainingPlanReport s)
            {
                s.TrainingPlanReport_Created();
            }
            private static void __TrainingPlanReport_InvokeActivated(global::LightSwitchApplication.TrainingPlanReport s)
            {
                s.TrainingPlanReport_Activated();
            }
            private static bool __TrainingPlanReport_InvokeSaveErrorEvent(global::LightSwitchApplication.TrainingPlanReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.TrainingPlanReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.TrainingPlanReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.TrainingPlanReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TrainingPlansQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.TrainingPlans,
                    "ReviewHeader");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data _TrainingPlans;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan> TrainingPlans
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan>)base.GetItem(global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties.TrainingPlans);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry
                    TrainingPlans = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry(
                        "TrainingPlans",
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_Stub,
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_Validate,
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_CreateQuery,
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_SelectionChanged,
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_OnCollectionChanged,
                        global::LightSwitchApplication.TrainingPlanReport.DetailsClass.PropertySetProperties._TrainingPlans_OnLoaded);
                private static void _TrainingPlans_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TrainingPlanReport, global::LightSwitchApplication.TrainingPlanReport.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data> c, global::LightSwitchApplication.TrainingPlanReport.DetailsClass d, object sf)
                {
                    c(d, ref d._TrainingPlans, sf);
                }
                private static void _TrainingPlans_Validate(global::LightSwitchApplication.TrainingPlanReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TrainingPlans_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TrainingPlans_CreateQuery(global::LightSwitchApplication.TrainingPlanReport.DetailsClass d, object[] args)
                {
                    return d.TrainingPlansQuery();
                }
                private static void _TrainingPlans_SelectionChanged(global::LightSwitchApplication.TrainingPlanReport s)
                {
                    s.TrainingPlans_SelectionChanged();
                }
                private static void _TrainingPlans_OnCollectionChanged(global::LightSwitchApplication.TrainingPlanReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TrainingPlans_Changed(e);
                }
                private static void _TrainingPlans_OnLoaded(global::LightSwitchApplication.TrainingPlanReport s, bool succeeded)
                {
                    s.TrainingPlans_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AnnualReviewStatus
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AnnualReviewStatus() : base("LightSwitchApplication:AnnualReviewStatus")
        {
            global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AnnualReviewStatus CreateInstance()
        {
            return new global::LightSwitchApplication.AnnualReviewStatus(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AnnualReviewStatus1_SelectionChanged();

        partial void AnnualReviewStatus1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Loaded(bool succeeded);

        partial void YearLocalProperty_Changed();

        /// <summary>
        /// Gets the AnnualReviewStatus1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus1
        {
            get
            {
                return global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.AnnualReviewStatus1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int YearLocalProperty
        {
            get 
            {
                return global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.GetValue(this, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.YearLocalProperty);
            }
            set
            {
                global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.SetValue(this, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.YearLocalProperty, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YearLocalProperty_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Year2013 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Year2013()
        {
            this.Details.Methods.Year2013.CreateInvocation().Execute();
        }
        partial void Year2013_CanExecute(ref bool result);
        partial void Year2013_Execute();

        /// <summary>
        /// Calls the Year2014 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Year2014()
        {
            this.Details.Methods.Year2014.CreateInvocation().Execute();
        }
        partial void Year2014_CanExecute(ref bool result);
        partial void Year2014_Execute();

        /// <summary>
        /// Calls the Reviews2013 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Reviews2013()
        {
            this.Details.Methods.Reviews2013.CreateInvocation().Execute();
        }
        partial void Reviews2013_CanExecute(ref bool result);
        partial void Reviews2013_Execute();

        /// <summary>
        /// Calls the Reviews2014 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Reviews2014()
        {
            this.Details.Methods.Reviews2014.CreateInvocation().Execute();
        }
        partial void Reviews2014_CanExecute(ref bool result);
        partial void Reviews2014_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySet, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSet, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.AnnualReviewStatus1;
                var initializeCommandEntry = global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties.Year2013;
                var initializeMethodEntry = global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties.Year2013;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                __AnnualReviewStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeSavingEvent,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeSavedEvent,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeClosingEvent,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeCreated,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeActivated,
                    global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.__AnnualReviewStatus_InvokeSaveErrorEvent);
            private static void __AnnualReviewStatus_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AnnualReviewStatus s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AnnualReviewStatus_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AnnualReviewStatus_InvokeSavingEvent(global::LightSwitchApplication.AnnualReviewStatus s)
            {
                bool handled = false;
                s.AnnualReviewStatus_Saving(ref handled);
                return handled;
            }
            private static void __AnnualReviewStatus_InvokeSavedEvent(global::LightSwitchApplication.AnnualReviewStatus s)
            {
                s.AnnualReviewStatus_Saved();
            }
            private static bool __AnnualReviewStatus_InvokeClosingEvent(global::LightSwitchApplication.AnnualReviewStatus s)
            {
                bool cancel = false;
                s.AnnualReviewStatus_Closing(ref cancel);
                return cancel;
            }
            private static void __AnnualReviewStatus_InvokeCreated(global::LightSwitchApplication.AnnualReviewStatus s)
            {
                s.AnnualReviewStatus_Created();
            }
            private static void __AnnualReviewStatus_InvokeActivated(global::LightSwitchApplication.AnnualReviewStatus s)
            {
                s.AnnualReviewStatus_Activated();
            }
            private static bool __AnnualReviewStatus_InvokeSaveErrorEvent(global::LightSwitchApplication.AnnualReviewStatus s, global::System.Exception ex)
            {
                bool handled = false;
                s.AnnualReviewStatus_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AnnualReviewStatus1Query(global::System.Nullable<int> YearParameter)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.AnnualReviewStatus,
                                (a) => (YearParameter.HasValue && (a.YearReview == YearParameter))),
                            (a) => a.Department),
                        (a) => a.LastName),
                    (a) => a.FirstName);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data _AnnualReviewStatus1;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int>.Data _YearLocalProperty;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Year2013Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Year2014Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Reviews2013Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Reviews2014Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Year2013Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Year2014Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Reviews2013Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data _Reviews2014Method;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.AnnualReviewStatus1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int> YearLocalProperty
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties.YearLocalProperty);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Year2013
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties.Year2013);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Year2014
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties.Year2014);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Reviews2013
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties.Reviews2013);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Reviews2014
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties.Reviews2014);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Year2013
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties.Year2013);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Year2014
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties.Year2014);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Reviews2013
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties.Reviews2013);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass> Reviews2014
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties.Reviews2014);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry
                    AnnualReviewStatus1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry(
                        "AnnualReviewStatus1",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_Validate,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_CreateQuery,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_SelectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_OnCollectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._AnnualReviewStatus1_OnLoaded);
                private static void _AnnualReviewStatus1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnualReviewStatus1, sf);
                }
                private static void _AnnualReviewStatus1_Validate(global::LightSwitchApplication.AnnualReviewStatus s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AnnualReviewStatus1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AnnualReviewStatus1_CreateQuery(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object[] args)
                {
                    return d.AnnualReviewStatus1Query((global::System.Nullable<int>)args[0]);
                }
                private static void _AnnualReviewStatus1_SelectionChanged(global::LightSwitchApplication.AnnualReviewStatus s)
                {
                    s.AnnualReviewStatus1_SelectionChanged();
                }
                private static void _AnnualReviewStatus1_OnCollectionChanged(global::LightSwitchApplication.AnnualReviewStatus s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AnnualReviewStatus1_Changed(e);
                }
                private static void _AnnualReviewStatus1_OnLoaded(global::LightSwitchApplication.AnnualReviewStatus s, bool succeeded)
                {
                    s.AnnualReviewStatus1_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int>.Entry
                    YearLocalProperty = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int>.Entry(
                        "YearLocalProperty",
                        false,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._YearLocalProperty_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._YearLocalProperty_Validate,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.PropertySetProperties._YearLocalProperty_OnValueChanged);
                private static void _YearLocalProperty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, int>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._YearLocalProperty, sf);
                }
                private static void _YearLocalProperty_Validate(global::LightSwitchApplication.AnnualReviewStatus s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.YearLocalProperty_Validate(r);
                }
                private static void _YearLocalProperty_OnValueChanged(global::LightSwitchApplication.AnnualReviewStatus s)
                {
                    s.YearLocalProperty_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Year2013 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Year2013",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Year2013_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Year2013_CreateExecutableObject);
                private static void _Year2013_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Year2013Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Year2013_CreateExecutableObject(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AnnualReviewStatus.DetailsClass)d).Methods.Year2013.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Year2014 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Year2014",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Year2014_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Year2014_CreateExecutableObject);
                private static void _Year2014_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Year2014Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Year2014_CreateExecutableObject(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AnnualReviewStatus.DetailsClass)d).Methods.Year2014.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Reviews2013 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Reviews2013",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Reviews2013_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Reviews2013_CreateExecutableObject);
                private static void _Reviews2013_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Reviews2013Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Reviews2013_CreateExecutableObject(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AnnualReviewStatus.DetailsClass)d).Methods.Reviews2013.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Reviews2014 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Reviews2014",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Reviews2014_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.CommandSetProperties._Reviews2014_CreateExecutableObject);
                private static void _Reviews2014_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Reviews2014Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Reviews2014_CreateExecutableObject(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.AnnualReviewStatus.DetailsClass)d).Methods.Reviews2014.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Year2013 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Year2013",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2013_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2013_CanInvoke,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2013_InvokeMethod);
                private static void _Year2013_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Year2013Method, sf);
                }
                private static global::System.Exception _Year2013_CanInvoke(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Year2013_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Year2013_InvokeMethod(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Year2013_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Year2014 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Year2014",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2014_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2014_CanInvoke,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Year2014_InvokeMethod);
                private static void _Year2014_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Year2014Method, sf);
                }
                private static global::System.Exception _Year2014_CanInvoke(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Year2014_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Year2014_InvokeMethod(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Year2014_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Reviews2013 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Reviews2013",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2013_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2013_CanInvoke,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2013_InvokeMethod);
                private static void _Reviews2013_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Reviews2013Method, sf);
                }
                private static global::System.Exception _Reviews2013_CanInvoke(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Reviews2013_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Reviews2013_InvokeMethod(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Reviews2013_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry
                    Reviews2014 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Entry(
                        "Reviews2014",
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2014_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2014_CanInvoke,
                        global::LightSwitchApplication.AnnualReviewStatus.DetailsClass.MethodSetProperties._Reviews2014_InvokeMethod);
                private static void _Reviews2014_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.AnnualReviewStatus, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass>.Data> c, global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, object sf)
                {
                    c(d, ref d._Reviews2014Method, sf);
                }
                private static global::System.Exception _Reviews2014_CanInvoke(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Reviews2014_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Reviews2014_InvokeMethod(global::LightSwitchApplication.AnnualReviewStatus.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Reviews2014_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageCountries
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageCountries() : base("LightSwitchApplication:ManageCountries")
        {
            global::LightSwitchApplication.ManageCountries.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageCountries CreateInstance()
        {
            return new global::LightSwitchApplication.ManageCountries(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageCountries_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Countries_SelectionChanged();

        partial void Countries_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Loaded(bool succeeded);

        partial void Holidays_SelectionChanged();

        partial void Holidays_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Countries visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Country> Countries
        {
            get
            {
                return global::LightSwitchApplication.ManageCountries.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties.Countries);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Holidays visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.CountryHoliday> Holidays
        {
            get
            {
                return global::LightSwitchApplication.ManageCountries.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties.Holidays);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySet, global::LightSwitchApplication.ManageCountries.DetailsClass.CommandSet, global::LightSwitchApplication.ManageCountries.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties.Countries;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>.Entry
                __ManageCountriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeCreated,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeActivated,
                    global::LightSwitchApplication.ManageCountries.DetailsClass.__ManageCountries_InvokeSaveErrorEvent);
            private static void __ManageCountries_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageCountries s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageCountries_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageCountries_InvokeSavingEvent(global::LightSwitchApplication.ManageCountries s)
            {
                bool handled = false;
                s.ManageCountries_Saving(ref handled);
                return handled;
            }
            private static void __ManageCountries_InvokeSavedEvent(global::LightSwitchApplication.ManageCountries s)
            {
                s.ManageCountries_Saved();
            }
            private static bool __ManageCountries_InvokeClosingEvent(global::LightSwitchApplication.ManageCountries s)
            {
                bool cancel = false;
                s.ManageCountries_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageCountries_InvokeCreated(global::LightSwitchApplication.ManageCountries s)
            {
                s.ManageCountries_Created();
            }
            private static void __ManageCountries_InvokeActivated(global::LightSwitchApplication.ManageCountries s)
            {
                s.ManageCountries_Activated();
            }
            private static bool __ManageCountries_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageCountries s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageCountries_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageCountries.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageCountries.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CountriesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Countries;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable HolidaysQuery()
            {
                if (this.Screen.Countries.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CountryHoliday> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.CountryHoliday>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Countries.SelectedItem.Details.Properties.Holidays).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Holiday");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country>.Data _Countries;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday>.Data _Holidays;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country> Countries
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country>)base.GetItem(global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties.Countries);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday> Holidays
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday>)base.GetItem(global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties.Holidays);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    Countries = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "Countries",
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_Stub,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_Validate,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_CreateQuery,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_SelectionChanged,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_OnCollectionChanged,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Countries_OnLoaded);
                private static void _Countries_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageCountries.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.ManageCountries.DetailsClass d, object sf)
                {
                    c(d, ref d._Countries, sf);
                }
                private static void _Countries_Validate(global::LightSwitchApplication.ManageCountries s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Countries_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Countries_CreateQuery(global::LightSwitchApplication.ManageCountries.DetailsClass d, object[] args)
                {
                    return d.CountriesQuery();
                }
                private static void _Countries_SelectionChanged(global::LightSwitchApplication.ManageCountries s)
                {
                    s.Countries_SelectionChanged();
                }
                private static void _Countries_OnCollectionChanged(global::LightSwitchApplication.ManageCountries s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Countries_Changed(e);
                }
                private static void _Countries_OnLoaded(global::LightSwitchApplication.ManageCountries s, bool succeeded)
                {
                    s.Countries_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday>.Entry
                    Holidays = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday>.Entry(
                        "Holidays",
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_Stub,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_Validate,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_CreateQuery,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_SelectionChanged,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_OnCollectionChanged,
                        global::LightSwitchApplication.ManageCountries.DetailsClass.PropertySetProperties._Holidays_OnLoaded);
                private static void _Holidays_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageCountries.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageCountries, global::LightSwitchApplication.ManageCountries.DetailsClass, global::LightSwitchApplication.CountryHoliday>.Data> c, global::LightSwitchApplication.ManageCountries.DetailsClass d, object sf)
                {
                    c(d, ref d._Holidays, sf);
                }
                private static void _Holidays_Validate(global::LightSwitchApplication.ManageCountries s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Holidays_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Holidays_CreateQuery(global::LightSwitchApplication.ManageCountries.DetailsClass d, object[] args)
                {
                    return d.HolidaysQuery();
                }
                private static void _Holidays_SelectionChanged(global::LightSwitchApplication.ManageCountries s)
                {
                    s.Holidays_SelectionChanged();
                }
                private static void _Holidays_OnCollectionChanged(global::LightSwitchApplication.ManageCountries s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Holidays_Changed(e);
                }
                private static void _Holidays_OnLoaded(global::LightSwitchApplication.ManageCountries s, bool succeeded)
                {
                    s.Holidays_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DeleteAssignmentHistory
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DeleteAssignmentHistory() : base("LightSwitchApplication:DeleteAssignmentHistory")
        {
            global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DeleteAssignmentHistory CreateInstance()
        {
            return new global::LightSwitchApplication.DeleteAssignmentHistory(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DeleteAssignmentHistory_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EmployeeAssignments_SelectionChanged();

        partial void EmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Loaded(bool succeeded);

        partial void ProjectName_Changed();

        partial void EndDate_Changed();

        partial void SelectedProject_Changed();

        /// <summary>
        /// Gets the EmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.GetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectName
        {
            get 
            {
                return global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.GetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.ProjectName);
            }
            set
            {
                global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.SetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.ProjectName, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectName_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndDate
        {
            get 
            {
                return global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.GetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.SetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project SelectedProject
        {
            get 
            {
                return global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.GetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.SelectedProject);
            }
            set
            {
                global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.SetValue(this, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.SelectedProject, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SelectedProject_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the DeleteHistory screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DeleteHistory()
        {
            this.Details.Methods.DeleteHistory.CreateInvocation().Execute();
        }
        partial void DeleteHistory_CanExecute(ref bool result);
        partial void DeleteHistory_Execute();

        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySet, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSet, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EmployeeAssignments;
                var initializeCommandEntry = global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties.DeleteHistory;
                var initializeMethodEntry = global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties.DeleteHistory;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry
                __DeleteAssignmentHistoryEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry(
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeSavingEvent,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeSavedEvent,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeClosingEvent,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeCreated,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeActivated,
                    global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.__DeleteAssignmentHistory_InvokeSaveErrorEvent);
            private static void __DeleteAssignmentHistory_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DeleteAssignmentHistory s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DeleteAssignmentHistory_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DeleteAssignmentHistory_InvokeSavingEvent(global::LightSwitchApplication.DeleteAssignmentHistory s)
            {
                bool handled = false;
                s.DeleteAssignmentHistory_Saving(ref handled);
                return handled;
            }
            private static void __DeleteAssignmentHistory_InvokeSavedEvent(global::LightSwitchApplication.DeleteAssignmentHistory s)
            {
                s.DeleteAssignmentHistory_Saved();
            }
            private static bool __DeleteAssignmentHistory_InvokeClosingEvent(global::LightSwitchApplication.DeleteAssignmentHistory s)
            {
                bool cancel = false;
                s.DeleteAssignmentHistory_Closing(ref cancel);
                return cancel;
            }
            private static void __DeleteAssignmentHistory_InvokeCreated(global::LightSwitchApplication.DeleteAssignmentHistory s)
            {
                s.DeleteAssignmentHistory_Created();
            }
            private static void __DeleteAssignmentHistory_InvokeActivated(global::LightSwitchApplication.DeleteAssignmentHistory s)
            {
                s.DeleteAssignmentHistory_Activated();
            }
            private static bool __DeleteAssignmentHistory_InvokeSaveErrorEvent(global::LightSwitchApplication.DeleteAssignmentHistory s, global::System.Exception ex)
            {
                bool handled = false;
                s.DeleteAssignmentHistory_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentsQuery(global::System.Nullable<global::System.DateTime> EndDate, string ProjectName)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            this.Screen.DataWorkspace.ApplicationData.EmployeeAssignments,
                            (e) => ((EndDate.HasValue && (e.EndDate <= EndDate)) && ((ProjectName == null) || e.Projects.ProjectName.Contains(ProjectName)))),
                        "Projects"),
                    "Employee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string>.Data _ProjectName;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime>.Data _EndDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project>.Data _SelectedProject;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data _DeleteHistoryCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data _DeleteHistoryMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data _MethodMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EmployeeAssignments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string> ProjectName
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.ProjectName);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime> EndDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.EndDate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project> SelectedProject
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties.SelectedProject);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass> DeleteHistory
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties.DeleteHistory);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass> DeleteHistory
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties.DeleteHistory);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>)base.GetItem(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties.Method);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignments",
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_Validate,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EmployeeAssignments_OnLoaded);
                private static void _EmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignments, sf);
                }
                private static void _EmployeeAssignments_Validate(global::LightSwitchApplication.DeleteAssignmentHistory s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignments_CreateQuery(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentsQuery((global::System.Nullable<global::System.DateTime>)args[0], (string)args[1]);
                }
                private static void _EmployeeAssignments_SelectionChanged(global::LightSwitchApplication.DeleteAssignmentHistory s)
                {
                    s.EmployeeAssignments_SelectionChanged();
                }
                private static void _EmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.DeleteAssignmentHistory s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignments_Changed(e);
                }
                private static void _EmployeeAssignments_OnLoaded(global::LightSwitchApplication.DeleteAssignmentHistory s, bool succeeded)
                {
                    s.EmployeeAssignments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string>.Entry
                    ProjectName = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string>.Entry(
                        "ProjectName",
                        false,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._ProjectName_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._ProjectName_Validate,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._ProjectName_OnValueChanged);
                private static void _ProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, string>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectName, sf);
                }
                private static void _ProjectName_Validate(global::LightSwitchApplication.DeleteAssignmentHistory s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectName_Validate(r);
                }
                private static void _ProjectName_OnValueChanged(global::LightSwitchApplication.DeleteAssignmentHistory s)
                {
                    s.ProjectName_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime>.Entry(
                        "EndDate",
                        false,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.DeleteAssignmentHistory s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EndDate_Validate(r);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.DeleteAssignmentHistory s)
                {
                    s.EndDate_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    SelectedProject = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "SelectedProject",
                        false,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._SelectedProject_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._SelectedProject_Validate,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.PropertySetProperties._SelectedProject_OnValueChanged);
                private static void _SelectedProject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._SelectedProject, sf);
                }
                private static void _SelectedProject_Validate(global::LightSwitchApplication.DeleteAssignmentHistory s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SelectedProject_Validate(r);
                }
                private static void _SelectedProject_OnValueChanged(global::LightSwitchApplication.DeleteAssignmentHistory s)
                {
                    s.SelectedProject_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry
                    DeleteHistory = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry(
                        "DeleteHistory",
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties._DeleteHistory_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties._DeleteHistory_CreateExecutableObject);
                private static void _DeleteHistory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteHistoryCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DeleteHistory_CreateExecutableObject(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass)d).Methods.DeleteHistory.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass)d).Methods.Method.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry
                    DeleteHistory = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry(
                        "DeleteHistory",
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._DeleteHistory_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._DeleteHistory_CanInvoke,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._DeleteHistory_InvokeMethod);
                private static void _DeleteHistory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._DeleteHistoryMethod, sf);
                }
                private static global::System.Exception _DeleteHistory_CanInvoke(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DeleteHistory_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DeleteHistory_InvokeMethod(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DeleteHistory_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DeleteAssignmentHistory, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass>.Data> c, global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.DeleteAssignmentHistory.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EmployeeTitles
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private EmployeeTitles() : base("LightSwitchApplication:EmployeeTitles")
        {
            global::LightSwitchApplication.EmployeeTitles.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static EmployeeTitles CreateInstance()
        {
            return new global::LightSwitchApplication.EmployeeTitles(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EmployeeTitleSet_SelectionChanged();

        partial void EmployeeTitleSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitleSet_Loaded(bool succeeded);

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        /// <summary>
        /// Gets the EmployeeTitleSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeTitle> EmployeeTitleSet
        {
            get
            {
                return global::LightSwitchApplication.EmployeeTitles.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties.EmployeeTitleSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitleSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.EmployeeTitles.DetailsClass.GetValue(this, global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySet, global::LightSwitchApplication.EmployeeTitles.DetailsClass.CommandSet, global::LightSwitchApplication.EmployeeTitles.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties.EmployeeTitleSet;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>.Entry
                __EmployeeTitlesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>.Entry(
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeSavingEvent,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeSavedEvent,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeClosingEvent,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeCreated,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeActivated,
                    global::LightSwitchApplication.EmployeeTitles.DetailsClass.__EmployeeTitles_InvokeSaveErrorEvent);
            private static void __EmployeeTitles_InvokeInitializeDataWorkspace(global::LightSwitchApplication.EmployeeTitles s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.EmployeeTitles_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __EmployeeTitles_InvokeSavingEvent(global::LightSwitchApplication.EmployeeTitles s)
            {
                bool handled = false;
                s.EmployeeTitles_Saving(ref handled);
                return handled;
            }
            private static void __EmployeeTitles_InvokeSavedEvent(global::LightSwitchApplication.EmployeeTitles s)
            {
                s.EmployeeTitles_Saved();
            }
            private static bool __EmployeeTitles_InvokeClosingEvent(global::LightSwitchApplication.EmployeeTitles s)
            {
                bool cancel = false;
                s.EmployeeTitles_Closing(ref cancel);
                return cancel;
            }
            private static void __EmployeeTitles_InvokeCreated(global::LightSwitchApplication.EmployeeTitles s)
            {
                s.EmployeeTitles_Created();
            }
            private static void __EmployeeTitles_InvokeActivated(global::LightSwitchApplication.EmployeeTitles s)
            {
                s.EmployeeTitles_Activated();
            }
            private static bool __EmployeeTitles_InvokeSaveErrorEvent(global::LightSwitchApplication.EmployeeTitles s, global::System.Exception ex)
            {
                bool handled = false;
                s.EmployeeTitles_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.EmployeeTitles.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.EmployeeTitles.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeTitleSetQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                        this.Screen.DataWorkspace.ApplicationData.EmployeeTitles,
                        (e) => e.Name),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                if (this.Screen.EmployeeTitleSet.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.EmployeeTitleSet.SelectedItem.Details.Properties.Employees).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "DeptEmployee"),
                    "Supervsr");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Data _EmployeeTitleSet;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle> EmployeeTitleSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle>)base.GetItem(global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties.EmployeeTitleSet);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties.Employees);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Entry
                    EmployeeTitleSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Entry(
                        "EmployeeTitleSet",
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_Stub,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_Validate,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_CreateQuery,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_SelectionChanged,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._EmployeeTitleSet_OnLoaded);
                private static void _EmployeeTitleSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.EmployeeTitle>.Data> c, global::LightSwitchApplication.EmployeeTitles.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeTitleSet, sf);
                }
                private static void _EmployeeTitleSet_Validate(global::LightSwitchApplication.EmployeeTitles s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeTitleSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeTitleSet_CreateQuery(global::LightSwitchApplication.EmployeeTitles.DetailsClass d, object[] args)
                {
                    return d.EmployeeTitleSetQuery();
                }
                private static void _EmployeeTitleSet_SelectionChanged(global::LightSwitchApplication.EmployeeTitles s)
                {
                    s.EmployeeTitleSet_SelectionChanged();
                }
                private static void _EmployeeTitleSet_OnCollectionChanged(global::LightSwitchApplication.EmployeeTitles s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeTitleSet_Changed(e);
                }
                private static void _EmployeeTitleSet_OnLoaded(global::LightSwitchApplication.EmployeeTitles s, bool succeeded)
                {
                    s.EmployeeTitleSet_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.EmployeeTitles.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.EmployeeTitles, global::LightSwitchApplication.EmployeeTitles.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.EmployeeTitles.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.EmployeeTitles s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.EmployeeTitles.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.EmployeeTitles s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.EmployeeTitles s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.EmployeeTitles s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectRates
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ProjectRates() : base("LightSwitchApplication:ProjectRates")
        {
            global::LightSwitchApplication.ProjectRates.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ProjectRates CreateInstance()
        {
            return new global::LightSwitchApplication.ProjectRates(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void ProjectRateCollection_SelectionChanged();

        partial void ProjectRateCollection_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Loaded(bool succeeded);

        partial void ConfigurationSet_SelectionChanged();

        partial void ConfigurationSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationSet_Loaded(bool succeeded);

        partial void DefaultRate_Changed();

        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.ProjectRates.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectRateCollection visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectRate> ProjectRateCollection
        {
            get
            {
                return global::LightSwitchApplication.ProjectRates.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.ProjectRateCollection);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRateCollection_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ConfigurationSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration> ConfigurationSet
        {
            get
            {
                return global::LightSwitchApplication.ProjectRates.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.ConfigurationSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal DefaultRate
        {
            get 
            {
                return global::LightSwitchApplication.ProjectRates.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.DefaultRate);
            }
            set
            {
                global::LightSwitchApplication.ProjectRates.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.DefaultRate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultRate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySet, global::LightSwitchApplication.ProjectRates.DetailsClass.CommandSet, global::LightSwitchApplication.ProjectRates.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.Projects;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>.Entry
                __ProjectRatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeSavingEvent,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeSavedEvent,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeClosingEvent,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeCreated,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeActivated,
                    global::LightSwitchApplication.ProjectRates.DetailsClass.__ProjectRates_InvokeSaveErrorEvent);
            private static void __ProjectRates_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ProjectRates s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ProjectRates_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ProjectRates_InvokeSavingEvent(global::LightSwitchApplication.ProjectRates s)
            {
                bool handled = false;
                s.ProjectRates_Saving(ref handled);
                return handled;
            }
            private static void __ProjectRates_InvokeSavedEvent(global::LightSwitchApplication.ProjectRates s)
            {
                s.ProjectRates_Saved();
            }
            private static bool __ProjectRates_InvokeClosingEvent(global::LightSwitchApplication.ProjectRates s)
            {
                bool cancel = false;
                s.ProjectRates_Closing(ref cancel);
                return cancel;
            }
            private static void __ProjectRates_InvokeCreated(global::LightSwitchApplication.ProjectRates s)
            {
                s.ProjectRates_Created();
            }
            private static void __ProjectRates_InvokeActivated(global::LightSwitchApplication.ProjectRates s)
            {
                s.ProjectRates_Activated();
            }
            private static bool __ProjectRates_InvokeSaveErrorEvent(global::LightSwitchApplication.ProjectRates s, global::System.Exception ex)
            {
                bool handled = false;
                s.ProjectRates_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ProjectRates.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ProjectRates.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            this.Screen.DataWorkspace.ApplicationData.Projects,
                            (p) => (p.Chargeable == true)),
                        "Director"),
                    "Manager");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectRateCollectionQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRate>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectRatesItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Project"),
                    "EmployeeTitle");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ConfigurationSetQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Configurations;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data _ProjectRateCollection;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration>.Data _ConfigurationSet;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal>.Data _DefaultRate;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate> ProjectRateCollection
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate>)base.GetItem(global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.ProjectRateCollection);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration> ConfigurationSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration>)base.GetItem(global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.ConfigurationSet);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal> DefaultRate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal>)base.GetItem(global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties.DefaultRate);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectRates.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.ProjectRates s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.ProjectRates.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.ProjectRates s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.ProjectRates s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.ProjectRates s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry
                    ProjectRateCollection = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate>.Entry(
                        "ProjectRateCollection",
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_Stub,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_Validate,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_CreateQuery,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_SelectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ProjectRateCollection_OnLoaded);
                private static void _ProjectRateCollection_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.ProjectRate>.Data> c, global::LightSwitchApplication.ProjectRates.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectRateCollection, sf);
                }
                private static void _ProjectRateCollection_Validate(global::LightSwitchApplication.ProjectRates s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectRateCollection_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectRateCollection_CreateQuery(global::LightSwitchApplication.ProjectRates.DetailsClass d, object[] args)
                {
                    return d.ProjectRateCollectionQuery();
                }
                private static void _ProjectRateCollection_SelectionChanged(global::LightSwitchApplication.ProjectRates s)
                {
                    s.ProjectRateCollection_SelectionChanged();
                }
                private static void _ProjectRateCollection_OnCollectionChanged(global::LightSwitchApplication.ProjectRates s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectRateCollection_Changed(e);
                }
                private static void _ProjectRateCollection_OnLoaded(global::LightSwitchApplication.ProjectRates s, bool succeeded)
                {
                    s.ProjectRateCollection_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration>.Entry
                    ConfigurationSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration>.Entry(
                        "ConfigurationSet",
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_Stub,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_Validate,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_CreateQuery,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_SelectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_OnCollectionChanged,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._ConfigurationSet_OnLoaded);
                private static void _ConfigurationSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, global::LightSwitchApplication.Configuration>.Data> c, global::LightSwitchApplication.ProjectRates.DetailsClass d, object sf)
                {
                    c(d, ref d._ConfigurationSet, sf);
                }
                private static void _ConfigurationSet_Validate(global::LightSwitchApplication.ProjectRates s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ConfigurationSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ConfigurationSet_CreateQuery(global::LightSwitchApplication.ProjectRates.DetailsClass d, object[] args)
                {
                    return d.ConfigurationSetQuery();
                }
                private static void _ConfigurationSet_SelectionChanged(global::LightSwitchApplication.ProjectRates s)
                {
                    s.ConfigurationSet_SelectionChanged();
                }
                private static void _ConfigurationSet_OnCollectionChanged(global::LightSwitchApplication.ProjectRates s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ConfigurationSet_Changed(e);
                }
                private static void _ConfigurationSet_OnLoaded(global::LightSwitchApplication.ProjectRates s, bool succeeded)
                {
                    s.ConfigurationSet_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal>.Entry
                    DefaultRate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal>.Entry(
                        "DefaultRate",
                        false,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._DefaultRate_Stub,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._DefaultRate_Validate,
                        global::LightSwitchApplication.ProjectRates.DetailsClass.PropertySetProperties._DefaultRate_OnValueChanged);
                private static void _DefaultRate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRates.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ProjectRates, global::LightSwitchApplication.ProjectRates.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectRates.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultRate, sf);
                }
                private static void _DefaultRate_Validate(global::LightSwitchApplication.ProjectRates s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DefaultRate_Validate(r);
                }
                private static void _DefaultRate_OnValueChanged(global::LightSwitchApplication.ProjectRates s)
                {
                    s.DefaultRate_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class GlobalConfiguration
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private GlobalConfiguration() : base("LightSwitchApplication:GlobalConfiguration")
        {
            global::LightSwitchApplication.GlobalConfiguration.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static GlobalConfiguration CreateInstance()
        {
            return new global::LightSwitchApplication.GlobalConfiguration(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GlobalConfiguration_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ConfigurationSet_SelectionChanged();

        partial void ConfigurationSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationSet_Loaded(bool succeeded);

        /// <summary>
        /// Gets the ConfigurationSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Configuration> ConfigurationSet
        {
            get
            {
                return global::LightSwitchApplication.GlobalConfiguration.DetailsClass.GetValue(this, global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties.ConfigurationSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConfigurationSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySet, global::LightSwitchApplication.GlobalConfiguration.DetailsClass.CommandSet, global::LightSwitchApplication.GlobalConfiguration.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties.ConfigurationSet;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>.Entry
                __GlobalConfigurationEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>.Entry(
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeSavingEvent,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeSavedEvent,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeClosingEvent,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeCreated,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeActivated,
                    global::LightSwitchApplication.GlobalConfiguration.DetailsClass.__GlobalConfiguration_InvokeSaveErrorEvent);
            private static void __GlobalConfiguration_InvokeInitializeDataWorkspace(global::LightSwitchApplication.GlobalConfiguration s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.GlobalConfiguration_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __GlobalConfiguration_InvokeSavingEvent(global::LightSwitchApplication.GlobalConfiguration s)
            {
                bool handled = false;
                s.GlobalConfiguration_Saving(ref handled);
                return handled;
            }
            private static void __GlobalConfiguration_InvokeSavedEvent(global::LightSwitchApplication.GlobalConfiguration s)
            {
                s.GlobalConfiguration_Saved();
            }
            private static bool __GlobalConfiguration_InvokeClosingEvent(global::LightSwitchApplication.GlobalConfiguration s)
            {
                bool cancel = false;
                s.GlobalConfiguration_Closing(ref cancel);
                return cancel;
            }
            private static void __GlobalConfiguration_InvokeCreated(global::LightSwitchApplication.GlobalConfiguration s)
            {
                s.GlobalConfiguration_Created();
            }
            private static void __GlobalConfiguration_InvokeActivated(global::LightSwitchApplication.GlobalConfiguration s)
            {
                s.GlobalConfiguration_Activated();
            }
            private static bool __GlobalConfiguration_InvokeSaveErrorEvent(global::LightSwitchApplication.GlobalConfiguration s, global::System.Exception ex)
            {
                bool handled = false;
                s.GlobalConfiguration_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.GlobalConfiguration.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.GlobalConfiguration.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ConfigurationSetQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.Configurations;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration>.Data _ConfigurationSet;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration> ConfigurationSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration>)base.GetItem(global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties.ConfigurationSet);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration>.Entry
                    ConfigurationSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration>.Entry(
                        "ConfigurationSet",
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_Stub,
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_Validate,
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_CreateQuery,
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_SelectionChanged,
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_OnCollectionChanged,
                        global::LightSwitchApplication.GlobalConfiguration.DetailsClass.PropertySetProperties._ConfigurationSet_OnLoaded);
                private static void _ConfigurationSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.GlobalConfiguration, global::LightSwitchApplication.GlobalConfiguration.DetailsClass, global::LightSwitchApplication.Configuration>.Data> c, global::LightSwitchApplication.GlobalConfiguration.DetailsClass d, object sf)
                {
                    c(d, ref d._ConfigurationSet, sf);
                }
                private static void _ConfigurationSet_Validate(global::LightSwitchApplication.GlobalConfiguration s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ConfigurationSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ConfigurationSet_CreateQuery(global::LightSwitchApplication.GlobalConfiguration.DetailsClass d, object[] args)
                {
                    return d.ConfigurationSetQuery();
                }
                private static void _ConfigurationSet_SelectionChanged(global::LightSwitchApplication.GlobalConfiguration s)
                {
                    s.ConfigurationSet_SelectionChanged();
                }
                private static void _ConfigurationSet_OnCollectionChanged(global::LightSwitchApplication.GlobalConfiguration s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ConfigurationSet_Changed(e);
                }
                private static void _ConfigurationSet_OnLoaded(global::LightSwitchApplication.GlobalConfiguration s, bool succeeded)
                {
                    s.ConfigurationSet_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class RevenueForecast
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private RevenueForecast() : base("LightSwitchApplication:RevenueForecast")
        {
            global::LightSwitchApplication.RevenueForecast.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static RevenueForecast CreateInstance()
        {
            return new global::LightSwitchApplication.RevenueForecast(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void GetRevenueForecasts_SelectionChanged();

        partial void GetRevenueForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetRevenueForecasts_Loaded(bool succeeded);

        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void SelectedCountry_Changed();

        partial void ClientFilter_Changed();

        partial void expPerc_Changed();

        partial void countryId_Changed();

        partial void Quarter_Changed();

        partial void Year_Changed();

        partial void CurrentQuarterName_Changed();

        partial void ReportGenerationDate_Changed();

        /// <summary>
        /// Gets the GetRevenueForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.RevenueForecastItem> GetRevenueForecasts
        {
            get
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.GetRevenueForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetRevenueForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Country SelectedCountry
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.SelectedCountry);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.SelectedCountry, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SelectedCountry_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Client ClientFilter
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ClientFilter);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ClientFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal expPerc
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.expPerc);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.expPerc, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void expPerc_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> countryId
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.countryId);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.countryId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void countryId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Quarter
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Quarter);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Quarter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quarter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Year
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Year);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Year, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Year_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CurrentQuarterName
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.CurrentQuarterName);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.CurrentQuarterName, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentQuarterName_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReportGenerationDate
        {
            get 
            {
                return global::LightSwitchApplication.RevenueForecast.DetailsClass.GetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ReportGenerationDate);
            }
            set
            {
                global::LightSwitchApplication.RevenueForecast.DetailsClass.SetValue(this, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ReportGenerationDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportGenerationDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the RefreshReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void RefreshReport()
        {
            this.Details.Methods.RefreshReport.CreateInvocation().Execute();
        }
        partial void RefreshReport_CanExecute(ref bool result);
        partial void RefreshReport_Execute();

        /// <summary>
        /// Calls the ExportRevenueForecastReport screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportRevenueForecastReport()
        {
            this.Details.Methods.ExportRevenueForecastReport.CreateInvocation().Execute();
        }
        partial void ExportRevenueForecastReport_CanExecute(ref bool result);
        partial void ExportRevenueForecastReport_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySet, global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSet, global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.GetRevenueForecasts;
                var initializeCommandEntry = global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties.RefreshReport;
                var initializeMethodEntry = global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties.RefreshReport;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry
                __RevenueForecastEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry(
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeSavingEvent,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeSavedEvent,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeClosingEvent,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeCreated,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeActivated,
                    global::LightSwitchApplication.RevenueForecast.DetailsClass.__RevenueForecast_InvokeSaveErrorEvent);
            private static void __RevenueForecast_InvokeInitializeDataWorkspace(global::LightSwitchApplication.RevenueForecast s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.RevenueForecast_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __RevenueForecast_InvokeSavingEvent(global::LightSwitchApplication.RevenueForecast s)
            {
                bool handled = false;
                s.RevenueForecast_Saving(ref handled);
                return handled;
            }
            private static void __RevenueForecast_InvokeSavedEvent(global::LightSwitchApplication.RevenueForecast s)
            {
                s.RevenueForecast_Saved();
            }
            private static bool __RevenueForecast_InvokeClosingEvent(global::LightSwitchApplication.RevenueForecast s)
            {
                bool cancel = false;
                s.RevenueForecast_Closing(ref cancel);
                return cancel;
            }
            private static void __RevenueForecast_InvokeCreated(global::LightSwitchApplication.RevenueForecast s)
            {
                s.RevenueForecast_Created();
            }
            private static void __RevenueForecast_InvokeActivated(global::LightSwitchApplication.RevenueForecast s)
            {
                s.RevenueForecast_Activated();
            }
            private static bool __RevenueForecast_InvokeSaveErrorEvent(global::LightSwitchApplication.RevenueForecast s, global::System.Exception ex)
            {
                bool handled = false;
                s.RevenueForecast_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable GetRevenueForecastsQuery(global::System.Nullable<decimal> expPerc, global::System.Nullable<int> countryId, string client, global::System.Nullable<int> quarter, global::System.Nullable<int> year)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.GetRevenueForecasts(expPerc, countryId, client, quarter, year);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.Projects,
                        (p) => (p.Client.IsInternal == false)),
                    (p) => p.Client.Name);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem>.Data _GetRevenueForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country>.Data _SelectedCountry;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client>.Data _ClientFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal>.Data _expPerc;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>>.Data _countryId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Data _Quarter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Data _Year;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Data _CurrentQuarterName;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Data _ReportGenerationDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data _RefreshReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data _ExportRevenueForecastReportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data _RefreshReportMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data _ExportRevenueForecastReportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem> GetRevenueForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.GetRevenueForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country> SelectedCountry
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.SelectedCountry);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client> ClientFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ClientFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal> expPerc
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.expPerc);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>> countryId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.countryId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int> Quarter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Quarter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int> Year
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.Year);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string> CurrentQuarterName
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.CurrentQuarterName);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string> ReportGenerationDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties.ReportGenerationDate);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass> RefreshReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties.RefreshReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass> ExportRevenueForecastReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties.ExportRevenueForecastReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass> RefreshReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties.RefreshReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass> ExportRevenueForecastReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>)base.GetItem(global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties.ExportRevenueForecastReport);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem>.Entry
                    GetRevenueForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem>.Entry(
                        "GetRevenueForecasts",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_CreateQuery,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_SelectionChanged,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._GetRevenueForecasts_OnLoaded);
                private static void _GetRevenueForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.RevenueForecastItem>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._GetRevenueForecasts, sf);
                }
                private static void _GetRevenueForecasts_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.GetRevenueForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _GetRevenueForecasts_CreateQuery(global::LightSwitchApplication.RevenueForecast.DetailsClass d, object[] args)
                {
                    return d.GetRevenueForecastsQuery((global::System.Nullable<decimal>)args[0], (global::System.Nullable<int>)args[1], (string)args[2], (global::System.Nullable<int>)args[3], (global::System.Nullable<int>)args[4]);
                }
                private static void _GetRevenueForecasts_SelectionChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.GetRevenueForecasts_SelectionChanged();
                }
                private static void _GetRevenueForecasts_OnCollectionChanged(global::LightSwitchApplication.RevenueForecast s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.GetRevenueForecasts_Changed(e);
                }
                private static void _GetRevenueForecasts_OnLoaded(global::LightSwitchApplication.RevenueForecast s, bool succeeded)
                {
                    s.GetRevenueForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.RevenueForecast.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.RevenueForecast s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.RevenueForecast s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    SelectedCountry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "SelectedCountry",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._SelectedCountry_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._SelectedCountry_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._SelectedCountry_OnValueChanged);
                private static void _SelectedCountry_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._SelectedCountry, sf);
                }
                private static void _SelectedCountry_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SelectedCountry_Validate(r);
                }
                private static void _SelectedCountry_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.SelectedCountry_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    ClientFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "ClientFilter",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ClientFilter_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ClientFilter_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ClientFilter_OnValueChanged);
                private static void _ClientFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientFilter, sf);
                }
                private static void _ClientFilter_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ClientFilter_Validate(r);
                }
                private static void _ClientFilter_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.ClientFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal>.Entry
                    expPerc = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal>.Entry(
                        "expPerc",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._expPerc_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._expPerc_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._expPerc_OnValueChanged);
                private static void _expPerc_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._expPerc, sf);
                }
                private static void _expPerc_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.expPerc_Validate(r);
                }
                private static void _expPerc_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.expPerc_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>>.Entry
                    countryId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>>.Entry(
                        "countryId",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._countryId_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._countryId_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._countryId_OnValueChanged);
                private static void _countryId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._countryId, sf);
                }
                private static void _countryId_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.countryId_Validate(r);
                }
                private static void _countryId_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.countryId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Entry
                    Quarter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Entry(
                        "Quarter",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Quarter_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Quarter_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Quarter_OnValueChanged);
                private static void _Quarter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._Quarter, sf);
                }
                private static void _Quarter_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Quarter_Validate(r);
                }
                private static void _Quarter_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.Quarter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Entry
                    Year = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Entry(
                        "Year",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Year_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Year_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._Year_OnValueChanged);
                private static void _Year_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, int>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._Year, sf);
                }
                private static void _Year_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Year_Validate(r);
                }
                private static void _Year_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.Year_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Entry
                    CurrentQuarterName = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Entry(
                        "CurrentQuarterName",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._CurrentQuarterName_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._CurrentQuarterName_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._CurrentQuarterName_OnValueChanged);
                private static void _CurrentQuarterName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentQuarterName, sf);
                }
                private static void _CurrentQuarterName_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CurrentQuarterName_Validate(r);
                }
                private static void _CurrentQuarterName_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.CurrentQuarterName_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Entry
                    ReportGenerationDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Entry(
                        "ReportGenerationDate",
                        false,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ReportGenerationDate_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ReportGenerationDate_Validate,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.PropertySetProperties._ReportGenerationDate_OnValueChanged);
                private static void _ReportGenerationDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass, string>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportGenerationDate, sf);
                }
                private static void _ReportGenerationDate_Validate(global::LightSwitchApplication.RevenueForecast s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReportGenerationDate_Validate(r);
                }
                private static void _ReportGenerationDate_OnValueChanged(global::LightSwitchApplication.RevenueForecast s)
                {
                    s.ReportGenerationDate_Changed();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry
                    RefreshReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry(
                        "RefreshReport",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties._RefreshReport_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties._RefreshReport_CreateExecutableObject);
                private static void _RefreshReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _RefreshReport_CreateExecutableObject(global::LightSwitchApplication.RevenueForecast.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RevenueForecast.DetailsClass)d).Methods.RefreshReport.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry
                    ExportRevenueForecastReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry(
                        "ExportRevenueForecastReport",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties._ExportRevenueForecastReport_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.CommandSetProperties._ExportRevenueForecastReport_CreateExecutableObject);
                private static void _ExportRevenueForecastReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportRevenueForecastReportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportRevenueForecastReport_CreateExecutableObject(global::LightSwitchApplication.RevenueForecast.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.RevenueForecast.DetailsClass)d).Methods.ExportRevenueForecastReport.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry
                    RefreshReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry(
                        "RefreshReport",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._RefreshReport_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._RefreshReport_CanInvoke,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._RefreshReport_InvokeMethod);
                private static void _RefreshReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._RefreshReportMethod, sf);
                }
                private static global::System.Exception _RefreshReport_CanInvoke(global::LightSwitchApplication.RevenueForecast.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.RefreshReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _RefreshReport_InvokeMethod(global::LightSwitchApplication.RevenueForecast.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.RefreshReport_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry
                    ExportRevenueForecastReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Entry(
                        "ExportRevenueForecastReport",
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._ExportRevenueForecastReport_Stub,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._ExportRevenueForecastReport_CanInvoke,
                        global::LightSwitchApplication.RevenueForecast.DetailsClass.MethodSetProperties._ExportRevenueForecastReport_InvokeMethod);
                private static void _ExportRevenueForecastReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.RevenueForecast.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.RevenueForecast, global::LightSwitchApplication.RevenueForecast.DetailsClass>.Data> c, global::LightSwitchApplication.RevenueForecast.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportRevenueForecastReportMethod, sf);
                }
                private static global::System.Exception _ExportRevenueForecastReport_CanInvoke(global::LightSwitchApplication.RevenueForecast.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportRevenueForecastReport_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportRevenueForecastReport_InvokeMethod(global::LightSwitchApplication.RevenueForecast.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportRevenueForecastReport_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DODProjectsPortal
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DODProjectsPortal() : base("LightSwitchApplication:DODProjectsPortal")
        {
            global::LightSwitchApplication.DODProjectsPortal.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DODProjectsPortal CreateInstance()
        {
            return new global::LightSwitchApplication.DODProjectsPortal(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectsPortal_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void EmployeeAssignment_SelectionChanged();

        partial void EmployeeAssignment_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Loaded(bool succeeded);

        partial void StaffingRequirements_SelectionChanged();

        partial void StaffingRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Loaded(bool succeeded);

        partial void ProjectChartData_SelectionChanged();

        partial void ProjectChartData_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectChartData_Loaded(bool succeeded);

        partial void Customers_SelectionChanged();

        partial void Customers_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Loaded(bool succeeded);

        partial void ShowInternal_Changed();

        partial void DodEmployeeAssignments_SelectionChanged();

        partial void DodEmployeeAssignments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodEmployeeAssignments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeAssignment visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.EmployeeAssignment);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignment_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the StaffingRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.StaffingRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectChartData visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.DODProjectStatusChartDataItem> ProjectChartData
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.ProjectChartData);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectChartData_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Customers visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Customer> Customers
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.Customers);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ShowInternal
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.ShowInternal);
            }
            set
            {
                global::LightSwitchApplication.DODProjectsPortal.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.ShowInternal, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShowInternal_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the DodEmployeeAssignments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeAssignment> DodEmployeeAssignments
        {
            get
            {
                return global::LightSwitchApplication.DODProjectsPortal.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.DodEmployeeAssignments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodEmployeeAssignments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenSkillProfile screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenSkillProfile()
        {
            this.Details.Methods.OpenSkillProfile.CreateInvocation().Execute();
        }
        partial void OpenSkillProfile_CanExecute(ref bool result);
        partial void OpenSkillProfile_Execute();

        /// <summary>
        /// Calls the OpenDropboxLink screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenDropboxLink()
        {
            this.Details.Methods.OpenDropboxLink.CreateInvocation().Execute();
        }
        partial void OpenDropboxLink_CanExecute(ref bool result);
        partial void OpenDropboxLink_Execute();

        /// <summary>
        /// Calls the ViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewSkills()
        {
            this.Details.Methods.ViewSkills.CreateInvocation().Execute();
        }
        partial void ViewSkills_CanExecute(ref bool result);
        partial void ViewSkills_Execute();

        /// <summary>
        /// Calls the gridAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridAddAndEditNew()
        {
            this.Details.Methods.gridAddAndEditNew.CreateInvocation().Execute();
        }
        partial void gridAddAndEditNew_CanExecute(ref bool result);
        partial void gridAddAndEditNew_Execute();

        /// <summary>
        /// Calls the gridEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridEditSelected()
        {
            this.Details.Methods.gridEditSelected.CreateInvocation().Execute();
        }
        partial void gridEditSelected_CanExecute(ref bool result);
        partial void gridEditSelected_Execute();

        /// <summary>
        /// Calls the gridDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void gridDeleteSelected()
        {
            this.Details.Methods.gridDeleteSelected.CreateInvocation().Execute();
        }
        partial void gridDeleteSelected_CanExecute(ref bool result);
        partial void gridDeleteSelected_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentAddAndEditNew()
        {
            this.Details.Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentAddAndEditNew_CanExecute(ref bool result);
        partial void EmployeeAssignmentAddAndEditNew_Execute();

        /// <summary>
        /// Calls the StaffingRequirementsAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void StaffingRequirementsAddAndEditNew()
        {
            this.Details.Methods.StaffingRequirementsAddAndEditNew.CreateInvocation().Execute();
        }
        partial void StaffingRequirementsAddAndEditNew_CanExecute(ref bool result);
        partial void StaffingRequirementsAddAndEditNew_Execute();

        /// <summary>
        /// Calls the CustomersAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CustomersAddAndEditNew()
        {
            this.Details.Methods.CustomersAddAndEditNew.CreateInvocation().Execute();
        }
        partial void CustomersAddAndEditNew_CanExecute(ref bool result);
        partial void CustomersAddAndEditNew_Execute();

        /// <summary>
        /// Calls the CustomersEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CustomersEditSelected()
        {
            this.Details.Methods.CustomersEditSelected.CreateInvocation().Execute();
        }
        partial void CustomersEditSelected_CanExecute(ref bool result);
        partial void CustomersEditSelected_Execute();

        /// <summary>
        /// Calls the CustomersDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CustomersDeleteSelected()
        {
            this.Details.Methods.CustomersDeleteSelected.CreateInvocation().Execute();
        }
        partial void CustomersDeleteSelected_CanExecute(ref bool result);
        partial void CustomersDeleteSelected_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentEditSelected()
        {
            this.Details.Methods.EmployeeAssignmentEditSelected.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentEditSelected_CanExecute(ref bool result);
        partial void EmployeeAssignmentEditSelected_Execute();

        /// <summary>
        /// Calls the EmployeeAssignmentDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeAssignmentDeleteSelected()
        {
            this.Details.Methods.EmployeeAssignmentDeleteSelected.CreateInvocation().Execute();
        }
        partial void EmployeeAssignmentDeleteSelected_CanExecute(ref bool result);
        partial void EmployeeAssignmentDeleteSelected_Execute();

        /// <summary>
        /// Calls the StaffingRequirementsEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void StaffingRequirementsEditSelected()
        {
            this.Details.Methods.StaffingRequirementsEditSelected.CreateInvocation().Execute();
        }
        partial void StaffingRequirementsEditSelected_CanExecute(ref bool result);
        partial void StaffingRequirementsEditSelected_Execute();

        /// <summary>
        /// Calls the StaffingRequirementsDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void StaffingRequirementsDeleteSelected()
        {
            this.Details.Methods.StaffingRequirementsDeleteSelected.CreateInvocation().Execute();
        }
        partial void StaffingRequirementsDeleteSelected_CanExecute(ref bool result);
        partial void StaffingRequirementsDeleteSelected_Execute();

        /// <summary>
        /// Calls the IncludeJS screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void IncludeJS()
        {
            this.Details.Methods.IncludeJS.CreateInvocation().Execute();
        }
        partial void IncludeJS_CanExecute(ref bool result);
        partial void IncludeJS_Execute();

        /// <summary>
        /// Calls the DodViewSkills screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DodViewSkills()
        {
            this.Details.Methods.DodViewSkills.CreateInvocation().Execute();
        }
        partial void DodViewSkills_CanExecute(ref bool result);
        partial void DodViewSkills_Execute();

        /// <summary>
        /// Calls the DodEmployeeAssignmentsDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void DodEmployeeAssignmentsDeleteSelected()
        {
            this.Details.Methods.DodEmployeeAssignmentsDeleteSelected.CreateInvocation().Execute();
        }
        partial void DodEmployeeAssignmentsDeleteSelected_CanExecute(ref bool result);
        partial void DodEmployeeAssignmentsDeleteSelected_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySet, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSet, global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.Projects;
                var initializeCommandEntry = global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.OpenSkillProfile;
                var initializeMethodEntry = global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.OpenSkillProfile;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                __DODProjectsPortalEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeSavingEvent,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeSavedEvent,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeClosingEvent,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeCreated,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeActivated,
                    global::LightSwitchApplication.DODProjectsPortal.DetailsClass.__DODProjectsPortal_InvokeSaveErrorEvent);
            private static void __DODProjectsPortal_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DODProjectsPortal_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DODProjectsPortal_InvokeSavingEvent(global::LightSwitchApplication.DODProjectsPortal s)
            {
                bool handled = false;
                s.DODProjectsPortal_Saving(ref handled);
                return handled;
            }
            private static void __DODProjectsPortal_InvokeSavedEvent(global::LightSwitchApplication.DODProjectsPortal s)
            {
                s.DODProjectsPortal_Saved();
            }
            private static bool __DODProjectsPortal_InvokeClosingEvent(global::LightSwitchApplication.DODProjectsPortal s)
            {
                bool cancel = false;
                s.DODProjectsPortal_Closing(ref cancel);
                return cancel;
            }
            private static void __DODProjectsPortal_InvokeCreated(global::LightSwitchApplication.DODProjectsPortal s)
            {
                s.DODProjectsPortal_Created();
            }
            private static void __DODProjectsPortal_InvokeActivated(global::LightSwitchApplication.DODProjectsPortal s)
            {
                s.DODProjectsPortal_Activated();
            }
            private static bool __DODProjectsPortal_InvokeSaveErrorEvent(global::LightSwitchApplication.DODProjectsPortal s, global::System.Exception ex)
            {
                bool handled = false;
                s.DODProjectsPortal_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery(global::System.Nullable<bool> IsInternal)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                    this.Screen.DataWorkspace.ApplicationData.Projects,
                                    (p) => (((p.IsDOD == true) || (p.IsDODOnly == true)) && ((p.Client.IsInternal == false) || (IsInternal.HasValue && (p.Client.IsInternal == IsInternal))))),
                                (p) => p.Client.Name),
                            (p) => p.ProjectName),
                        "Director"),
                    "Manager");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeAssignmentQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                                loader,
                                (e) => (e.Employee.IsDod == false)),
                            (e) => e.Employee.Country.Name),
                        "Employee"),
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable StaffingRequirementsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.StaffingRequirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.StaffingRequirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "EmployeeLevel");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectChartDataQuery(global::System.Nullable<bool> includeJS)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.DODProjectCountByStatus(includeJS);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable CustomersQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Customer> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Customer>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.Customers).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Project");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DodEmployeeAssignmentsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeAssignment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.EmployeeAssignment).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (e) => (e.Employee.IsDod == true)),
                        "Employee"),
                    "EmployeeLevel");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _EmployeeAssignment;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data _StaffingRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem>.Data _ProjectChartData;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer>.Data _Customers;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool>.Data _ShowInternal;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data _DodEmployeeAssignments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _OpenSkillProfileCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _OpenDropboxLinkCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _ViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _IncludeJSCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _DodViewSkillsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _DodEmployeeAssignmentsDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _OpenSkillProfileMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _OpenDropboxLinkMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _ViewSkillsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _gridDeleteSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _CustomersDeleteSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _EmployeeAssignmentDeleteSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _StaffingRequirementsDeleteSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _IncludeJSMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _DodViewSkillsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data _DodEmployeeAssignmentsDeleteSelectedMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> EmployeeAssignment
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.EmployeeAssignment);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement> StaffingRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.StaffingRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem> ProjectChartData
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.ProjectChartData);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer> Customers
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.Customers);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool> ShowInternal
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.ShowInternal);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment> DodEmployeeAssignments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties.DodEmployeeAssignments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> OpenSkillProfile
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.OpenSkillProfile);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> OpenDropboxLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.OpenDropboxLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.gridDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.CustomersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.CustomersEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.CustomersDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.EmployeeAssignmentEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.EmployeeAssignmentDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.StaffingRequirementsEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.StaffingRequirementsDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> IncludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.IncludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.DodViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> DodEmployeeAssignmentsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties.DodEmployeeAssignmentsDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> OpenSkillProfile
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.OpenSkillProfile);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> OpenDropboxLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.OpenDropboxLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> ViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.ViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.gridAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.gridEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> gridDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.gridDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.EmployeeAssignmentAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.StaffingRequirementsAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.CustomersAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.CustomersEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> CustomersDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.CustomersDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.EmployeeAssignmentEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> EmployeeAssignmentDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.EmployeeAssignmentDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.StaffingRequirementsEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> StaffingRequirementsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.StaffingRequirementsDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> IncludeJS
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.IncludeJS);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> DodViewSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.DodViewSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass> DodEmployeeAssignmentsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties.DodEmployeeAssignmentsDeleteSelected);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery((global::System.Nullable<bool>)args[0]);
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    EmployeeAssignment = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "EmployeeAssignment",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._EmployeeAssignment_OnLoaded);
                private static void _EmployeeAssignment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignment, sf);
                }
                private static void _EmployeeAssignment_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeAssignment_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeAssignment_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.EmployeeAssignmentQuery();
                }
                private static void _EmployeeAssignment_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.EmployeeAssignment_SelectionChanged();
                }
                private static void _EmployeeAssignment_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeAssignment_Changed(e);
                }
                private static void _EmployeeAssignment_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.EmployeeAssignment_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry
                    StaffingRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Entry(
                        "StaffingRequirements",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._StaffingRequirements_OnLoaded);
                private static void _StaffingRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.StaffingRequirement>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirements, sf);
                }
                private static void _StaffingRequirements_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.StaffingRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _StaffingRequirements_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.StaffingRequirementsQuery();
                }
                private static void _StaffingRequirements_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.StaffingRequirements_SelectionChanged();
                }
                private static void _StaffingRequirements_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.StaffingRequirements_Changed(e);
                }
                private static void _StaffingRequirements_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.StaffingRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem>.Entry
                    ProjectChartData = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem>.Entry(
                        "ProjectChartData",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ProjectChartData_OnLoaded);
                private static void _ProjectChartData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.DODProjectStatusChartDataItem>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectChartData, sf);
                }
                private static void _ProjectChartData_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectChartData_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectChartData_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.ProjectChartDataQuery((global::System.Nullable<bool>)args[0]);
                }
                private static void _ProjectChartData_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.ProjectChartData_SelectionChanged();
                }
                private static void _ProjectChartData_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectChartData_Changed(e);
                }
                private static void _ProjectChartData_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.ProjectChartData_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer>.Entry
                    Customers = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer>.Entry(
                        "Customers",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._Customers_OnLoaded);
                private static void _Customers_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.Customer>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._Customers, sf);
                }
                private static void _Customers_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Customers_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Customers_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.CustomersQuery();
                }
                private static void _Customers_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.Customers_SelectionChanged();
                }
                private static void _Customers_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Customers_Changed(e);
                }
                private static void _Customers_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.Customers_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool>.Entry
                    ShowInternal = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool>.Entry(
                        "ShowInternal",
                        false,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ShowInternal_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ShowInternal_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._ShowInternal_OnValueChanged);
                private static void _ShowInternal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, bool>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._ShowInternal, sf);
                }
                private static void _ShowInternal_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ShowInternal_Validate(r);
                }
                private static void _ShowInternal_OnValueChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.ShowInternal_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry
                    DodEmployeeAssignments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Entry(
                        "DodEmployeeAssignments",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_Validate,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_CreateQuery,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_SelectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.PropertySetProperties._DodEmployeeAssignments_OnLoaded);
                private static void _DodEmployeeAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::LightSwitchApplication.EmployeeAssignment>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._DodEmployeeAssignments, sf);
                }
                private static void _DodEmployeeAssignments_Validate(global::LightSwitchApplication.DODProjectsPortal s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DodEmployeeAssignments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _DodEmployeeAssignments_CreateQuery(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object[] args)
                {
                    return d.DodEmployeeAssignmentsQuery();
                }
                private static void _DodEmployeeAssignments_SelectionChanged(global::LightSwitchApplication.DODProjectsPortal s)
                {
                    s.DodEmployeeAssignments_SelectionChanged();
                }
                private static void _DodEmployeeAssignments_OnCollectionChanged(global::LightSwitchApplication.DODProjectsPortal s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.DodEmployeeAssignments_Changed(e);
                }
                private static void _DodEmployeeAssignments_OnLoaded(global::LightSwitchApplication.DODProjectsPortal s, bool succeeded)
                {
                    s.DodEmployeeAssignments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    OpenSkillProfile = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "OpenSkillProfile",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._OpenSkillProfile_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._OpenSkillProfile_CreateExecutableObject);
                private static void _OpenSkillProfile_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenSkillProfileCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenSkillProfile_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.OpenSkillProfile.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    OpenDropboxLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "OpenDropboxLink",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._OpenDropboxLink_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._OpenDropboxLink_CreateExecutableObject);
                private static void _OpenDropboxLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDropboxLinkCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenDropboxLink_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.OpenDropboxLink.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._ViewSkills_CreateExecutableObject);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewSkills_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.ViewSkills.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridAddAndEditNew_CreateExecutableObject);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.gridAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridEditSelected_CreateExecutableObject);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridEditSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.gridEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._gridDeleteSelected_CreateExecutableObject);
                private static void _gridDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _gridDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.gridDeleteSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentAddAndEditNew_CreateExecutableObject);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.EmployeeAssignmentAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsAddAndEditNew_CreateExecutableObject);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _StaffingRequirementsAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.StaffingRequirementsAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersAddAndEditNew_CreateExecutableObject);
                private static void _CustomersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CustomersAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.CustomersAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersEditSelected_CreateExecutableObject);
                private static void _CustomersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CustomersEditSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.CustomersEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._CustomersDeleteSelected_CreateExecutableObject);
                private static void _CustomersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CustomersDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.CustomersDeleteSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentEditSelected_CreateExecutableObject);
                private static void _EmployeeAssignmentEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentEditSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.EmployeeAssignmentEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._EmployeeAssignmentDeleteSelected_CreateExecutableObject);
                private static void _EmployeeAssignmentDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeAssignmentDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.EmployeeAssignmentDeleteSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsEditSelected_CreateExecutableObject);
                private static void _StaffingRequirementsEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _StaffingRequirementsEditSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.StaffingRequirementsEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._StaffingRequirementsDeleteSelected_CreateExecutableObject);
                private static void _StaffingRequirementsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _StaffingRequirementsDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.StaffingRequirementsDeleteSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    IncludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "IncludeJS",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._IncludeJS_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._IncludeJS_CreateExecutableObject);
                private static void _IncludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._IncludeJSCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _IncludeJS_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.IncludeJS.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._DodViewSkills_CreateExecutableObject);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DodViewSkills_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.DodViewSkills.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    DodEmployeeAssignmentsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "DodEmployeeAssignmentsDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._DodEmployeeAssignmentsDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.CommandSetProperties._DodEmployeeAssignmentsDeleteSelected_CreateExecutableObject);
                private static void _DodEmployeeAssignmentsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._DodEmployeeAssignmentsDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _DodEmployeeAssignmentsDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectsPortal.DetailsClass)d).Methods.DodEmployeeAssignmentsDeleteSelected.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    OpenSkillProfile = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "OpenSkillProfile",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenSkillProfile_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenSkillProfile_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenSkillProfile_InvokeMethod);
                private static void _OpenSkillProfile_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenSkillProfileMethod, sf);
                }
                private static global::System.Exception _OpenSkillProfile_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenSkillProfile_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenSkillProfile_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenSkillProfile_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    OpenDropboxLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "OpenDropboxLink",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenDropboxLink_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenDropboxLink_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._OpenDropboxLink_InvokeMethod);
                private static void _OpenDropboxLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDropboxLinkMethod, sf);
                }
                private static global::System.Exception _OpenDropboxLink_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenDropboxLink_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenDropboxLink_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenDropboxLink_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    ViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "ViewSkills",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._ViewSkills_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._ViewSkills_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._ViewSkills_InvokeMethod);
                private static void _ViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewSkillsMethod, sf);
                }
                private static global::System.Exception _ViewSkills_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewSkills_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewSkills_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridAddAndEditNew_InvokeMethod);
                private static void _gridAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _gridAddAndEditNew_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridAddAndEditNew_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridEditSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridEditSelected_InvokeMethod);
                private static void _gridEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridEditSelectedMethod, sf);
                }
                private static global::System.Exception _gridEditSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridEditSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    gridDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "gridDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._gridDeleteSelected_InvokeMethod);
                private static void _gridDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._gridDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _gridDeleteSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.gridDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _gridDeleteSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.gridDeleteSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentAddAndEditNew_InvokeMethod);
                private static void _EmployeeAssignmentAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentAddAndEditNew_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentAddAndEditNew_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsAddAndEditNew_InvokeMethod);
                private static void _StaffingRequirementsAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _StaffingRequirementsAddAndEditNew_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.StaffingRequirementsAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _StaffingRequirementsAddAndEditNew_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.StaffingRequirementsAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersAddAndEditNew",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersAddAndEditNew_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersAddAndEditNew_InvokeMethod);
                private static void _CustomersAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _CustomersAddAndEditNew_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CustomersAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CustomersAddAndEditNew_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CustomersAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersEditSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersEditSelected_InvokeMethod);
                private static void _CustomersEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersEditSelectedMethod, sf);
                }
                private static global::System.Exception _CustomersEditSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CustomersEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CustomersEditSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CustomersEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    CustomersDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "CustomersDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._CustomersDeleteSelected_InvokeMethod);
                private static void _CustomersDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._CustomersDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _CustomersDeleteSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CustomersDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CustomersDeleteSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CustomersDeleteSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentEditSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentEditSelected_InvokeMethod);
                private static void _EmployeeAssignmentEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentEditSelectedMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentEditSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentEditSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    EmployeeAssignmentDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "EmployeeAssignmentDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._EmployeeAssignmentDeleteSelected_InvokeMethod);
                private static void _EmployeeAssignmentDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeAssignmentDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _EmployeeAssignmentDeleteSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeAssignmentDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeAssignmentDeleteSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeAssignmentDeleteSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsEditSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsEditSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsEditSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsEditSelected_InvokeMethod);
                private static void _StaffingRequirementsEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsEditSelectedMethod, sf);
                }
                private static global::System.Exception _StaffingRequirementsEditSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.StaffingRequirementsEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _StaffingRequirementsEditSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.StaffingRequirementsEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    StaffingRequirementsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "StaffingRequirementsDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._StaffingRequirementsDeleteSelected_InvokeMethod);
                private static void _StaffingRequirementsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._StaffingRequirementsDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _StaffingRequirementsDeleteSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.StaffingRequirementsDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _StaffingRequirementsDeleteSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.StaffingRequirementsDeleteSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    IncludeJS = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "IncludeJS",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._IncludeJS_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._IncludeJS_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._IncludeJS_InvokeMethod);
                private static void _IncludeJS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._IncludeJSMethod, sf);
                }
                private static global::System.Exception _IncludeJS_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.IncludeJS_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _IncludeJS_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.IncludeJS_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    DodViewSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "DodViewSkills",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodViewSkills_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodViewSkills_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodViewSkills_InvokeMethod);
                private static void _DodViewSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._DodViewSkillsMethod, sf);
                }
                private static global::System.Exception _DodViewSkills_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DodViewSkills_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DodViewSkills_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DodViewSkills_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry
                    DodEmployeeAssignmentsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Entry(
                        "DodEmployeeAssignmentsDeleteSelected",
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodEmployeeAssignmentsDeleteSelected_Stub,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodEmployeeAssignmentsDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.DODProjectsPortal.DetailsClass.MethodSetProperties._DodEmployeeAssignmentsDeleteSelected_InvokeMethod);
                private static void _DodEmployeeAssignmentsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectsPortal.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectsPortal, global::LightSwitchApplication.DODProjectsPortal.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, object sf)
                {
                    c(d, ref d._DodEmployeeAssignmentsDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _DodEmployeeAssignmentsDeleteSelected_CanInvoke(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.DodEmployeeAssignmentsDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _DodEmployeeAssignmentsDeleteSelected_InvokeMethod(global::LightSwitchApplication.DODProjectsPortal.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.DodEmployeeAssignmentsDeleteSelected_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DODProjectDashboard
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DODProjectDashboard() : base("LightSwitchApplication:DODProjectDashboard")
        {
            global::LightSwitchApplication.DODProjectDashboard.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DODProjectDashboard CreateInstance()
        {
            return new global::LightSwitchApplication.DODProjectDashboard(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectDashboard_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        partial void FeatureChartData_SelectionChanged();

        partial void FeatureChartData_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureChartData_Loaded(bool succeeded);

        partial void IncidentChartData_SelectionChanged();

        partial void IncidentChartData_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentChartData_Loaded(bool succeeded);

        partial void ProjectFeatures_SelectionChanged();

        partial void ProjectFeatures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Loaded(bool succeeded);

        partial void ProjectIncidents_SelectionChanged();

        partial void ProjectIncidents_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Loaded(bool succeeded);

        partial void ProjectTasks_SelectionChanged();

        partial void ProjectTasks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Loaded(bool succeeded);

        partial void ProjectVpns_SelectionChanged();

        partial void ProjectVpns_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Loaded(bool succeeded);

        partial void ProjectEnvironments_SelectionChanged();

        partial void ProjectEnvironments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Loaded(bool succeeded);

        partial void ProjectRule_SelectionChanged();

        partial void ProjectRule_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRule_Loaded(bool succeeded);

        partial void ProjectWebTools_SelectionChanged();

        partial void ProjectWebTools_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Loaded(bool succeeded);

        partial void DODEmployees_SelectionChanged();

        partial void DODEmployees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployees_Loaded(bool succeeded);

        partial void FeaturesSearchTerm_Changed();

        partial void IncidentsSearchTerm_Changed();

        partial void TasksSearchTerm_Changed();

        partial void SharepointLink_Changed();

        partial void ClientSharepointLink_Changed();

        partial void SkyDriveLink_Changed();

        partial void OnTimeLink_Changed();

        partial void UserId_Changed();

        partial void ProjectFeatureStatusFilter_Changed();

        partial void ProjectIncidentStatusFilter_Changed();

        partial void ProjectTaskStatusFilter_Changed();

        partial void ProjectFeatureComments_SelectionChanged();

        partial void ProjectFeatureComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Loaded(bool succeeded);

        partial void ProjectIncidentComments_SelectionChanged();

        partial void ProjectIncidentComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Loaded(bool succeeded);

        partial void FeatureTimeTrackings_SelectionChanged();

        partial void FeatureTimeTrackings_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTimeTrackings_Loaded(bool succeeded);

        partial void IncidentTimeTrackings_SelectionChanged();

        partial void IncidentTimeTrackings_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTimeTrackings_Loaded(bool succeeded);

        partial void TaskTimeTrackings_SelectionChanged();

        partial void TaskTimeTrackings_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTimeTrackings_Loaded(bool succeeded);

        partial void ProjectTaskComments_SelectionChanged();

        partial void ProjectTaskComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Loaded(bool succeeded);

        partial void FeatureTDDExtensions_SelectionChanged();

        partial void FeatureTDDExtensions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDExtensions_Loaded(bool succeeded);

        partial void IncidentTDDExtensions_SelectionChanged();

        partial void IncidentTDDExtensions_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDExtensions_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureChartData visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.DODFeatureChartDataItem> FeatureChartData
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureChartData);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureChartData_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentChartData visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.DODIncidentChartDataItem> IncidentChartData
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentChartData);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentChartData_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectFeatures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeature> ProjectFeatures
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidents visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncident> ProjectIncidents
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidents);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTasks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTask> ProjectTasks
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTasks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectVpns visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectVpn> ProjectVpns
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectVpns);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectEnvironments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectEnvironment> ProjectEnvironments
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectEnvironments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectRule visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectRule> ProjectRule
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectRule);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRule_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectWebTools visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectWebTool> ProjectWebTools
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectWebTools);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the DODEmployees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> DODEmployees
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.DODEmployees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeaturesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.TasksSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.TasksSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SharepointLink
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SharepointLink);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SharepointLink, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SharepointLink_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientSharepointLink
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ClientSharepointLink);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ClientSharepointLink, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientSharepointLink_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SkyDriveLink
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SkyDriveLink);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SkyDriveLink, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OnTimeLink
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.OnTimeLink);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.OnTimeLink, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OnTimeLink_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserId
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.UserId);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.UserId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectFeatureStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectIncidentStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectTaskStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.DODProjectDashboard.DetailsClass.SetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectFeatureComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatureComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidentComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidentComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureTimeTrackings visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTracking> FeatureTimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureTimeTrackings);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTimeTrackings_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentTimeTrackings visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTracking> IncidentTimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentTimeTrackings);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTimeTrackings_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskTimeTrackings visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTracking> TaskTimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.TaskTimeTrackings);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTimeTrackings_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTaskComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTaskComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureTDDExtensions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDExtension> FeatureTDDExtensions
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureTDDExtensions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDExtensions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentTDDExtensions visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDExtension> IncidentTDDExtensions
        {
            get
            {
                return global::LightSwitchApplication.DODProjectDashboard.DetailsClass.GetValue(this, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentTDDExtensions);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDExtensions_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the GoToOnTime screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void GoToOnTime()
        {
            this.Details.Methods.GoToOnTime.CreateInvocation().Execute();
        }
        partial void GoToOnTime_CanExecute(ref bool result);
        partial void GoToOnTime_Execute();

        /// <summary>
        /// Calls the GoToOnTimeIncident screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void GoToOnTimeIncident()
        {
            this.Details.Methods.GoToOnTimeIncident.CreateInvocation().Execute();
        }
        partial void GoToOnTimeIncident_CanExecute(ref bool result);
        partial void GoToOnTimeIncident_Execute();

        /// <summary>
        /// Calls the ViewInOnTime screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewInOnTime()
        {
            this.Details.Methods.ViewInOnTime.CreateInvocation().Execute();
        }
        partial void ViewInOnTime_CanExecute(ref bool result);
        partial void ViewInOnTime_Execute();

        /// <summary>
        /// Calls the ViewFeatureInOnTime screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewFeatureInOnTime()
        {
            this.Details.Methods.ViewFeatureInOnTime.CreateInvocation().Execute();
        }
        partial void ViewFeatureInOnTime_CanExecute(ref bool result);
        partial void ViewFeatureInOnTime_Execute();

        /// <summary>
        /// Calls the ViewIncidentInOnTime screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ViewIncidentInOnTime()
        {
            this.Details.Methods.ViewIncidentInOnTime.CreateInvocation().Execute();
        }
        partial void ViewIncidentInOnTime_CanExecute(ref bool result);
        partial void ViewIncidentInOnTime_Execute();

        /// <summary>
        /// Calls the OpenFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureComments()
        {
            this.Details.Methods.OpenFeatureComments.CreateInvocation().Execute();
        }
        partial void OpenFeatureComments_CanExecute(ref bool result);
        partial void OpenFeatureComments_Execute();

        /// <summary>
        /// Calls the OpenIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentComments()
        {
            this.Details.Methods.OpenIncidentComments.CreateInvocation().Execute();
        }
        partial void OpenIncidentComments_CanExecute(ref bool result);
        partial void OpenIncidentComments_Execute();

        /// <summary>
        /// Calls the SaveIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentComments()
        {
            this.Details.Methods.SaveIncidentComments.CreateInvocation().Execute();
        }
        partial void SaveIncidentComments_CanExecute(ref bool result);
        partial void SaveIncidentComments_Execute();

        /// <summary>
        /// Calls the SaveFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureComments()
        {
            this.Details.Methods.SaveFeatureComments.CreateInvocation().Execute();
        }
        partial void SaveFeatureComments_CanExecute(ref bool result);
        partial void SaveFeatureComments_Execute();

        /// <summary>
        /// Calls the CancelIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentComments()
        {
            this.Details.Methods.CancelIncidentComments.CreateInvocation().Execute();
        }
        partial void CancelIncidentComments_CanExecute(ref bool result);
        partial void CancelIncidentComments_Execute();

        /// <summary>
        /// Calls the CancelFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureComments()
        {
            this.Details.Methods.CancelFeatureComments.CreateInvocation().Execute();
        }
        partial void CancelFeatureComments_CanExecute(ref bool result);
        partial void CancelFeatureComments_Execute();

        /// <summary>
        /// Calls the ExportFeatureList screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportFeatureList()
        {
            this.Details.Methods.ExportFeatureList.CreateInvocation().Execute();
        }
        partial void ExportFeatureList_CanExecute(ref bool result);
        partial void ExportFeatureList_Execute();

        /// <summary>
        /// Calls the ExportIncidentList screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportIncidentList()
        {
            this.Details.Methods.ExportIncidentList.CreateInvocation().Execute();
        }
        partial void ExportIncidentList_CanExecute(ref bool result);
        partial void ExportIncidentList_Execute();

        /// <summary>
        /// Calls the OpenDailyTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenDailyTimeWindow()
        {
            this.Details.Methods.OpenDailyTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenDailyTimeWindow_CanExecute(ref bool result);
        partial void OpenDailyTimeWindow_Execute();

        /// <summary>
        /// Calls the SaveFeatureTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureTimeTrackings()
        {
            this.Details.Methods.SaveFeatureTimeTrackings.CreateInvocation().Execute();
        }
        partial void SaveFeatureTimeTrackings_CanExecute(ref bool result);
        partial void SaveFeatureTimeTrackings_Execute();

        /// <summary>
        /// Calls the CancelFeatureTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureTimeTrackings()
        {
            this.Details.Methods.CancelFeatureTimeTrackings.CreateInvocation().Execute();
        }
        partial void CancelFeatureTimeTrackings_CanExecute(ref bool result);
        partial void CancelFeatureTimeTrackings_Execute();

        /// <summary>
        /// Calls the SaveIncidentTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentTimeTrackings()
        {
            this.Details.Methods.SaveIncidentTimeTrackings.CreateInvocation().Execute();
        }
        partial void SaveIncidentTimeTrackings_CanExecute(ref bool result);
        partial void SaveIncidentTimeTrackings_Execute();

        /// <summary>
        /// Calls the CancelIncidentTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentTimeTrackings()
        {
            this.Details.Methods.CancelIncidentTimeTrackings.CreateInvocation().Execute();
        }
        partial void CancelIncidentTimeTrackings_CanExecute(ref bool result);
        partial void CancelIncidentTimeTrackings_Execute();

        /// <summary>
        /// Calls the OpenIncidentDailyTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentDailyTimeWindow()
        {
            this.Details.Methods.OpenIncidentDailyTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentDailyTimeWindow_CanExecute(ref bool result);
        partial void OpenIncidentDailyTimeWindow_Execute();

        /// <summary>
        /// Calls the SaveTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskComments()
        {
            this.Details.Methods.SaveTaskComments.CreateInvocation().Execute();
        }
        partial void SaveTaskComments_CanExecute(ref bool result);
        partial void SaveTaskComments_Execute();

        /// <summary>
        /// Calls the CancelTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskComments()
        {
            this.Details.Methods.CancelTaskComments.CreateInvocation().Execute();
        }
        partial void CancelTaskComments_CanExecute(ref bool result);
        partial void CancelTaskComments_Execute();

        /// <summary>
        /// Calls the SaveTaskTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskTimeTrackings()
        {
            this.Details.Methods.SaveTaskTimeTrackings.CreateInvocation().Execute();
        }
        partial void SaveTaskTimeTrackings_CanExecute(ref bool result);
        partial void SaveTaskTimeTrackings_Execute();

        /// <summary>
        /// Calls the CancelTaskTimeTrackings screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskTimeTrackings()
        {
            this.Details.Methods.CancelTaskTimeTrackings.CreateInvocation().Execute();
        }
        partial void CancelTaskTimeTrackings_CanExecute(ref bool result);
        partial void CancelTaskTimeTrackings_Execute();

        /// <summary>
        /// Calls the OpenTaskDailyTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskDailyTimeWindow()
        {
            this.Details.Methods.OpenTaskDailyTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskDailyTimeWindow_CanExecute(ref bool result);
        partial void OpenTaskDailyTimeWindow_Execute();

        /// <summary>
        /// Calls the OpenTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskComments()
        {
            this.Details.Methods.OpenTaskComments.CreateInvocation().Execute();
        }
        partial void OpenTaskComments_CanExecute(ref bool result);
        partial void OpenTaskComments_Execute();

        /// <summary>
        /// Calls the SaveTDDExtensions screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTDDExtensions()
        {
            this.Details.Methods.SaveTDDExtensions.CreateInvocation().Execute();
        }
        partial void SaveTDDExtensions_CanExecute(ref bool result);
        partial void SaveTDDExtensions_Execute();

        /// <summary>
        /// Calls the CancelTDDExtensions screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTDDExtensions()
        {
            this.Details.Methods.CancelTDDExtensions.CreateInvocation().Execute();
        }
        partial void CancelTDDExtensions_CanExecute(ref bool result);
        partial void CancelTDDExtensions_Execute();

        /// <summary>
        /// Calls the OpenTDDWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTDDWindow()
        {
            this.Details.Methods.OpenTDDWindow.CreateInvocation().Execute();
        }
        partial void OpenTDDWindow_CanExecute(ref bool result);
        partial void OpenTDDWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentsTDDWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentsTDDWindow()
        {
            this.Details.Methods.OpenIncidentsTDDWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentsTDDWindow_CanExecute(ref bool result);
        partial void OpenIncidentsTDDWindow_Execute();

        /// <summary>
        /// Calls the ToogleCompletedFeatures screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToogleCompletedFeatures()
        {
            this.Details.Methods.ToogleCompletedFeatures.CreateInvocation().Execute();
        }
        partial void ToogleCompletedFeatures_CanExecute(ref bool result);
        partial void ToogleCompletedFeatures_Execute();

        /// <summary>
        /// Calls the ToogleCompletedIncidents screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToogleCompletedIncidents()
        {
            this.Details.Methods.ToogleCompletedIncidents.CreateInvocation().Execute();
        }
        partial void ToogleCompletedIncidents_CanExecute(ref bool result);
        partial void ToogleCompletedIncidents_Execute();

        /// <summary>
        /// Calls the ToogleCompletedTasks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToogleCompletedTasks()
        {
            this.Details.Methods.ToogleCompletedTasks.CreateInvocation().Execute();
        }
        partial void ToogleCompletedTasks_CanExecute(ref bool result);
        partial void ToogleCompletedTasks_Execute();

        /// <summary>
        /// Calls the ExportFeatureTdd screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportFeatureTdd()
        {
            this.Details.Methods.ExportFeatureTdd.CreateInvocation().Execute();
        }
        partial void ExportFeatureTdd_CanExecute(ref bool result);
        partial void ExportFeatureTdd_Execute();

        /// <summary>
        /// Calls the ExportIncidentTdd screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportIncidentTdd()
        {
            this.Details.Methods.ExportIncidentTdd.CreateInvocation().Execute();
        }
        partial void ExportIncidentTdd_CanExecute(ref bool result);
        partial void ExportIncidentTdd_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySet, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSet, global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.Projects;
                var initializeCommandEntry = global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.GoToOnTime;
                var initializeMethodEntry = global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.GoToOnTime;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                __DODProjectDashboardEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeSavingEvent,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeSavedEvent,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeClosingEvent,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeCreated,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeActivated,
                    global::LightSwitchApplication.DODProjectDashboard.DetailsClass.__DODProjectDashboard_InvokeSaveErrorEvent);
            private static void __DODProjectDashboard_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DODProjectDashboard_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DODProjectDashboard_InvokeSavingEvent(global::LightSwitchApplication.DODProjectDashboard s)
            {
                bool handled = false;
                s.DODProjectDashboard_Saving(ref handled);
                return handled;
            }
            private static void __DODProjectDashboard_InvokeSavedEvent(global::LightSwitchApplication.DODProjectDashboard s)
            {
                s.DODProjectDashboard_Saved();
            }
            private static bool __DODProjectDashboard_InvokeClosingEvent(global::LightSwitchApplication.DODProjectDashboard s)
            {
                bool cancel = false;
                s.DODProjectDashboard_Closing(ref cancel);
                return cancel;
            }
            private static void __DODProjectDashboard_InvokeCreated(global::LightSwitchApplication.DODProjectDashboard s)
            {
                s.DODProjectDashboard_Created();
            }
            private static void __DODProjectDashboard_InvokeActivated(global::LightSwitchApplication.DODProjectDashboard s)
            {
                s.DODProjectDashboard_Activated();
            }
            private static bool __DODProjectDashboard_InvokeSaveErrorEvent(global::LightSwitchApplication.DODProjectDashboard s, global::System.Exception ex)
            {
                bool handled = false;
                s.DODProjectDashboard_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            this.Screen.DataWorkspace.ApplicationData.DODProjects(),
                            "Client"),
                        "Director"),
                    "Manager");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureChartDataQuery(global::System.Nullable<int> projectId)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.DODFeatureCountByStatus(projectId);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentChartDataQuery(global::System.Nullable<int> projectId)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.DODIncidentCountByStatus(projectId);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectFeaturesQuery(string SearchTerm, string Status)
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectFeatures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (p) => ((((((((((((((SearchTerm == null) || p.Developer.UserID.Contains(SearchTerm)) || ((SearchTerm == null) || p.Developer.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Developer.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.ClientId.Contains(SearchTerm))) || ((SearchTerm == null) || p.DevelopmentProjectName.Contains(SearchTerm))) || ((SearchTerm == null) || p.DocumentName.Contains(SearchTerm))) || ((SearchTerm == null) || p.DODTeam.Contains(SearchTerm))) || ((SearchTerm == null) || p.FeatureId.Contains(SearchTerm))) || ((SearchTerm == null) || p.MergeStatus.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.TestingStatus.Contains(SearchTerm))) && (p.Id > 0)) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                        "Developer"),
                    "PrimaryContact");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentsQuery(string SearchTerm, string Status)
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectIncidentsItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (p) => (((((((((((((SearchTerm == null) || p.ClientId.Contains(SearchTerm)) || ((SearchTerm == null) || p.Description.Contains(SearchTerm))) || ((SearchTerm == null) || p.DODTeam.Contains(SearchTerm))) || ((SearchTerm == null) || p.Developer.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Developer.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.DevelopmentProjectName.Contains(SearchTerm))) || ((SearchTerm == null) || p.DODTeam.Contains(SearchTerm))) || ((SearchTerm == null) || p.IncidentId.Contains(SearchTerm))) || ((SearchTerm == null) || p.Name.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) && (p.Id > 0)) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                        "ReportedBy"),
                    "Developer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTasksQuery(string SearchTerm, string Status)
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectTasks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => (((((((((SearchTerm == null) || p.DODTeam.Contains(SearchTerm)) || ((SearchTerm == null) || p.Employee.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Employee.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Name.Contains(SearchTerm))) || ((SearchTerm == null) || p.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) && (p.Id > 0)) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectVpnsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectVpn> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectVpn>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectVpns).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectEnvironmentsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectEnvironment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectEnvironment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectEnvironments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectRuleQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRule> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectRule>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectRule).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectWebToolsQuery()
            {
                if (this.Screen.Projects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectWebTool> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectWebTool>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Projects.SelectedItem.Details.Properties.ProjectWebTools).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DODEmployeesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.DODEmployees();
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectFeatureCommentsQuery()
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.ProjectFeatureComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                        loader,
                        (p) => p.PostDate),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentCommentsQuery()
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.ProjectIncidentComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                        loader,
                        (p) => p.PostDate),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureTimeTrackingsQuery()
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.TimeTrackings).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.EndTime),
                        (t) => t.StartTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentTimeTrackingsQuery()
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.TimeTrackings).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.EndTime),
                        (t) => t.StartTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskTimeTrackingsQuery()
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.TimeTrackings).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenByDescending(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderByDescending(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.EndTime),
                        (t) => t.StartTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTaskCommentsQuery()
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.ProjectTaskComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureTDDExtensionsQuery()
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.TDDExtensions).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentTDDExtensionsQuery()
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.TDDExtensions).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem>.Data _FeatureChartData;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem>.Data _IncidentChartData;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _ProjectFeatures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncidents;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTasks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn>.Data _ProjectVpns;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment>.Data _ProjectEnvironments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule>.Data _ProjectRule;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool>.Data _ProjectWebTools;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee>.Data _DODEmployees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _FeaturesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _IncidentsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _TasksSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _SharepointLink;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _ClientSharepointLink;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _SkyDriveLink;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _OnTimeLink;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _UserId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _ProjectFeatureStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _ProjectIncidentStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data _ProjectTaskStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data _ProjectFeatureComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data _ProjectIncidentComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _FeatureTimeTrackings;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _IncidentTimeTrackings;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _TaskTimeTrackings;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data _ProjectTaskComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data _FeatureTDDExtensions;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data _IncidentTDDExtensions;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _GoToOnTimeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _GoToOnTimeIncidentCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewInOnTimeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewFeatureInOnTimeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewIncidentInOnTimeCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportFeatureListCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportIncidentListCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenDailyTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveFeatureTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelFeatureTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveIncidentTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelIncidentTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentDailyTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTaskTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTaskTimeTrackingsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTaskDailyTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTDDExtensionsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTDDExtensionsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTDDWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentsTDDWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedFeaturesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedIncidentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedTasksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportFeatureTddCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportIncidentTddCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _GoToOnTimeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _GoToOnTimeIncidentMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewInOnTimeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewFeatureInOnTimeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ViewIncidentInOnTimeMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportFeatureListMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportIncidentListMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenDailyTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveFeatureTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelFeatureTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveIncidentTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelIncidentTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentDailyTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTaskTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTaskTimeTrackingsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTaskDailyTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _SaveTDDExtensionsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _CancelTDDExtensionsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenTDDWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _OpenIncidentsTDDWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedFeaturesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedIncidentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ToogleCompletedTasksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportFeatureTddMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data _ExportIncidentTddMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.Projects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem> FeatureChartData
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureChartData);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem> IncidentChartData
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentChartData);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature> ProjectFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn> ProjectVpns
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectVpns);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment> ProjectEnvironments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectEnvironments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule> ProjectRule
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectRule);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool> ProjectWebTools
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectWebTools);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee> DODEmployees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.DODEmployees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> FeaturesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> IncidentsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> TasksSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.TasksSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> SharepointLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SharepointLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> ClientSharepointLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ClientSharepointLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> SkyDriveLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.SkyDriveLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> OnTimeLink
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.OnTimeLink);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> UserId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.UserId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> ProjectFeatureStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> ProjectIncidentStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string> ProjectTaskStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking> FeatureTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking> IncidentTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking> TaskTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.TaskTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.ProjectTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension> FeatureTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.FeatureTDDExtensions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension> IncidentTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties.IncidentTDDExtensions);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> GoToOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.GoToOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> GoToOnTimeIncident
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.GoToOnTimeIncident);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ViewInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewFeatureInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ViewFeatureInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewIncidentInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ViewIncidentInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportFeatureList
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ExportFeatureList);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportIncidentList
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ExportIncidentList);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveFeatureTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveFeatureTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelFeatureTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelFeatureTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveIncidentTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveIncidentTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelIncidentTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelIncidentTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenIncidentDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTaskTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveTaskTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTaskTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelTaskTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTaskDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenTaskDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.SaveTDDExtensions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.CancelTDDExtensions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTDDWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenTDDWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentsTDDWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.OpenIncidentsTDDWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ToogleCompletedFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ToogleCompletedIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ToogleCompletedTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportFeatureTdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ExportFeatureTdd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportIncidentTdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties.ExportIncidentTdd);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> GoToOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.GoToOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> GoToOnTimeIncident
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.GoToOnTimeIncident);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ViewInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewFeatureInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ViewFeatureInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ViewIncidentInOnTime
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ViewIncidentInOnTime);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportFeatureList
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ExportFeatureList);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportIncidentList
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ExportIncidentList);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveFeatureTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveFeatureTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelFeatureTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelFeatureTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveIncidentTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveIncidentTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelIncidentTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelIncidentTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenIncidentDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTaskTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveTaskTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTaskTimeTrackings
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelTaskTimeTrackings);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTaskDailyTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenTaskDailyTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> SaveTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.SaveTDDExtensions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> CancelTDDExtensions
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.CancelTDDExtensions);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenTDDWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenTDDWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> OpenIncidentsTDDWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.OpenIncidentsTDDWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ToogleCompletedFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ToogleCompletedIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ToogleCompletedTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ToogleCompletedTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportFeatureTdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ExportFeatureTdd);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass> ExportIncidentTdd
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>)base.GetItem(global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties.ExportIncidentTdd);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem>.Entry
                    FeatureChartData = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem>.Entry(
                        "FeatureChartData",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureChartData_OnLoaded);
                private static void _FeatureChartData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODFeatureChartDataItem>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureChartData, sf);
                }
                private static void _FeatureChartData_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureChartData_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureChartData_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.FeatureChartDataQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _FeatureChartData_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.FeatureChartData_SelectionChanged();
                }
                private static void _FeatureChartData_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureChartData_Changed(e);
                }
                private static void _FeatureChartData_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.FeatureChartData_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem>.Entry
                    IncidentChartData = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem>.Entry(
                        "IncidentChartData",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentChartData_OnLoaded);
                private static void _IncidentChartData_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.DODIncidentChartDataItem>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentChartData, sf);
                }
                private static void _IncidentChartData_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentChartData_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentChartData_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.IncidentChartDataQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _IncidentChartData_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.IncidentChartData_SelectionChanged();
                }
                private static void _IncidentChartData_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentChartData_Changed(e);
                }
                private static void _IncidentChartData_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.IncidentChartData_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    ProjectFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "ProjectFeatures",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatures_OnLoaded);
                private static void _ProjectFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatures, sf);
                }
                private static void _ProjectFeatures_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectFeatures_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectFeaturesQuery((string)args[0], (string)args[1]);
                }
                private static void _ProjectFeatures_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectFeatures_SelectionChanged();
                }
                private static void _ProjectFeatures_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectFeatures_Changed(e);
                }
                private static void _ProjectFeatures_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectFeatures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncidents",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidents_OnLoaded);
                private static void _ProjectIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidents, sf);
                }
                private static void _ProjectIncidents_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidents_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidents_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentsQuery((string)args[0], (string)args[1]);
                }
                private static void _ProjectIncidents_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectIncidents_SelectionChanged();
                }
                private static void _ProjectIncidents_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidents_Changed(e);
                }
                private static void _ProjectIncidents_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectIncidents_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTasks",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTasks_OnLoaded);
                private static void _ProjectTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTasks, sf);
                }
                private static void _ProjectTasks_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTasks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTasks_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectTasksQuery((string)args[0], (string)args[1]);
                }
                private static void _ProjectTasks_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectTasks_SelectionChanged();
                }
                private static void _ProjectTasks_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTasks_Changed(e);
                }
                private static void _ProjectTasks_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectTasks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn>.Entry
                    ProjectVpns = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn>.Entry(
                        "ProjectVpns",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectVpns_OnLoaded);
                private static void _ProjectVpns_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectVpn>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectVpns, sf);
                }
                private static void _ProjectVpns_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectVpns_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectVpns_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectVpnsQuery();
                }
                private static void _ProjectVpns_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectVpns_SelectionChanged();
                }
                private static void _ProjectVpns_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectVpns_Changed(e);
                }
                private static void _ProjectVpns_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectVpns_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment>.Entry
                    ProjectEnvironments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment>.Entry(
                        "ProjectEnvironments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectEnvironments_OnLoaded);
                private static void _ProjectEnvironments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectEnvironment>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectEnvironments, sf);
                }
                private static void _ProjectEnvironments_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectEnvironments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectEnvironments_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectEnvironmentsQuery();
                }
                private static void _ProjectEnvironments_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectEnvironments_SelectionChanged();
                }
                private static void _ProjectEnvironments_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectEnvironments_Changed(e);
                }
                private static void _ProjectEnvironments_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectEnvironments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule>.Entry
                    ProjectRule = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule>.Entry(
                        "ProjectRule",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectRule_OnLoaded);
                private static void _ProjectRule_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectRule>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectRule, sf);
                }
                private static void _ProjectRule_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectRule_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectRule_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectRuleQuery();
                }
                private static void _ProjectRule_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectRule_SelectionChanged();
                }
                private static void _ProjectRule_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectRule_Changed(e);
                }
                private static void _ProjectRule_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectRule_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool>.Entry
                    ProjectWebTools = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool>.Entry(
                        "ProjectWebTools",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectWebTools_OnLoaded);
                private static void _ProjectWebTools_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectWebTool>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectWebTools, sf);
                }
                private static void _ProjectWebTools_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectWebTools_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectWebTools_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectWebToolsQuery();
                }
                private static void _ProjectWebTools_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectWebTools_SelectionChanged();
                }
                private static void _ProjectWebTools_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectWebTools_Changed(e);
                }
                private static void _ProjectWebTools_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectWebTools_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    DODEmployees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "DODEmployees",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._DODEmployees_OnLoaded);
                private static void _DODEmployees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._DODEmployees, sf);
                }
                private static void _DODEmployees_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DODEmployees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _DODEmployees_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.DODEmployeesQuery();
                }
                private static void _DODEmployees_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.DODEmployees_SelectionChanged();
                }
                private static void _DODEmployees_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.DODEmployees_Changed(e);
                }
                private static void _DODEmployees_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.DODEmployees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    FeaturesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "FeaturesSearchTerm",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeaturesSearchTerm_OnValueChanged);
                private static void _FeaturesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesSearchTerm, sf);
                }
                private static void _FeaturesSearchTerm_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesSearchTerm_Validate(r);
                }
                private static void _FeaturesSearchTerm_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.FeaturesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    IncidentsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "IncidentsSearchTerm",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentsSearchTerm_OnValueChanged);
                private static void _IncidentsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsSearchTerm, sf);
                }
                private static void _IncidentsSearchTerm_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsSearchTerm_Validate(r);
                }
                private static void _IncidentsSearchTerm_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.IncidentsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    TasksSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "TasksSearchTerm",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TasksSearchTerm_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TasksSearchTerm_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TasksSearchTerm_OnValueChanged);
                private static void _TasksSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksSearchTerm, sf);
                }
                private static void _TasksSearchTerm_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksSearchTerm_Validate(r);
                }
                private static void _TasksSearchTerm_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.TasksSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    SharepointLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "SharepointLink",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SharepointLink_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SharepointLink_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SharepointLink_OnValueChanged);
                private static void _SharepointLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SharepointLink, sf);
                }
                private static void _SharepointLink_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SharepointLink_Validate(r);
                }
                private static void _SharepointLink_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.SharepointLink_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    ClientSharepointLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "ClientSharepointLink",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ClientSharepointLink_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ClientSharepointLink_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ClientSharepointLink_OnValueChanged);
                private static void _ClientSharepointLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientSharepointLink, sf);
                }
                private static void _ClientSharepointLink_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ClientSharepointLink_Validate(r);
                }
                private static void _ClientSharepointLink_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ClientSharepointLink_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    SkyDriveLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "SkyDriveLink",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SkyDriveLink_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SkyDriveLink_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._SkyDriveLink_OnValueChanged);
                private static void _SkyDriveLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SkyDriveLink, sf);
                }
                private static void _SkyDriveLink_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SkyDriveLink_Validate(r);
                }
                private static void _SkyDriveLink_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.SkyDriveLink_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    OnTimeLink = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "OnTimeLink",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._OnTimeLink_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._OnTimeLink_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._OnTimeLink_OnValueChanged);
                private static void _OnTimeLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OnTimeLink, sf);
                }
                private static void _OnTimeLink_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.OnTimeLink_Validate(r);
                }
                private static void _OnTimeLink_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.OnTimeLink_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    UserId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "UserId",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._UserId_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._UserId_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._UserId_OnValueChanged);
                private static void _UserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._UserId, sf);
                }
                private static void _UserId_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UserId_Validate(r);
                }
                private static void _UserId_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.UserId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    ProjectFeatureStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "ProjectFeatureStatusFilter",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_OnValueChanged);
                private static void _ProjectFeatureStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureStatusFilter, sf);
                }
                private static void _ProjectFeatureStatusFilter_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatureStatusFilter_Validate(r);
                }
                private static void _ProjectFeatureStatusFilter_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectFeatureStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    ProjectIncidentStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "ProjectIncidentStatusFilter",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_OnValueChanged);
                private static void _ProjectIncidentStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentStatusFilter, sf);
                }
                private static void _ProjectIncidentStatusFilter_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentStatusFilter_Validate(r);
                }
                private static void _ProjectIncidentStatusFilter_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectIncidentStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry
                    ProjectTaskStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Entry(
                        "ProjectTaskStatusFilter",
                        false,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_OnValueChanged);
                private static void _ProjectTaskStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, string>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTaskStatusFilter, sf);
                }
                private static void _ProjectTaskStatusFilter_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTaskStatusFilter_Validate(r);
                }
                private static void _ProjectTaskStatusFilter_OnValueChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectTaskStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry
                    ProjectFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry(
                        "ProjectFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnLoaded);
                private static void _ProjectFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureComments, sf);
                }
                private static void _ProjectFeatureComments_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatureComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectFeatureComments_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectFeatureCommentsQuery();
                }
                private static void _ProjectFeatureComments_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectFeatureComments_SelectionChanged();
                }
                private static void _ProjectFeatureComments_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectFeatureComments_Changed(e);
                }
                private static void _ProjectFeatureComments_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectFeatureComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry
                    ProjectIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry(
                        "ProjectIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnLoaded);
                private static void _ProjectIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentComments, sf);
                }
                private static void _ProjectIncidentComments_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidentComments_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentCommentsQuery();
                }
                private static void _ProjectIncidentComments_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectIncidentComments_SelectionChanged();
                }
                private static void _ProjectIncidentComments_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidentComments_Changed(e);
                }
                private static void _ProjectIncidentComments_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectIncidentComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    FeatureTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "FeatureTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTimeTrackings_OnLoaded);
                private static void _FeatureTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureTimeTrackings, sf);
                }
                private static void _FeatureTimeTrackings_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureTimeTrackings_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureTimeTrackings_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.FeatureTimeTrackingsQuery();
                }
                private static void _FeatureTimeTrackings_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.FeatureTimeTrackings_SelectionChanged();
                }
                private static void _FeatureTimeTrackings_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureTimeTrackings_Changed(e);
                }
                private static void _FeatureTimeTrackings_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.FeatureTimeTrackings_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    IncidentTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "IncidentTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTimeTrackings_OnLoaded);
                private static void _IncidentTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentTimeTrackings, sf);
                }
                private static void _IncidentTimeTrackings_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentTimeTrackings_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentTimeTrackings_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.IncidentTimeTrackingsQuery();
                }
                private static void _IncidentTimeTrackings_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.IncidentTimeTrackings_SelectionChanged();
                }
                private static void _IncidentTimeTrackings_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentTimeTrackings_Changed(e);
                }
                private static void _IncidentTimeTrackings_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.IncidentTimeTrackings_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    TaskTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "TaskTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._TaskTimeTrackings_OnLoaded);
                private static void _TaskTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskTimeTrackings, sf);
                }
                private static void _TaskTimeTrackings_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskTimeTrackings_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskTimeTrackings_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.TaskTimeTrackingsQuery();
                }
                private static void _TaskTimeTrackings_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.TaskTimeTrackings_SelectionChanged();
                }
                private static void _TaskTimeTrackings_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskTimeTrackings_Changed(e);
                }
                private static void _TaskTimeTrackings_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.TaskTimeTrackings_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry
                    ProjectTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry(
                        "ProjectTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._ProjectTaskComments_OnLoaded);
                private static void _ProjectTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTaskComments, sf);
                }
                private static void _ProjectTaskComments_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTaskComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTaskComments_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.ProjectTaskCommentsQuery();
                }
                private static void _ProjectTaskComments_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.ProjectTaskComments_SelectionChanged();
                }
                private static void _ProjectTaskComments_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTaskComments_Changed(e);
                }
                private static void _ProjectTaskComments_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.ProjectTaskComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry
                    FeatureTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry(
                        "FeatureTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._FeatureTDDExtensions_OnLoaded);
                private static void _FeatureTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureTDDExtensions, sf);
                }
                private static void _FeatureTDDExtensions_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureTDDExtensions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureTDDExtensions_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.FeatureTDDExtensionsQuery();
                }
                private static void _FeatureTDDExtensions_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.FeatureTDDExtensions_SelectionChanged();
                }
                private static void _FeatureTDDExtensions_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureTDDExtensions_Changed(e);
                }
                private static void _FeatureTDDExtensions_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.FeatureTDDExtensions_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry
                    IncidentTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry(
                        "IncidentTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_Validate,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_CreateQuery,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_SelectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_OnCollectionChanged,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.PropertySetProperties._IncidentTDDExtensions_OnLoaded);
                private static void _IncidentTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentTDDExtensions, sf);
                }
                private static void _IncidentTDDExtensions_Validate(global::LightSwitchApplication.DODProjectDashboard s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentTDDExtensions_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentTDDExtensions_CreateQuery(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object[] args)
                {
                    return d.IncidentTDDExtensionsQuery();
                }
                private static void _IncidentTDDExtensions_SelectionChanged(global::LightSwitchApplication.DODProjectDashboard s)
                {
                    s.IncidentTDDExtensions_SelectionChanged();
                }
                private static void _IncidentTDDExtensions_OnCollectionChanged(global::LightSwitchApplication.DODProjectDashboard s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentTDDExtensions_Changed(e);
                }
                private static void _IncidentTDDExtensions_OnLoaded(global::LightSwitchApplication.DODProjectDashboard s, bool succeeded)
                {
                    s.IncidentTDDExtensions_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    GoToOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "GoToOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._GoToOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._GoToOnTime_CreateExecutableObject);
                private static void _GoToOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._GoToOnTimeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _GoToOnTime_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.GoToOnTime.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    GoToOnTimeIncident = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "GoToOnTimeIncident",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._GoToOnTimeIncident_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._GoToOnTimeIncident_CreateExecutableObject);
                private static void _GoToOnTimeIncident_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._GoToOnTimeIncidentCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _GoToOnTimeIncident_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.GoToOnTimeIncident.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewInOnTime_CreateExecutableObject);
                private static void _ViewInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewInOnTimeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewInOnTime_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ViewInOnTime.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewFeatureInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewFeatureInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewFeatureInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewFeatureInOnTime_CreateExecutableObject);
                private static void _ViewFeatureInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewFeatureInOnTimeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewFeatureInOnTime_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ViewFeatureInOnTime.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewIncidentInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewIncidentInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewIncidentInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ViewIncidentInOnTime_CreateExecutableObject);
                private static void _ViewIncidentInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewIncidentInOnTimeCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ViewIncidentInOnTime_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ViewIncidentInOnTime.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenFeatureComments_CreateExecutableObject);
                private static void _OpenFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentComments_CreateExecutableObject);
                private static void _OpenIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveIncidentComments_CreateExecutableObject);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveFeatureComments_CreateExecutableObject);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelIncidentComments_CreateExecutableObject);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelFeatureComments_CreateExecutableObject);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportFeatureList = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportFeatureList",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportFeatureList_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportFeatureList_CreateExecutableObject);
                private static void _ExportFeatureList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportFeatureListCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportFeatureList_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ExportFeatureList.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportIncidentList = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportIncidentList",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportIncidentList_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportIncidentList_CreateExecutableObject);
                private static void _ExportIncidentList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportIncidentListCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportIncidentList_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ExportIncidentList.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenDailyTimeWindow_CreateExecutableObject);
                private static void _OpenDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDailyTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenDailyTimeWindow_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenDailyTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveFeatureTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveFeatureTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveFeatureTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveFeatureTimeTrackings_CreateExecutableObject);
                private static void _SaveFeatureTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveFeatureTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelFeatureTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelFeatureTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelFeatureTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelFeatureTimeTrackings_CreateExecutableObject);
                private static void _CancelFeatureTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelFeatureTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveIncidentTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveIncidentTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveIncidentTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveIncidentTimeTrackings_CreateExecutableObject);
                private static void _SaveIncidentTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveIncidentTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelIncidentTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelIncidentTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelIncidentTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelIncidentTimeTrackings_CreateExecutableObject);
                private static void _CancelIncidentTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelIncidentTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentDailyTimeWindow_CreateExecutableObject);
                private static void _OpenIncidentDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentDailyTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentDailyTimeWindow_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenIncidentDailyTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTaskComments_CreateExecutableObject);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTaskComments_CreateExecutableObject);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTaskTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTaskTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTaskTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTaskTimeTrackings_CreateExecutableObject);
                private static void _SaveTaskTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveTaskTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTaskTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTaskTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTaskTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTaskTimeTrackings_CreateExecutableObject);
                private static void _CancelTaskTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskTimeTrackingsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskTimeTrackings_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelTaskTimeTrackings.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTaskDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTaskDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTaskDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTaskDailyTimeWindow_CreateExecutableObject);
                private static void _OpenTaskDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskDailyTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskDailyTimeWindow_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenTaskDailyTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTaskComments_CreateExecutableObject);
                private static void _OpenTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskComments_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._SaveTDDExtensions_CreateExecutableObject);
                private static void _SaveTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTDDExtensionsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTDDExtensions_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.SaveTDDExtensions.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._CancelTDDExtensions_CreateExecutableObject);
                private static void _CancelTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTDDExtensionsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTDDExtensions_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.CancelTDDExtensions.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTDDWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTDDWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTDDWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenTDDWindow_CreateExecutableObject);
                private static void _OpenTDDWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTDDWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTDDWindow_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenTDDWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentsTDDWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentsTDDWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentsTDDWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._OpenIncidentsTDDWindow_CreateExecutableObject);
                private static void _OpenIncidentsTDDWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentsTDDWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentsTDDWindow_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.OpenIncidentsTDDWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedFeatures",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedFeatures_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedFeatures_CreateExecutableObject);
                private static void _ToogleCompletedFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedFeaturesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToogleCompletedFeatures_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ToogleCompletedFeatures.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedIncidents",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedIncidents_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedIncidents_CreateExecutableObject);
                private static void _ToogleCompletedIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedIncidentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToogleCompletedIncidents_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ToogleCompletedIncidents.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedTasks",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedTasks_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ToogleCompletedTasks_CreateExecutableObject);
                private static void _ToogleCompletedTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedTasksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToogleCompletedTasks_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ToogleCompletedTasks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportFeatureTdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportFeatureTdd",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportFeatureTdd_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportFeatureTdd_CreateExecutableObject);
                private static void _ExportFeatureTdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportFeatureTddCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportFeatureTdd_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ExportFeatureTdd.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportIncidentTdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportIncidentTdd",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportIncidentTdd_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.CommandSetProperties._ExportIncidentTdd_CreateExecutableObject);
                private static void _ExportIncidentTdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportIncidentTddCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportIncidentTdd_CreateExecutableObject(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.DODProjectDashboard.DetailsClass)d).Methods.ExportIncidentTdd.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    GoToOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "GoToOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTime_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTime_InvokeMethod);
                private static void _GoToOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._GoToOnTimeMethod, sf);
                }
                private static global::System.Exception _GoToOnTime_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.GoToOnTime_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _GoToOnTime_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.GoToOnTime_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    GoToOnTimeIncident = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "GoToOnTimeIncident",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTimeIncident_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTimeIncident_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._GoToOnTimeIncident_InvokeMethod);
                private static void _GoToOnTimeIncident_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._GoToOnTimeIncidentMethod, sf);
                }
                private static global::System.Exception _GoToOnTimeIncident_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.GoToOnTimeIncident_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _GoToOnTimeIncident_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.GoToOnTimeIncident_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewInOnTime_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewInOnTime_InvokeMethod);
                private static void _ViewInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewInOnTimeMethod, sf);
                }
                private static global::System.Exception _ViewInOnTime_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewInOnTime_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewInOnTime_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewInOnTime_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewFeatureInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewFeatureInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewFeatureInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewFeatureInOnTime_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewFeatureInOnTime_InvokeMethod);
                private static void _ViewFeatureInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewFeatureInOnTimeMethod, sf);
                }
                private static global::System.Exception _ViewFeatureInOnTime_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewFeatureInOnTime_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewFeatureInOnTime_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewFeatureInOnTime_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ViewIncidentInOnTime = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ViewIncidentInOnTime",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewIncidentInOnTime_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewIncidentInOnTime_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ViewIncidentInOnTime_InvokeMethod);
                private static void _ViewIncidentInOnTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ViewIncidentInOnTimeMethod, sf);
                }
                private static global::System.Exception _ViewIncidentInOnTime_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ViewIncidentInOnTime_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ViewIncidentInOnTime_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ViewIncidentInOnTime_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenFeatureComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenFeatureComments_InvokeMethod);
                private static void _OpenFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _OpenFeatureComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentComments_InvokeMethod);
                private static void _OpenIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _OpenIncidentComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentComments_InvokeMethod);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _SaveIncidentComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureComments_InvokeMethod);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _SaveFeatureComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentComments_InvokeMethod);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _CancelIncidentComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureComments_InvokeMethod);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _CancelFeatureComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportFeatureList = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportFeatureList",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureList_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureList_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureList_InvokeMethod);
                private static void _ExportFeatureList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportFeatureListMethod, sf);
                }
                private static global::System.Exception _ExportFeatureList_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportFeatureList_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportFeatureList_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportFeatureList_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportIncidentList = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportIncidentList",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentList_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentList_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentList_InvokeMethod);
                private static void _ExportIncidentList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportIncidentListMethod, sf);
                }
                private static global::System.Exception _ExportIncidentList_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportIncidentList_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportIncidentList_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportIncidentList_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenDailyTimeWindow_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenDailyTimeWindow_InvokeMethod);
                private static void _OpenDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenDailyTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenDailyTimeWindow_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenDailyTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenDailyTimeWindow_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenDailyTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveFeatureTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveFeatureTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveFeatureTimeTrackings_InvokeMethod);
                private static void _SaveFeatureTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _SaveFeatureTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelFeatureTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelFeatureTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelFeatureTimeTrackings_InvokeMethod);
                private static void _CancelFeatureTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _CancelFeatureTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveIncidentTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveIncidentTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveIncidentTimeTrackings_InvokeMethod);
                private static void _SaveIncidentTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _SaveIncidentTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelIncidentTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelIncidentTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelIncidentTimeTrackings_InvokeMethod);
                private static void _CancelIncidentTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _CancelIncidentTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentDailyTimeWindow_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentDailyTimeWindow_InvokeMethod);
                private static void _OpenIncidentDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentDailyTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentDailyTimeWindow_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentDailyTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentDailyTimeWindow_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentDailyTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskComments_InvokeMethod);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsMethod, sf);
                }
                private static global::System.Exception _SaveTaskComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskComments_InvokeMethod);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsMethod, sf);
                }
                private static global::System.Exception _CancelTaskComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTaskTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTaskTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTaskTimeTrackings_InvokeMethod);
                private static void _SaveTaskTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _SaveTaskTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTaskTimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTaskTimeTrackings",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskTimeTrackings_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskTimeTrackings_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTaskTimeTrackings_InvokeMethod);
                private static void _CancelTaskTimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskTimeTrackingsMethod, sf);
                }
                private static global::System.Exception _CancelTaskTimeTrackings_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskTimeTrackings_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskTimeTrackings_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskTimeTrackings_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTaskDailyTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTaskDailyTimeWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskDailyTimeWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskDailyTimeWindow_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskDailyTimeWindow_InvokeMethod);
                private static void _OpenTaskDailyTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskDailyTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskDailyTimeWindow_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskDailyTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskDailyTimeWindow_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskDailyTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTaskComments",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskComments_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskComments_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTaskComments_InvokeMethod);
                private static void _OpenTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskCommentsMethod, sf);
                }
                private static global::System.Exception _OpenTaskComments_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskComments_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    SaveTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "SaveTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTDDExtensions_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._SaveTDDExtensions_InvokeMethod);
                private static void _SaveTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTDDExtensionsMethod, sf);
                }
                private static global::System.Exception _SaveTDDExtensions_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTDDExtensions_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTDDExtensions_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTDDExtensions_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    CancelTDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "CancelTDDExtensions",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTDDExtensions_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTDDExtensions_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._CancelTDDExtensions_InvokeMethod);
                private static void _CancelTDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTDDExtensionsMethod, sf);
                }
                private static global::System.Exception _CancelTDDExtensions_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTDDExtensions_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTDDExtensions_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTDDExtensions_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenTDDWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenTDDWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTDDWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTDDWindow_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenTDDWindow_InvokeMethod);
                private static void _OpenTDDWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTDDWindowMethod, sf);
                }
                private static global::System.Exception _OpenTDDWindow_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTDDWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTDDWindow_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTDDWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    OpenIncidentsTDDWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "OpenIncidentsTDDWindow",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentsTDDWindow_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentsTDDWindow_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._OpenIncidentsTDDWindow_InvokeMethod);
                private static void _OpenIncidentsTDDWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentsTDDWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentsTDDWindow_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentsTDDWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentsTDDWindow_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentsTDDWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedFeatures",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedFeatures_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedFeatures_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedFeatures_InvokeMethod);
                private static void _ToogleCompletedFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedFeaturesMethod, sf);
                }
                private static global::System.Exception _ToogleCompletedFeatures_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToogleCompletedFeatures_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToogleCompletedFeatures_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToogleCompletedFeatures_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedIncidents",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_InvokeMethod);
                private static void _ToogleCompletedIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedIncidentsMethod, sf);
                }
                private static global::System.Exception _ToogleCompletedIncidents_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToogleCompletedIncidents_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToogleCompletedIncidents_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToogleCompletedIncidents_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ToogleCompletedTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ToogleCompletedTasks",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedTasks_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedTasks_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ToogleCompletedTasks_InvokeMethod);
                private static void _ToogleCompletedTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedTasksMethod, sf);
                }
                private static global::System.Exception _ToogleCompletedTasks_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToogleCompletedTasks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToogleCompletedTasks_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToogleCompletedTasks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportFeatureTdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportFeatureTdd",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureTdd_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureTdd_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportFeatureTdd_InvokeMethod);
                private static void _ExportFeatureTdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportFeatureTddMethod, sf);
                }
                private static global::System.Exception _ExportFeatureTdd_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportFeatureTdd_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportFeatureTdd_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportFeatureTdd_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry
                    ExportIncidentTdd = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Entry(
                        "ExportIncidentTdd",
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentTdd_Stub,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentTdd_CanInvoke,
                        global::LightSwitchApplication.DODProjectDashboard.DetailsClass.MethodSetProperties._ExportIncidentTdd_InvokeMethod);
                private static void _ExportIncidentTdd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODProjectDashboard.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.DODProjectDashboard, global::LightSwitchApplication.DODProjectDashboard.DetailsClass>.Data> c, global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportIncidentTddMethod, sf);
                }
                private static global::System.Exception _ExportIncidentTdd_CanInvoke(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportIncidentTdd_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportIncidentTdd_InvokeMethod(global::LightSwitchApplication.DODProjectDashboard.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportIncidentTdd_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class DODTimeForecastReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private DODTimeForecastReport() : base("LightSwitchApplication:DODTimeForecastReport")
        {
            global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static DODTimeForecastReport CreateInstance()
        {
            return new global::LightSwitchApplication.DODTimeForecastReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTimeForecastReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void MultiPeriodForecasts_SelectionChanged();

        partial void MultiPeriodForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_Loaded(bool succeeded);

        partial void Forecasts_SelectionChanged();

        partial void Forecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_Loaded(bool succeeded);

        /// <summary>
        /// Gets the MultiPeriodForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.MultiPeriodForecast> MultiPeriodForecasts
        {
            get
            {
                return global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties.MultiPeriodForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Forecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Forecast> Forecasts
        {
            get
            {
                return global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.GetValue(this, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties.Forecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySet, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.CommandSet, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties.MultiPeriodForecasts;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>.Entry
                __DODTimeForecastReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeSavingEvent,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeSavedEvent,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeClosingEvent,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeCreated,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeActivated,
                    global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.__DODTimeForecastReport_InvokeSaveErrorEvent);
            private static void __DODTimeForecastReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.DODTimeForecastReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.DODTimeForecastReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __DODTimeForecastReport_InvokeSavingEvent(global::LightSwitchApplication.DODTimeForecastReport s)
            {
                bool handled = false;
                s.DODTimeForecastReport_Saving(ref handled);
                return handled;
            }
            private static void __DODTimeForecastReport_InvokeSavedEvent(global::LightSwitchApplication.DODTimeForecastReport s)
            {
                s.DODTimeForecastReport_Saved();
            }
            private static bool __DODTimeForecastReport_InvokeClosingEvent(global::LightSwitchApplication.DODTimeForecastReport s)
            {
                bool cancel = false;
                s.DODTimeForecastReport_Closing(ref cancel);
                return cancel;
            }
            private static void __DODTimeForecastReport_InvokeCreated(global::LightSwitchApplication.DODTimeForecastReport s)
            {
                s.DODTimeForecastReport_Created();
            }
            private static void __DODTimeForecastReport_InvokeActivated(global::LightSwitchApplication.DODTimeForecastReport s)
            {
                s.DODTimeForecastReport_Activated();
            }
            private static bool __DODTimeForecastReport_InvokeSaveErrorEvent(global::LightSwitchApplication.DODTimeForecastReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.DODTimeForecastReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable MultiPeriodForecastsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.MultiPeriodForecasts,
                    (m) => ((m.Country.CompareTo("El Salvador") == 0) || (m.Country.CompareTo("China") == 0)));
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ForecastsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.Forecasts,
                    (f) => ((f.Country.CompareTo("El Salvador") == 0) || (f.Country.CompareTo("China") == 0)));
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data _MultiPeriodForecasts;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Data _Forecasts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast> MultiPeriodForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>)base.GetItem(global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties.MultiPeriodForecasts);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast> Forecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>)base.GetItem(global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties.Forecasts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry
                    MultiPeriodForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry(
                        "MultiPeriodForecasts",
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_Stub,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_Validate,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_CreateQuery,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_SelectionChanged,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._MultiPeriodForecasts_OnLoaded);
                private static void _MultiPeriodForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data> c, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._MultiPeriodForecasts, sf);
                }
                private static void _MultiPeriodForecasts_Validate(global::LightSwitchApplication.DODTimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.MultiPeriodForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _MultiPeriodForecasts_CreateQuery(global::LightSwitchApplication.DODTimeForecastReport.DetailsClass d, object[] args)
                {
                    return d.MultiPeriodForecastsQuery();
                }
                private static void _MultiPeriodForecasts_SelectionChanged(global::LightSwitchApplication.DODTimeForecastReport s)
                {
                    s.MultiPeriodForecasts_SelectionChanged();
                }
                private static void _MultiPeriodForecasts_OnCollectionChanged(global::LightSwitchApplication.DODTimeForecastReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.MultiPeriodForecasts_Changed(e);
                }
                private static void _MultiPeriodForecasts_OnLoaded(global::LightSwitchApplication.DODTimeForecastReport s, bool succeeded)
                {
                    s.MultiPeriodForecasts_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Entry
                    Forecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Entry(
                        "Forecasts",
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_Stub,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_Validate,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_CreateQuery,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_SelectionChanged,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_OnCollectionChanged,
                        global::LightSwitchApplication.DODTimeForecastReport.DetailsClass.PropertySetProperties._Forecasts_OnLoaded);
                private static void _Forecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.DODTimeForecastReport, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass, global::LightSwitchApplication.Forecast>.Data> c, global::LightSwitchApplication.DODTimeForecastReport.DetailsClass d, object sf)
                {
                    c(d, ref d._Forecasts, sf);
                }
                private static void _Forecasts_Validate(global::LightSwitchApplication.DODTimeForecastReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Forecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Forecasts_CreateQuery(global::LightSwitchApplication.DODTimeForecastReport.DetailsClass d, object[] args)
                {
                    return d.ForecastsQuery();
                }
                private static void _Forecasts_SelectionChanged(global::LightSwitchApplication.DODTimeForecastReport s)
                {
                    s.Forecasts_SelectionChanged();
                }
                private static void _Forecasts_OnCollectionChanged(global::LightSwitchApplication.DODTimeForecastReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Forecasts_Changed(e);
                }
                private static void _Forecasts_OnLoaded(global::LightSwitchApplication.DODTimeForecastReport s, bool succeeded)
                {
                    s.Forecasts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageSkills
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageSkills() : base("LightSwitchApplication:ManageSkills")
        {
            global::LightSwitchApplication.ManageSkills.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageSkills CreateInstance()
        {
            return new global::LightSwitchApplication.ManageSkills(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageSkills_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void SkillCategories_SelectionChanged();

        partial void SkillCategories_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Loaded(bool succeeded);

        partial void Skills_SelectionChanged();

        partial void Skills_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Loaded(bool succeeded);

        /// <summary>
        /// Gets the SkillCategories visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SkillCategory> SkillCategories
        {
            get
            {
                return global::LightSwitchApplication.ManageSkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties.SkillCategories);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Skills visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Skill> Skills
        {
            get
            {
                return global::LightSwitchApplication.ManageSkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties.Skills);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySet, global::LightSwitchApplication.ManageSkills.DetailsClass.CommandSet, global::LightSwitchApplication.ManageSkills.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties.SkillCategories;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>.Entry
                __ManageSkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeCreated,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeActivated,
                    global::LightSwitchApplication.ManageSkills.DetailsClass.__ManageSkills_InvokeSaveErrorEvent);
            private static void __ManageSkills_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageSkills s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageSkills_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageSkills_InvokeSavingEvent(global::LightSwitchApplication.ManageSkills s)
            {
                bool handled = false;
                s.ManageSkills_Saving(ref handled);
                return handled;
            }
            private static void __ManageSkills_InvokeSavedEvent(global::LightSwitchApplication.ManageSkills s)
            {
                s.ManageSkills_Saved();
            }
            private static bool __ManageSkills_InvokeClosingEvent(global::LightSwitchApplication.ManageSkills s)
            {
                bool cancel = false;
                s.ManageSkills_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageSkills_InvokeCreated(global::LightSwitchApplication.ManageSkills s)
            {
                s.ManageSkills_Created();
            }
            private static void __ManageSkills_InvokeActivated(global::LightSwitchApplication.ManageSkills s)
            {
                s.ManageSkills_Activated();
            }
            private static bool __ManageSkills_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageSkills s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageSkills_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageSkills.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageSkills.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SkillCategoriesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.SkillCategories;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SkillsQuery()
            {
                if (this.Screen.SkillCategories.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Skill> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Skill>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.SkillCategories.SelectedItem.Details.Properties.Skills).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    loader,
                    (s) => s.Name);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data _SkillCategories;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill>.Data _Skills;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory> SkillCategories
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory>)base.GetItem(global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties.SkillCategories);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill> Skills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill>)base.GetItem(global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties.Skills);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry
                    SkillCategories = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry(
                        "SkillCategories",
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_Stub,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_Validate,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_CreateQuery,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_SelectionChanged,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_OnCollectionChanged,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._SkillCategories_OnLoaded);
                private static void _SkillCategories_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageSkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data> c, global::LightSwitchApplication.ManageSkills.DetailsClass d, object sf)
                {
                    c(d, ref d._SkillCategories, sf);
                }
                private static void _SkillCategories_Validate(global::LightSwitchApplication.ManageSkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SkillCategories_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SkillCategories_CreateQuery(global::LightSwitchApplication.ManageSkills.DetailsClass d, object[] args)
                {
                    return d.SkillCategoriesQuery();
                }
                private static void _SkillCategories_SelectionChanged(global::LightSwitchApplication.ManageSkills s)
                {
                    s.SkillCategories_SelectionChanged();
                }
                private static void _SkillCategories_OnCollectionChanged(global::LightSwitchApplication.ManageSkills s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SkillCategories_Changed(e);
                }
                private static void _SkillCategories_OnLoaded(global::LightSwitchApplication.ManageSkills s, bool succeeded)
                {
                    s.SkillCategories_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill>.Entry
                    Skills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill>.Entry(
                        "Skills",
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_Stub,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_Validate,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_CreateQuery,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_SelectionChanged,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_OnCollectionChanged,
                        global::LightSwitchApplication.ManageSkills.DetailsClass.PropertySetProperties._Skills_OnLoaded);
                private static void _Skills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageSkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageSkills, global::LightSwitchApplication.ManageSkills.DetailsClass, global::LightSwitchApplication.Skill>.Data> c, global::LightSwitchApplication.ManageSkills.DetailsClass d, object sf)
                {
                    c(d, ref d._Skills, sf);
                }
                private static void _Skills_Validate(global::LightSwitchApplication.ManageSkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Skills_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Skills_CreateQuery(global::LightSwitchApplication.ManageSkills.DetailsClass d, object[] args)
                {
                    return d.SkillsQuery();
                }
                private static void _Skills_SelectionChanged(global::LightSwitchApplication.ManageSkills s)
                {
                    s.Skills_SelectionChanged();
                }
                private static void _Skills_OnCollectionChanged(global::LightSwitchApplication.ManageSkills s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Skills_Changed(e);
                }
                private static void _Skills_OnLoaded(global::LightSwitchApplication.ManageSkills s, bool succeeded)
                {
                    s.Skills_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageMySkills
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageMySkills(string UserId) : base("LightSwitchApplication:ManageMySkills")
        {
                this.UserId = UserId;
            global::LightSwitchApplication.ManageMySkills.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageMySkills CreateInstance(string UserId)
        {
            return new global::LightSwitchApplication.ManageMySkills(
                        UserId
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMySkills_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void EmployeeSkills_SelectionChanged();

        partial void EmployeeSkills_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Loaded(bool succeeded);

        partial void UserId_Changed();

        partial void SkillCategory_Changed();

        partial void Skills_SelectionChanged();

        partial void Skills_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.ManageMySkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeSkills visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeSkill> EmployeeSkills
        {
            get
            {
                return global::LightSwitchApplication.ManageMySkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.EmployeeSkills);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserId
        {
            get 
            {
                return global::LightSwitchApplication.ManageMySkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.UserId);
            }
            set
            {
                global::LightSwitchApplication.ManageMySkills.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.UserId, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserId_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SkillCategory SkillCategory
        {
            get 
            {
                return global::LightSwitchApplication.ManageMySkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.SkillCategory);
            }
            set
            {
                global::LightSwitchApplication.ManageMySkills.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.SkillCategory, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategory_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Skills visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Skill> Skills
        {
            get
            {
                return global::LightSwitchApplication.ManageMySkills.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.Skills);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the EmployeeSkillsAddNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillsAddNew()
        {
            this.Details.Methods.EmployeeSkillsAddNew.CreateInvocation().Execute();
        }
        partial void EmployeeSkillsAddNew_CanExecute(ref bool result);
        partial void EmployeeSkillsAddNew_Execute();

        /// <summary>
        /// Calls the EmployeeSkillsEditSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillsEditSelected()
        {
            this.Details.Methods.EmployeeSkillsEditSelected.CreateInvocation().Execute();
        }
        partial void EmployeeSkillsEditSelected_CanExecute(ref bool result);
        partial void EmployeeSkillsEditSelected_Execute();

        /// <summary>
        /// Calls the EmployeeSkillDialogOk screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillDialogOk()
        {
            this.Details.Methods.EmployeeSkillDialogOk.CreateInvocation().Execute();
        }
        partial void EmployeeSkillDialogOk_CanExecute(ref bool result);
        partial void EmployeeSkillDialogOk_Execute();

        /// <summary>
        /// Calls the EmployeeSkillsEditSelected1 screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillsEditSelected1()
        {
            this.Details.Methods.EmployeeSkillsEditSelected1.CreateInvocation().Execute();
        }
        partial void EmployeeSkillsEditSelected1_CanExecute(ref bool result);
        partial void EmployeeSkillsEditSelected1_Execute();

        /// <summary>
        /// Calls the EmployeeSkillsDeleteSelected screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillsDeleteSelected()
        {
            this.Details.Methods.EmployeeSkillsDeleteSelected.CreateInvocation().Execute();
        }
        partial void EmployeeSkillsDeleteSelected_CanExecute(ref bool result);
        partial void EmployeeSkillsDeleteSelected_Execute();

        /// <summary>
        /// Calls the EmployeeSkillDialogCancel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void EmployeeSkillDialogCancel()
        {
            this.Details.Methods.EmployeeSkillDialogCancel.CreateInvocation().Execute();
        }
        partial void EmployeeSkillDialogCancel_CanExecute(ref bool result);
        partial void EmployeeSkillDialogCancel_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySet, global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSet, global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.Employees;
                var initializeCommandEntry = global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillsAddNew;
                var initializeMethodEntry = global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillsAddNew;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                __ManageMySkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeCreated,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeActivated,
                    global::LightSwitchApplication.ManageMySkills.DetailsClass.__ManageMySkills_InvokeSaveErrorEvent);
            private static void __ManageMySkills_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageMySkills s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageMySkills_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageMySkills_InvokeSavingEvent(global::LightSwitchApplication.ManageMySkills s)
            {
                bool handled = false;
                s.ManageMySkills_Saving(ref handled);
                return handled;
            }
            private static void __ManageMySkills_InvokeSavedEvent(global::LightSwitchApplication.ManageMySkills s)
            {
                s.ManageMySkills_Saved();
            }
            private static bool __ManageMySkills_InvokeClosingEvent(global::LightSwitchApplication.ManageMySkills s)
            {
                bool cancel = false;
                s.ManageMySkills_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageMySkills_InvokeCreated(global::LightSwitchApplication.ManageMySkills s)
            {
                s.ManageMySkills_Created();
            }
            private static void __ManageMySkills_InvokeActivated(global::LightSwitchApplication.ManageMySkills s)
            {
                s.ManageMySkills_Activated();
            }
            private static bool __ManageMySkills_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageMySkills s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageMySkills_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery(string UserID)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.Employees,
                        (e) => (e.UserID.CompareTo(UserID) == 0)),
                    "Country");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeSkillsQuery()
            {
                if (this.Screen.Employees.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeSkill> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.EmployeeSkill>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Employees.SelectedItem.Details.Properties.EmployeeSkills).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                            loader,
                            (e) => e.Skill.SkillCategory.Id),
                        "Employee"),
                    "Skill");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SkillsQuery()
            {
                if (this.Screen.SkillCategory == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Skill> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Skill>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.SkillCategory.Details.Properties.Skills).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    loader,
                    (s) => s.Name);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Data _EmployeeSkills;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string>.Data _UserId;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data _SkillCategory;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill>.Data _Skills;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsAddNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsEditSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillDialogOkCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsEditSelected1Command;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsDeleteSelectedCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillDialogCancelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsAddNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsEditSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillDialogOkMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsEditSelected1Method;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillsDeleteSelectedMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data _EmployeeSkillDialogCancelMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill> EmployeeSkills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.EmployeeSkills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string> UserId
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.UserId);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory> SkillCategory
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.SkillCategory);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill> Skills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties.Skills);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillsAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillsEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillDialogOk
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillDialogOk);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsEditSelected1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillsEditSelected1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillsDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillDialogCancel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties.EmployeeSkillDialogCancel);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsAddNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillsAddNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsEditSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillsEditSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillDialogOk
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillDialogOk);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsEditSelected1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillsEditSelected1);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillsDeleteSelected
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillsDeleteSelected);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass> EmployeeSkillDialogCancel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties.EmployeeSkillDialogCancel);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.ManageMySkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.ManageMySkills.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery((string)args[0]);
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.ManageMySkills s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.ManageMySkills s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.ManageMySkills s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Entry
                    EmployeeSkills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Entry(
                        "EmployeeSkills",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_Validate,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_CreateQuery,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_SelectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._EmployeeSkills_OnLoaded);
                private static void _EmployeeSkills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.EmployeeSkill>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkills, sf);
                }
                private static void _EmployeeSkills_Validate(global::LightSwitchApplication.ManageMySkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeSkills_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeSkills_CreateQuery(global::LightSwitchApplication.ManageMySkills.DetailsClass d, object[] args)
                {
                    return d.EmployeeSkillsQuery();
                }
                private static void _EmployeeSkills_SelectionChanged(global::LightSwitchApplication.ManageMySkills s)
                {
                    s.EmployeeSkills_SelectionChanged();
                }
                private static void _EmployeeSkills_OnCollectionChanged(global::LightSwitchApplication.ManageMySkills s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeSkills_Changed(e);
                }
                private static void _EmployeeSkills_OnLoaded(global::LightSwitchApplication.ManageMySkills s, bool succeeded)
                {
                    s.EmployeeSkills_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string>.Entry
                    UserId = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string>.Entry(
                        "UserId",
                        false,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._UserId_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._UserId_Validate,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._UserId_OnValueChanged);
                private static void _UserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._UserId, sf);
                }
                private static void _UserId_Validate(global::LightSwitchApplication.ManageMySkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.UserId_Validate(r);
                }
                private static void _UserId_OnValueChanged(global::LightSwitchApplication.ManageMySkills s)
                {
                    s.UserId_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry
                    SkillCategory = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry(
                        "SkillCategory",
                        false,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._SkillCategory_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._SkillCategory_Validate,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._SkillCategory_OnValueChanged);
                private static void _SkillCategory_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._SkillCategory, sf);
                }
                private static void _SkillCategory_Validate(global::LightSwitchApplication.ManageMySkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SkillCategory_Validate(r);
                }
                private static void _SkillCategory_OnValueChanged(global::LightSwitchApplication.ManageMySkills s)
                {
                    s.SkillCategory_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill>.Entry
                    Skills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill>.Entry(
                        "Skills",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_Validate,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_CreateQuery,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_SelectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.PropertySetProperties._Skills_OnLoaded);
                private static void _Skills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass, global::LightSwitchApplication.Skill>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._Skills, sf);
                }
                private static void _Skills_Validate(global::LightSwitchApplication.ManageMySkills s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Skills_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Skills_CreateQuery(global::LightSwitchApplication.ManageMySkills.DetailsClass d, object[] args)
                {
                    return d.SkillsQuery();
                }
                private static void _Skills_SelectionChanged(global::LightSwitchApplication.ManageMySkills s)
                {
                    s.Skills_SelectionChanged();
                }
                private static void _Skills_OnCollectionChanged(global::LightSwitchApplication.ManageMySkills s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Skills_Changed(e);
                }
                private static void _Skills_OnLoaded(global::LightSwitchApplication.ManageMySkills s, bool succeeded)
                {
                    s.Skills_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsAddNew",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsAddNew_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsAddNew_CreateExecutableObject);
                private static void _EmployeeSkillsAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsAddNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillsAddNew_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillsAddNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsEditSelected",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsEditSelected_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsEditSelected_CreateExecutableObject);
                private static void _EmployeeSkillsEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsEditSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillsEditSelected_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillsEditSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillDialogOk = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillDialogOk",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillDialogOk_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillDialogOk_CreateExecutableObject);
                private static void _EmployeeSkillDialogOk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillDialogOkCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillDialogOk_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillDialogOk.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsEditSelected1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsEditSelected1",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsEditSelected1_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsEditSelected1_CreateExecutableObject);
                private static void _EmployeeSkillsEditSelected1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsEditSelected1Command, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillsEditSelected1_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillsEditSelected1.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsDeleteSelected",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsDeleteSelected_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillsDeleteSelected_CreateExecutableObject);
                private static void _EmployeeSkillsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsDeleteSelectedCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillsDeleteSelected_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillsDeleteSelected.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillDialogCancel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillDialogCancel",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillDialogCancel_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.CommandSetProperties._EmployeeSkillDialogCancel_CreateExecutableObject);
                private static void _EmployeeSkillDialogCancel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillDialogCancelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _EmployeeSkillDialogCancel_CreateExecutableObject(global::LightSwitchApplication.ManageMySkills.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMySkills.DetailsClass)d).Methods.EmployeeSkillDialogCancel.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsAddNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsAddNew",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsAddNew_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsAddNew_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsAddNew_InvokeMethod);
                private static void _EmployeeSkillsAddNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsAddNewMethod, sf);
                }
                private static global::System.Exception _EmployeeSkillsAddNew_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillsAddNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillsAddNew_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillsAddNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsEditSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsEditSelected",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected_InvokeMethod);
                private static void _EmployeeSkillsEditSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsEditSelectedMethod, sf);
                }
                private static global::System.Exception _EmployeeSkillsEditSelected_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillsEditSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillsEditSelected_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillsEditSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillDialogOk = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillDialogOk",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogOk_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogOk_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogOk_InvokeMethod);
                private static void _EmployeeSkillDialogOk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillDialogOkMethod, sf);
                }
                private static global::System.Exception _EmployeeSkillDialogOk_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillDialogOk_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillDialogOk_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillDialogOk_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsEditSelected1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsEditSelected1",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected1_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected1_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsEditSelected1_InvokeMethod);
                private static void _EmployeeSkillsEditSelected1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsEditSelected1Method, sf);
                }
                private static global::System.Exception _EmployeeSkillsEditSelected1_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillsEditSelected1_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillsEditSelected1_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillsEditSelected1_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillsDeleteSelected = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillsDeleteSelected",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsDeleteSelected_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsDeleteSelected_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillsDeleteSelected_InvokeMethod);
                private static void _EmployeeSkillsDeleteSelected_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillsDeleteSelectedMethod, sf);
                }
                private static global::System.Exception _EmployeeSkillsDeleteSelected_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillsDeleteSelected_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillsDeleteSelected_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillsDeleteSelected_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry
                    EmployeeSkillDialogCancel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Entry(
                        "EmployeeSkillDialogCancel",
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogCancel_Stub,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogCancel_CanInvoke,
                        global::LightSwitchApplication.ManageMySkills.DetailsClass.MethodSetProperties._EmployeeSkillDialogCancel_InvokeMethod);
                private static void _EmployeeSkillDialogCancel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMySkills.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMySkills, global::LightSwitchApplication.ManageMySkills.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMySkills.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSkillDialogCancelMethod, sf);
                }
                private static global::System.Exception _EmployeeSkillDialogCancel_CanInvoke(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.EmployeeSkillDialogCancel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _EmployeeSkillDialogCancel_InvokeMethod(global::LightSwitchApplication.ManageMySkills.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.EmployeeSkillDialogCancel_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class SkillsReport
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private SkillsReport() : base("LightSwitchApplication:SkillsReport")
        {
            global::LightSwitchApplication.SkillsReport.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static SkillsReport CreateInstance()
        {
            return new global::LightSwitchApplication.SkillsReport(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillsReport_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void SkillCategories_SelectionChanged();

        partial void SkillCategories_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Loaded(bool succeeded);

        partial void Skills_SelectionChanged();

        partial void Skills_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Loaded(bool succeeded);

        partial void SkillFilter_Changed();

        partial void LevelFilter_Changed();

        partial void GetMultiperiodForecasts_SelectionChanged();

        partial void GetMultiperiodForecasts_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMultiperiodForecasts_Loaded(bool succeeded);

        /// <summary>
        /// Gets the SkillCategories visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.SkillCategory> SkillCategories
        {
            get
            {
                return global::LightSwitchApplication.SkillsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillCategories);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Skills visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Skill> Skills
        {
            get
            {
                return global::LightSwitchApplication.SkillsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.Skills);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Skill SkillFilter
        {
            get 
            {
                return global::LightSwitchApplication.SkillsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillFilter);
            }
            set
            {
                global::LightSwitchApplication.SkillsReport.DetailsClass.SetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LevelFilter
        {
            get 
            {
                return global::LightSwitchApplication.SkillsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.LevelFilter);
            }
            set
            {
                global::LightSwitchApplication.SkillsReport.DetailsClass.SetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.LevelFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LevelFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the GetMultiperiodForecasts visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.MultiPeriodForecast> GetMultiperiodForecasts
        {
            get
            {
                return global::LightSwitchApplication.SkillsReport.DetailsClass.GetValue(this, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.GetMultiperiodForecasts);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMultiperiodForecasts_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySet, global::LightSwitchApplication.SkillsReport.DetailsClass.CommandSet, global::LightSwitchApplication.SkillsReport.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillCategories;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>.Entry
                __SkillsReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>.Entry(
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeSavingEvent,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeSavedEvent,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeClosingEvent,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeCreated,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeActivated,
                    global::LightSwitchApplication.SkillsReport.DetailsClass.__SkillsReport_InvokeSaveErrorEvent);
            private static void __SkillsReport_InvokeInitializeDataWorkspace(global::LightSwitchApplication.SkillsReport s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.SkillsReport_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __SkillsReport_InvokeSavingEvent(global::LightSwitchApplication.SkillsReport s)
            {
                bool handled = false;
                s.SkillsReport_Saving(ref handled);
                return handled;
            }
            private static void __SkillsReport_InvokeSavedEvent(global::LightSwitchApplication.SkillsReport s)
            {
                s.SkillsReport_Saved();
            }
            private static bool __SkillsReport_InvokeClosingEvent(global::LightSwitchApplication.SkillsReport s)
            {
                bool cancel = false;
                s.SkillsReport_Closing(ref cancel);
                return cancel;
            }
            private static void __SkillsReport_InvokeCreated(global::LightSwitchApplication.SkillsReport s)
            {
                s.SkillsReport_Created();
            }
            private static void __SkillsReport_InvokeActivated(global::LightSwitchApplication.SkillsReport s)
            {
                s.SkillsReport_Activated();
            }
            private static bool __SkillsReport_InvokeSaveErrorEvent(global::LightSwitchApplication.SkillsReport s, global::System.Exception ex)
            {
                bool handled = false;
                s.SkillsReport_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.SkillsReport.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.SkillsReport.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SkillCategoriesQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.SkillCategories;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable SkillsQuery(global::System.Nullable<int> SkillCategoryId)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                    this.Screen.DataWorkspace.ApplicationData.Skills,
                    (s) => (SkillCategoryId.HasValue && (s.SkillCategory.Id == SkillCategoryId)));
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable GetMultiperiodForecastsQuery(global::System.Nullable<int> skillId, string level)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.GetMultiperiodForecasts(skillId, level);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data _SkillCategories;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Data _Skills;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Data _SkillFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string>.Data _LevelFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data _GetMultiperiodForecasts;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory> SkillCategories
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory>)base.GetItem(global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillCategories);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill> Skills
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>)base.GetItem(global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.Skills);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill> SkillFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>)base.GetItem(global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.SkillFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string> LevelFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.LevelFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast> GetMultiperiodForecasts
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>)base.GetItem(global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties.GetMultiperiodForecasts);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry
                    SkillCategories = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory>.Entry(
                        "SkillCategories",
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_Stub,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_Validate,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_CreateQuery,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_SelectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_OnCollectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillCategories_OnLoaded);
                private static void _SkillCategories_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SkillsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.SkillCategory>.Data> c, global::LightSwitchApplication.SkillsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._SkillCategories, sf);
                }
                private static void _SkillCategories_Validate(global::LightSwitchApplication.SkillsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SkillCategories_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _SkillCategories_CreateQuery(global::LightSwitchApplication.SkillsReport.DetailsClass d, object[] args)
                {
                    return d.SkillCategoriesQuery();
                }
                private static void _SkillCategories_SelectionChanged(global::LightSwitchApplication.SkillsReport s)
                {
                    s.SkillCategories_SelectionChanged();
                }
                private static void _SkillCategories_OnCollectionChanged(global::LightSwitchApplication.SkillsReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.SkillCategories_Changed(e);
                }
                private static void _SkillCategories_OnLoaded(global::LightSwitchApplication.SkillsReport s, bool succeeded)
                {
                    s.SkillCategories_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Entry
                    Skills = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Entry(
                        "Skills",
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_Stub,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_Validate,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_CreateQuery,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_SelectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_OnCollectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._Skills_OnLoaded);
                private static void _Skills_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SkillsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Data> c, global::LightSwitchApplication.SkillsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._Skills, sf);
                }
                private static void _Skills_Validate(global::LightSwitchApplication.SkillsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Skills_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Skills_CreateQuery(global::LightSwitchApplication.SkillsReport.DetailsClass d, object[] args)
                {
                    return d.SkillsQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _Skills_SelectionChanged(global::LightSwitchApplication.SkillsReport s)
                {
                    s.Skills_SelectionChanged();
                }
                private static void _Skills_OnCollectionChanged(global::LightSwitchApplication.SkillsReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Skills_Changed(e);
                }
                private static void _Skills_OnLoaded(global::LightSwitchApplication.SkillsReport s, bool succeeded)
                {
                    s.Skills_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Entry
                    SkillFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Entry(
                        "SkillFilter",
                        false,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillFilter_Stub,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillFilter_Validate,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._SkillFilter_OnValueChanged);
                private static void _SkillFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SkillsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.Skill>.Data> c, global::LightSwitchApplication.SkillsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._SkillFilter, sf);
                }
                private static void _SkillFilter_Validate(global::LightSwitchApplication.SkillsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.SkillFilter_Validate(r);
                }
                private static void _SkillFilter_OnValueChanged(global::LightSwitchApplication.SkillsReport s)
                {
                    s.SkillFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string>.Entry
                    LevelFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string>.Entry(
                        "LevelFilter",
                        false,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._LevelFilter_Stub,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._LevelFilter_Validate,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._LevelFilter_OnValueChanged);
                private static void _LevelFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SkillsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, string>.Data> c, global::LightSwitchApplication.SkillsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._LevelFilter, sf);
                }
                private static void _LevelFilter_Validate(global::LightSwitchApplication.SkillsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.LevelFilter_Validate(r);
                }
                private static void _LevelFilter_OnValueChanged(global::LightSwitchApplication.SkillsReport s)
                {
                    s.LevelFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry
                    GetMultiperiodForecasts = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Entry(
                        "GetMultiperiodForecasts",
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_Stub,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_Validate,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_CreateQuery,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_SelectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_OnCollectionChanged,
                        global::LightSwitchApplication.SkillsReport.DetailsClass.PropertySetProperties._GetMultiperiodForecasts_OnLoaded);
                private static void _GetMultiperiodForecasts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.SkillsReport.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.SkillsReport, global::LightSwitchApplication.SkillsReport.DetailsClass, global::LightSwitchApplication.MultiPeriodForecast>.Data> c, global::LightSwitchApplication.SkillsReport.DetailsClass d, object sf)
                {
                    c(d, ref d._GetMultiperiodForecasts, sf);
                }
                private static void _GetMultiperiodForecasts_Validate(global::LightSwitchApplication.SkillsReport s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.GetMultiperiodForecasts_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _GetMultiperiodForecasts_CreateQuery(global::LightSwitchApplication.SkillsReport.DetailsClass d, object[] args)
                {
                    return d.GetMultiperiodForecastsQuery((global::System.Nullable<int>)args[0], (string)args[1]);
                }
                private static void _GetMultiperiodForecasts_SelectionChanged(global::LightSwitchApplication.SkillsReport s)
                {
                    s.GetMultiperiodForecasts_SelectionChanged();
                }
                private static void _GetMultiperiodForecasts_OnCollectionChanged(global::LightSwitchApplication.SkillsReport s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.GetMultiperiodForecasts_Changed(e);
                }
                private static void _GetMultiperiodForecasts_OnLoaded(global::LightSwitchApplication.SkillsReport s, bool succeeded)
                {
                    s.GetMultiperiodForecasts_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageClients
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageClients() : base("LightSwitchApplication:ManageClients")
        {
            global::LightSwitchApplication.ManageClients.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageClients CreateInstance()
        {
            return new global::LightSwitchApplication.ManageClients(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageClients_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Clients_SelectionChanged();

        partial void Clients_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Loaded(bool succeeded);

        partial void Projects_SelectionChanged();

        partial void Projects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Clients visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Client> Clients
        {
            get
            {
                return global::LightSwitchApplication.ManageClients.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties.Clients);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Projects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.ManageClients.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties.Projects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.ManageClients.DetailsClass.PropertySet, global::LightSwitchApplication.ManageClients.DetailsClass.CommandSet, global::LightSwitchApplication.ManageClients.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties.Clients;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>.Entry
                __ManageClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeCreated,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeActivated,
                    global::LightSwitchApplication.ManageClients.DetailsClass.__ManageClients_InvokeSaveErrorEvent);
            private static void __ManageClients_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageClients s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageClients_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageClients_InvokeSavingEvent(global::LightSwitchApplication.ManageClients s)
            {
                bool handled = false;
                s.ManageClients_Saving(ref handled);
                return handled;
            }
            private static void __ManageClients_InvokeSavedEvent(global::LightSwitchApplication.ManageClients s)
            {
                s.ManageClients_Saved();
            }
            private static bool __ManageClients_InvokeClosingEvent(global::LightSwitchApplication.ManageClients s)
            {
                bool cancel = false;
                s.ManageClients_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageClients_InvokeCreated(global::LightSwitchApplication.ManageClients s)
            {
                s.ManageClients_Created();
            }
            private static void __ManageClients_InvokeActivated(global::LightSwitchApplication.ManageClients s)
            {
                s.ManageClients_Activated();
            }
            private static bool __ManageClients_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageClients s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageClients_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageClients.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageClients.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageClients.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ClientsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    this.Screen.DataWorkspace.ApplicationData.Clients,
                    (c) => c.Name);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectsQuery()
            {
                if (this.Screen.Clients.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Clients.SelectedItem.Details.Properties.Projects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        loader,
                        "Director"),
                    "Manager");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client>.Data _Clients;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client> Clients
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client>)base.GetItem(global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties.Clients);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties.Projects);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    Clients = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "Clients",
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_Stub,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_Validate,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_CreateQuery,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_SelectionChanged,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_OnCollectionChanged,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Clients_OnLoaded);
                private static void _Clients_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageClients.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.ManageClients.DetailsClass d, object sf)
                {
                    c(d, ref d._Clients, sf);
                }
                private static void _Clients_Validate(global::LightSwitchApplication.ManageClients s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Clients_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Clients_CreateQuery(global::LightSwitchApplication.ManageClients.DetailsClass d, object[] args)
                {
                    return d.ClientsQuery();
                }
                private static void _Clients_SelectionChanged(global::LightSwitchApplication.ManageClients s)
                {
                    s.Clients_SelectionChanged();
                }
                private static void _Clients_OnCollectionChanged(global::LightSwitchApplication.ManageClients s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Clients_Changed(e);
                }
                private static void _Clients_OnLoaded(global::LightSwitchApplication.ManageClients s, bool succeeded)
                {
                    s.Clients_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_Validate,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_CreateQuery,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_SelectionChanged,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageClients.DetailsClass.PropertySetProperties._Projects_OnLoaded);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageClients.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageClients, global::LightSwitchApplication.ManageClients.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ManageClients.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static void _Projects_Validate(global::LightSwitchApplication.ManageClients s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Projects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Projects_CreateQuery(global::LightSwitchApplication.ManageClients.DetailsClass d, object[] args)
                {
                    return d.ProjectsQuery();
                }
                private static void _Projects_SelectionChanged(global::LightSwitchApplication.ManageClients s)
                {
                    s.Projects_SelectionChanged();
                }
                private static void _Projects_OnCollectionChanged(global::LightSwitchApplication.ManageClients s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Projects_Changed(e);
                }
                private static void _Projects_OnLoaded(global::LightSwitchApplication.ManageClients s, bool succeeded)
                {
                    s.Projects_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeTrackReportScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private TimeTrackReportScreen() : base("LightSwitchApplication:TimeTrackReportScreen")
        {
            global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static TimeTrackReportScreen CreateInstance()
        {
            return new global::LightSwitchApplication.TimeTrackReportScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReportScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void TimeTrackReport_SelectionChanged();

        partial void TimeTrackReport_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReport_Loaded(bool succeeded);

        partial void ToDate_Changed();

        partial void FromDate_Changed();

        partial void Employee_Changed();

        partial void EmployeesLookup_SelectionChanged();

        partial void EmployeesLookup_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Loaded(bool succeeded);

        /// <summary>
        /// Gets the TimeTrackReport visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTimeLine> TimeTrackReport
        {
            get
            {
                return global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.TimeTrackReport);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReport_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ToDate
        {
            get 
            {
                return global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.ToDate);
            }
            set
            {
                global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.ToDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ToDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime FromDate
        {
            get 
            {
                return global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.FromDate);
            }
            set
            {
                global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.FromDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get 
            {
                return global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeesLookup visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> EmployeesLookup
        {
            get
            {
                return global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.EmployeesLookup);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the ExportToExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ExportToExcel()
        {
            this.Details.Methods.ExportToExcel.CreateInvocation().Execute();
        }
        partial void ExportToExcel_CanExecute(ref bool result);
        partial void ExportToExcel_Execute();

        /// <summary>
        /// Calls the Export screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Export()
        {
            this.Details.Methods.Export.CreateInvocation().Execute();
        }
        partial void Export_CanExecute(ref bool result);
        partial void Export_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySet, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSet, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.TimeTrackReport;
                var initializeCommandEntry = global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties.ExportToExcel;
                var initializeMethodEntry = global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties.ExportToExcel;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry
                __TimeTrackReportScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeCreated,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeActivated,
                    global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.__TimeTrackReportScreen_InvokeSaveErrorEvent);
            private static void __TimeTrackReportScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.TimeTrackReportScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.TimeTrackReportScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __TimeTrackReportScreen_InvokeSavingEvent(global::LightSwitchApplication.TimeTrackReportScreen s)
            {
                bool handled = false;
                s.TimeTrackReportScreen_Saving(ref handled);
                return handled;
            }
            private static void __TimeTrackReportScreen_InvokeSavedEvent(global::LightSwitchApplication.TimeTrackReportScreen s)
            {
                s.TimeTrackReportScreen_Saved();
            }
            private static bool __TimeTrackReportScreen_InvokeClosingEvent(global::LightSwitchApplication.TimeTrackReportScreen s)
            {
                bool cancel = false;
                s.TimeTrackReportScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __TimeTrackReportScreen_InvokeCreated(global::LightSwitchApplication.TimeTrackReportScreen s)
            {
                s.TimeTrackReportScreen_Created();
            }
            private static void __TimeTrackReportScreen_InvokeActivated(global::LightSwitchApplication.TimeTrackReportScreen s)
            {
                s.TimeTrackReportScreen_Activated();
            }
            private static bool __TimeTrackReportScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.TimeTrackReportScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.TimeTrackReportScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeTrackReportQuery(global::System.Nullable<int> employeeId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.TimeTrackReport(employeeId, pFromDate, pToDate);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesLookupQuery(global::System.Nullable<int> Country, string Department, string Title, string Supervsr)
            {
                return this.Screen.DataWorkspace.ApplicationData.EmployeesLookup(Country, Department, Title, Supervsr);
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine>.Data _TimeTrackReport;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Data _ToDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Data _FromDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data _EmployeesLookup;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data _ExportToExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data _ExportCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data _ExportToExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data _ExportMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine> TimeTrackReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.TimeTrackReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime> ToDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.ToDate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime> FromDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.FromDate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.Employee);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee> EmployeesLookup
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties.EmployeesLookup);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass> ExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties.ExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass> Export
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties.Export);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass> ExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties.ExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass> Export
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties.Export);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine>.Entry
                    TimeTrackReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine>.Entry(
                        "TimeTrackReport",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_Validate,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_CreateQuery,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_SelectionChanged,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_OnCollectionChanged,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._TimeTrackReport_OnLoaded);
                private static void _TimeTrackReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.ProjectTimeLine>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTrackReport, sf);
                }
                private static void _TimeTrackReport_Validate(global::LightSwitchApplication.TimeTrackReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeTrackReport_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeTrackReport_CreateQuery(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object[] args)
                {
                    return d.TimeTrackReportQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
                }
                private static void _TimeTrackReport_SelectionChanged(global::LightSwitchApplication.TimeTrackReportScreen s)
                {
                    s.TimeTrackReport_SelectionChanged();
                }
                private static void _TimeTrackReport_OnCollectionChanged(global::LightSwitchApplication.TimeTrackReportScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeTrackReport_Changed(e);
                }
                private static void _TimeTrackReport_OnLoaded(global::LightSwitchApplication.TimeTrackReportScreen s, bool succeeded)
                {
                    s.TimeTrackReport_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Entry
                    ToDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Entry(
                        "ToDate",
                        false,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._ToDate_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._ToDate_Validate,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._ToDate_OnValueChanged);
                private static void _ToDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ToDate, sf);
                }
                private static void _ToDate_Validate(global::LightSwitchApplication.TimeTrackReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ToDate_Validate(r);
                }
                private static void _ToDate_OnValueChanged(global::LightSwitchApplication.TimeTrackReportScreen s)
                {
                    s.ToDate_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Entry
                    FromDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Entry(
                        "FromDate",
                        false,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._FromDate_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._FromDate_Validate,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._FromDate_OnValueChanged);
                private static void _FromDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._FromDate, sf);
                }
                private static void _FromDate_Validate(global::LightSwitchApplication.TimeTrackReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FromDate_Validate(r);
                }
                private static void _FromDate_OnValueChanged(global::LightSwitchApplication.TimeTrackReportScreen s)
                {
                    s.FromDate_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        false,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static void _Employee_Validate(global::LightSwitchApplication.TimeTrackReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employee_Validate(r);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.TimeTrackReportScreen s)
                {
                    s.Employee_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    EmployeesLookup = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "EmployeesLookup",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_Validate,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_CreateQuery,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_SelectionChanged,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_OnCollectionChanged,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.PropertySetProperties._EmployeesLookup_OnLoaded);
                private static void _EmployeesLookup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeesLookup, sf);
                }
                private static void _EmployeesLookup_Validate(global::LightSwitchApplication.TimeTrackReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeesLookup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeesLookup_CreateQuery(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object[] args)
                {
                    return d.EmployeesLookupQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3]);
                }
                private static void _EmployeesLookup_SelectionChanged(global::LightSwitchApplication.TimeTrackReportScreen s)
                {
                    s.EmployeesLookup_SelectionChanged();
                }
                private static void _EmployeesLookup_OnCollectionChanged(global::LightSwitchApplication.TimeTrackReportScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeesLookup_Changed(e);
                }
                private static void _EmployeesLookup_OnLoaded(global::LightSwitchApplication.TimeTrackReportScreen s, bool succeeded)
                {
                    s.EmployeesLookup_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry
                    ExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry(
                        "ExportToExcel",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties._ExportToExcel_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties._ExportToExcel_CreateExecutableObject);
                private static void _ExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportToExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ExportToExcel_CreateExecutableObject(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass)d).Methods.ExportToExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry
                    Export = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry(
                        "Export",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties._Export_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.CommandSetProperties._Export_CreateExecutableObject);
                private static void _Export_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Export_CreateExecutableObject(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass)d).Methods.Export.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry
                    ExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry(
                        "ExportToExcel",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._ExportToExcel_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._ExportToExcel_CanInvoke,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._ExportToExcel_InvokeMethod);
                private static void _ExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportToExcelMethod, sf);
                }
                private static global::System.Exception _ExportToExcel_CanInvoke(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ExportToExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ExportToExcel_InvokeMethod(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ExportToExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry
                    Export = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Entry(
                        "Export",
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._Export_Stub,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._Export_CanInvoke,
                        global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass.MethodSetProperties._Export_InvokeMethod);
                private static void _Export_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.TimeTrackReportScreen, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._ExportMethod, sf);
                }
                private static global::System.Exception _Export_CanInvoke(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Export_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Export_InvokeMethod(global::LightSwitchApplication.TimeTrackReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Export_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class PTOReportScreen
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private PTOReportScreen() : base("LightSwitchApplication:PTOReportScreen")
        {
            global::LightSwitchApplication.PTOReportScreen.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static PTOReportScreen CreateInstance()
        {
            return new global::LightSwitchApplication.PTOReportScreen(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReportScreen_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void PTOReport_SelectionChanged();

        partial void PTOReport_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReport_Loaded(bool succeeded);

        partial void PTORecordpFromDate_Changed();

        partial void PTORecordpToDate_Changed();

        partial void CountryParam_Changed();

        partial void TimeForecastExceptionsSet_SelectionChanged();

        partial void TimeForecastExceptionsSet_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Loaded(bool succeeded);

        /// <summary>
        /// Gets the PTOReport visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.PTORecord> PTOReport
        {
            get
            {
                return global::LightSwitchApplication.PTOReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTOReport);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReport_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime PTORecordpFromDate
        {
            get 
            {
                return global::LightSwitchApplication.PTOReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpFromDate);
            }
            set
            {
                global::LightSwitchApplication.PTOReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpFromDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTORecordpFromDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime PTORecordpToDate
        {
            get 
            {
                return global::LightSwitchApplication.PTOReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpToDate);
            }
            set
            {
                global::LightSwitchApplication.PTOReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpToDate, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTORecordpToDate_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Country CountryParam
        {
            get 
            {
                return global::LightSwitchApplication.PTOReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.CountryParam);
            }
            set
            {
                global::LightSwitchApplication.PTOReportScreen.DetailsClass.SetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.CountryParam, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryParam_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TimeForecastExceptionsSet visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsSet
        {
            get
            {
                return global::LightSwitchApplication.PTOReportScreen.DetailsClass.GetValue(this, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsSet);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Run screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Run()
        {
            this.Details.Methods.Run.CreateInvocation().Execute();
        }
        partial void Run_CanExecute(ref bool result);
        partial void Run_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySet, global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSet, global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTOReport;
                var initializeCommandEntry = global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSetProperties.Run;
                var initializeMethodEntry = global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSetProperties.Run;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry
                __PTOReportScreenEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry(
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeSavingEvent,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeSavedEvent,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeClosingEvent,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeCreated,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeActivated,
                    global::LightSwitchApplication.PTOReportScreen.DetailsClass.__PTOReportScreen_InvokeSaveErrorEvent);
            private static void __PTOReportScreen_InvokeInitializeDataWorkspace(global::LightSwitchApplication.PTOReportScreen s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.PTOReportScreen_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __PTOReportScreen_InvokeSavingEvent(global::LightSwitchApplication.PTOReportScreen s)
            {
                bool handled = false;
                s.PTOReportScreen_Saving(ref handled);
                return handled;
            }
            private static void __PTOReportScreen_InvokeSavedEvent(global::LightSwitchApplication.PTOReportScreen s)
            {
                s.PTOReportScreen_Saved();
            }
            private static bool __PTOReportScreen_InvokeClosingEvent(global::LightSwitchApplication.PTOReportScreen s)
            {
                bool cancel = false;
                s.PTOReportScreen_Closing(ref cancel);
                return cancel;
            }
            private static void __PTOReportScreen_InvokeCreated(global::LightSwitchApplication.PTOReportScreen s)
            {
                s.PTOReportScreen_Created();
            }
            private static void __PTOReportScreen_InvokeActivated(global::LightSwitchApplication.PTOReportScreen s)
            {
                s.PTOReportScreen_Activated();
            }
            private static bool __PTOReportScreen_InvokeSaveErrorEvent(global::LightSwitchApplication.PTOReportScreen s, global::System.Exception ex)
            {
                bool handled = false;
                s.PTOReportScreen_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable PTOReportQuery(global::System.Nullable<int> countryId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate)
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.PTOReport(countryId, pFromDate, pToDate);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TimeForecastExceptionsSetQuery(global::System.Nullable<int> SelectedEmployee, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.TimeForecastExceptionsSet,
                        (t) => ((SelectedEmployee.HasValue && (t.Employee.Id == SelectedEmployee)) && ((((EndDate.HasValue && (t.StartDate >= EndDate)) && (EndDate.HasValue && (t.StartDate <= EndDate))) || ((StartDate.HasValue && (t.EndDate >= StartDate)) && (EndDate.HasValue && (t.EndDate <= EndDate)))) || ((StartDate.HasValue && (t.StartDate <= StartDate)) && (EndDate.HasValue && (t.EndDate >= EndDate)))))),
                    "Project");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord>.Data _PTOReport;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Data _PTORecordpFromDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Data _PTORecordpToDate;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country>.Data _CountryParam;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data _TimeForecastExceptionsSet;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Data _RunCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Data _RunMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord> PTOReport
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTOReport);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime> PTORecordpFromDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpFromDate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime> PTORecordpToDate
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.PTORecordpToDate);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country> CountryParam
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.CountryParam);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions> TimeForecastExceptionsSet
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties.TimeForecastExceptionsSet);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass> Run
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSetProperties.Run);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass> Run
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>)base.GetItem(global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSetProperties.Run);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord>.Entry
                    PTOReport = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord>.Entry(
                        "PTOReport",
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_Validate,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_CreateQuery,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_SelectionChanged,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_OnCollectionChanged,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTOReport_OnLoaded);
                private static void _PTOReport_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.PTORecord>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._PTOReport, sf);
                }
                private static void _PTOReport_Validate(global::LightSwitchApplication.PTOReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PTOReport_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _PTOReport_CreateQuery(global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object[] args)
                {
                    return d.PTOReportQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
                }
                private static void _PTOReport_SelectionChanged(global::LightSwitchApplication.PTOReportScreen s)
                {
                    s.PTOReport_SelectionChanged();
                }
                private static void _PTOReport_OnCollectionChanged(global::LightSwitchApplication.PTOReportScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.PTOReport_Changed(e);
                }
                private static void _PTOReport_OnLoaded(global::LightSwitchApplication.PTOReportScreen s, bool succeeded)
                {
                    s.PTOReport_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Entry
                    PTORecordpFromDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Entry(
                        "PTORecordpFromDate",
                        false,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpFromDate_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpFromDate_Validate,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpFromDate_OnValueChanged);
                private static void _PTORecordpFromDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._PTORecordpFromDate, sf);
                }
                private static void _PTORecordpFromDate_Validate(global::LightSwitchApplication.PTOReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PTORecordpFromDate_Validate(r);
                }
                private static void _PTORecordpFromDate_OnValueChanged(global::LightSwitchApplication.PTOReportScreen s)
                {
                    s.PTORecordpFromDate_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Entry
                    PTORecordpToDate = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Entry(
                        "PTORecordpToDate",
                        false,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpToDate_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpToDate_Validate,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._PTORecordpToDate_OnValueChanged);
                private static void _PTORecordpToDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._PTORecordpToDate, sf);
                }
                private static void _PTORecordpToDate_Validate(global::LightSwitchApplication.PTOReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.PTORecordpToDate_Validate(r);
                }
                private static void _PTORecordpToDate_OnValueChanged(global::LightSwitchApplication.PTOReportScreen s)
                {
                    s.PTORecordpToDate_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    CountryParam = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "CountryParam",
                        false,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._CountryParam_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._CountryParam_Validate,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._CountryParam_OnValueChanged);
                private static void _CountryParam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._CountryParam, sf);
                }
                private static void _CountryParam_Validate(global::LightSwitchApplication.PTOReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CountryParam_Validate(r);
                }
                private static void _CountryParam_OnValueChanged(global::LightSwitchApplication.PTOReportScreen s)
                {
                    s.CountryParam_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry
                    TimeForecastExceptionsSet = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Entry(
                        "TimeForecastExceptionsSet",
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_Validate,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_CreateQuery,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_SelectionChanged,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_OnCollectionChanged,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.PropertySetProperties._TimeForecastExceptionsSet_OnLoaded);
                private static void _TimeForecastExceptionsSet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::LightSwitchApplication.TimeForecastExceptions>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeForecastExceptionsSet, sf);
                }
                private static void _TimeForecastExceptionsSet_Validate(global::LightSwitchApplication.PTOReportScreen s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TimeForecastExceptionsSet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TimeForecastExceptionsSet_CreateQuery(global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object[] args)
                {
                    return d.TimeForecastExceptionsSetQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
                }
                private static void _TimeForecastExceptionsSet_SelectionChanged(global::LightSwitchApplication.PTOReportScreen s)
                {
                    s.TimeForecastExceptionsSet_SelectionChanged();
                }
                private static void _TimeForecastExceptionsSet_OnCollectionChanged(global::LightSwitchApplication.PTOReportScreen s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TimeForecastExceptionsSet_Changed(e);
                }
                private static void _TimeForecastExceptionsSet_OnLoaded(global::LightSwitchApplication.PTOReportScreen s, bool succeeded)
                {
                    s.TimeForecastExceptionsSet_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry
                    Run = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry(
                        "Run",
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSetProperties._Run_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.CommandSetProperties._Run_CreateExecutableObject);
                private static void _Run_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._RunCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Run_CreateExecutableObject(global::LightSwitchApplication.PTOReportScreen.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.PTOReportScreen.DetailsClass)d).Methods.Run.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry
                    Run = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Entry(
                        "Run",
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSetProperties._Run_Stub,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSetProperties._Run_CanInvoke,
                        global::LightSwitchApplication.PTOReportScreen.DetailsClass.MethodSetProperties._Run_InvokeMethod);
                private static void _Run_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.PTOReportScreen.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.PTOReportScreen, global::LightSwitchApplication.PTOReportScreen.DetailsClass>.Data> c, global::LightSwitchApplication.PTOReportScreen.DetailsClass d, object sf)
                {
                    c(d, ref d._RunMethod, sf);
                }
                private static global::System.Exception _Run_CanInvoke(global::LightSwitchApplication.PTOReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Run_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Run_InvokeMethod(global::LightSwitchApplication.PTOReportScreen.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Run_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageMyAssignments
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageMyAssignments() : base("LightSwitchApplication:ManageMyAssignments")
        {
            global::LightSwitchApplication.ManageMyAssignments.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageMyAssignments CreateInstance()
        {
            return new global::LightSwitchApplication.ManageMyAssignments(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageMyAssignments_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void CurrentEmployee_Changed();

        partial void EmployeeProjects_SelectionChanged();

        partial void EmployeeProjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjects_Loaded(bool succeeded);

        partial void FeaturesSearchTerm_Changed();

        partial void IncidentsSearchTerm_Changed();

        partial void TasksSearchTerm_Changed();

        partial void FeatureReqSearchTerm_Changed();

        partial void FeatureIssueSearchTerm_Changed();

        partial void IncidentReqSearchTerm_Changed();

        partial void IncidentIssueSearchTerm_Changed();

        partial void TaskReqSearchTerm_Changed();

        partial void TaskIssueSearchTerm_Changed();

        partial void FeatureTddSearchTerm_Changed();

        partial void IncidentTddSearchTerm_Changed();

        partial void TaskTddSearchTerm_Changed();

        partial void ProjectFeatures_SelectionChanged();

        partial void ProjectFeatures_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Loaded(bool succeeded);

        partial void ProjectFeatureStatusFilter_Changed();

        partial void ProjectIncidentStatusFilter_Changed();

        partial void ProjectIncidents_SelectionChanged();

        partial void ProjectIncidents_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Loaded(bool succeeded);

        partial void ProjectTasks_SelectionChanged();

        partial void ProjectTasks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Loaded(bool succeeded);

        partial void ProjectTaskStatusFilter_Changed();

        partial void FeatureReqs_SelectionChanged();

        partial void FeatureReqs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureReqs_Loaded(bool succeeded);

        partial void FeatureRequirementStatusFilter_Changed();

        partial void IncidentReqs_SelectionChanged();

        partial void IncidentReqs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentReqs_Loaded(bool succeeded);

        partial void IncidentRequirementStatusFilter_Changed();

        partial void TaskReqs_SelectionChanged();

        partial void TaskReqs_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskReqs_Loaded(bool succeeded);

        partial void TaskRequirementStatusFilter_Changed();

        partial void FeatureIssues_SelectionChanged();

        partial void FeatureIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssues_Loaded(bool succeeded);

        partial void FeatureIssueStatusFilter_Changed();

        partial void IncidentIssues_SelectionChanged();

        partial void IncidentIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssues_Loaded(bool succeeded);

        partial void IncidentIssueStatusFilter_Changed();

        partial void TaskIssues_SelectionChanged();

        partial void TaskIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssues_Loaded(bool succeeded);

        partial void TaskIssueStatusFilter_Changed();

        partial void FeatureTDDObjects_SelectionChanged();

        partial void FeatureTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDObjects_Loaded(bool succeeded);

        partial void FeatureTDDDetails_SelectionChanged();

        partial void FeatureTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDDetails_Loaded(bool succeeded);

        partial void ProjectFeatureComments_SelectionChanged();

        partial void ProjectFeatureComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Loaded(bool succeeded);

        partial void IncidentTDDObjects_SelectionChanged();

        partial void IncidentTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDObjects_Loaded(bool succeeded);

        partial void TaskTDDObjects_SelectionChanged();

        partial void TaskTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTDDObjects_Loaded(bool succeeded);

        partial void IncidentTDDDetails_SelectionChanged();

        partial void IncidentTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDDetails_Loaded(bool succeeded);

        partial void TaskTDDDetails_SelectionChanged();

        partial void TaskTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTDDDetails_Loaded(bool succeeded);

        partial void ProjectIncidentComments_SelectionChanged();

        partial void ProjectIncidentComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Loaded(bool succeeded);

        partial void ProjectTaskComments_SelectionChanged();

        partial void ProjectTaskComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Loaded(bool succeeded);

        partial void FeatureReqTimeTracks_SelectionChanged();

        partial void FeatureReqTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureReqTimeTracks_Loaded(bool succeeded);

        partial void IncidentReqTimeTracks_SelectionChanged();

        partial void IncidentReqTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentReqTimeTracks_Loaded(bool succeeded);

        partial void TaskReqTimeTracks_SelectionChanged();

        partial void TaskReqTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskReqTimeTracks_Loaded(bool succeeded);

        partial void FeatureIssueTimeTracks_SelectionChanged();

        partial void FeatureIssueTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssueTimeTracks_Loaded(bool succeeded);

        partial void IncidentIssueTimeTracks_SelectionChanged();

        partial void IncidentIssueTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssueTimeTracks_Loaded(bool succeeded);

        partial void TaskIssueTimeTracks_SelectionChanged();

        partial void TaskIssueTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssueTimeTracks_Loaded(bool succeeded);

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee CurrentEmployee
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.CurrentEmployee);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.CurrentEmployee, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CurrentEmployee_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the EmployeeProjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> EmployeeProjects
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.EmployeeProjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureReqSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureReqSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureIssueSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssueSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentReqSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentReqSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentIssueSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssueSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaskReqSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskReqSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaskIssueSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssueSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureTddSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTddSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTddSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTddSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentTddSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTddSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTddSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTddSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaskTddSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTddSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTddSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTddSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectFeatures visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeature> ProjectFeatures
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatures);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectFeatureStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectIncidentStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidents visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncident> ProjectIncidents
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidents);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTasks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTask> ProjectTasks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTasks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectTaskStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureReqs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> FeatureReqs
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureReqs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureRequirementStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureRequirementStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureRequirementStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureRequirementStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentReqs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> IncidentReqs
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentReqs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentRequirementStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentRequirementStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentRequirementStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentRequirementStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskReqs visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> TaskReqs
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqs);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskReqs_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaskRequirementStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskRequirementStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskRequirementStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskRequirementStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> FeatureIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureIssueStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssueStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> IncidentIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentIssueStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssueStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> TaskIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaskIssueStatusFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueStatusFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageMyAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueStatusFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssueStatusFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> FeatureTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> FeatureTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectFeatureComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatureComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> IncidentTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> TaskTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> IncidentTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> TaskTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidentComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidentComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTaskComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTaskComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureReqTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> FeatureReqTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureReqTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentReqTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> IncidentReqTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentReqTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskReqTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> TaskReqTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskReqTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureIssueTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> FeatureIssueTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureIssueTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentIssueTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> IncidentIssueTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentIssueTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TaskIssueTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> TaskIssueTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageMyAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaskIssueTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the OpenOnTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenOnTimeWindow()
        {
            this.Details.Methods.OpenOnTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenOnTimeWindow_CanExecute(ref bool result);
        partial void OpenOnTimeWindow_Execute();

        /// <summary>
        /// Calls the OpenFeatureOnTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureOnTimeWindow()
        {
            this.Details.Methods.OpenFeatureOnTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureOnTimeWindow_CanExecute(ref bool result);
        partial void OpenFeatureOnTimeWindow_Execute();

        /// <summary>
        /// Calls the ToogleCompletedIncidents screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToogleCompletedIncidents()
        {
            this.Details.Methods.ToogleCompletedIncidents.CreateInvocation().Execute();
        }
        partial void ToogleCompletedIncidents_CanExecute(ref bool result);
        partial void ToogleCompletedIncidents_Execute();

        /// <summary>
        /// Calls the OpenIncidentOnTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentOnTimeWindow()
        {
            this.Details.Methods.OpenIncidentOnTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentOnTimeWindow_CanExecute(ref bool result);
        partial void OpenIncidentOnTimeWindow_Execute();

        /// <summary>
        /// Calls the Comments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Comments()
        {
            this.Details.Methods.Comments.CreateInvocation().Execute();
        }
        partial void Comments_CanExecute(ref bool result);
        partial void Comments_Execute();

        /// <summary>
        /// Calls the OpenIncidentCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentCommentsWindow()
        {
            this.Details.Methods.OpenIncidentCommentsWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentCommentsWindow_CanExecute(ref bool result);
        partial void OpenIncidentCommentsWindow_Execute();

        /// <summary>
        /// Calls the ToogleCompletedTasks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToogleCompletedTasks()
        {
            this.Details.Methods.ToogleCompletedTasks.CreateInvocation().Execute();
        }
        partial void ToogleCompletedTasks_CanExecute(ref bool result);
        partial void ToogleCompletedTasks_Execute();

        /// <summary>
        /// Calls the OpenTaskCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskCommentsWindow()
        {
            this.Details.Methods.OpenTaskCommentsWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskCommentsWindow_CanExecute(ref bool result);
        partial void OpenTaskCommentsWindow_Execute();

        /// <summary>
        /// Calls the ToggleCompletedFeatures screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedFeatures()
        {
            this.Details.Methods.ToggleCompletedFeatures.CreateInvocation().Execute();
        }
        partial void ToggleCompletedFeatures_CanExecute(ref bool result);
        partial void ToggleCompletedFeatures_Execute();

        /// <summary>
        /// Calls the OpenFeatureCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureCommentsWindow()
        {
            this.Details.Methods.OpenFeatureCommentsWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureCommentsWindow_CanExecute(ref bool result);
        partial void OpenFeatureCommentsWindow_Execute();

        /// <summary>
        /// Calls the OpenFeatureReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureReqTimeTrackWindow()
        {
            this.Details.Methods.OpenFeatureReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenFeatureReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the FeatureReqsExportToExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureReqsExportToExcel()
        {
            this.Details.Methods.FeatureReqsExportToExcel.CreateInvocation().Execute();
        }
        partial void FeatureReqsExportToExcel_CanExecute(ref bool result);
        partial void FeatureReqsExportToExcel_Execute();

        /// <summary>
        /// Calls the OpenFeatureIssuesTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureIssuesTimeTrackWindow()
        {
            this.Details.Methods.OpenFeatureIssuesTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureIssuesTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenFeatureIssuesTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the FeatureIssuesExportToExcel screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureIssuesExportToExcel()
        {
            this.Details.Methods.FeatureIssuesExportToExcel.CreateInvocation().Execute();
        }
        partial void FeatureIssuesExportToExcel_CanExecute(ref bool result);
        partial void FeatureIssuesExportToExcel_Execute();

        /// <summary>
        /// Calls the SaveFeatureCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureCommentsWindow()
        {
            this.Details.Methods.SaveFeatureCommentsWindow.CreateInvocation().Execute();
        }
        partial void SaveFeatureCommentsWindow_CanExecute(ref bool result);
        partial void SaveFeatureCommentsWindow_Execute();

        /// <summary>
        /// Calls the SaveFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureComments()
        {
            this.Details.Methods.SaveFeatureComments.CreateInvocation().Execute();
        }
        partial void SaveFeatureComments_CanExecute(ref bool result);
        partial void SaveFeatureComments_Execute();

        /// <summary>
        /// Calls the CancelFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureComments()
        {
            this.Details.Methods.CancelFeatureComments.CreateInvocation().Execute();
        }
        partial void CancelFeatureComments_CanExecute(ref bool result);
        partial void CancelFeatureComments_Execute();

        /// <summary>
        /// Calls the SaveIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentComments()
        {
            this.Details.Methods.SaveIncidentComments.CreateInvocation().Execute();
        }
        partial void SaveIncidentComments_CanExecute(ref bool result);
        partial void SaveIncidentComments_Execute();

        /// <summary>
        /// Calls the CancelIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentComments()
        {
            this.Details.Methods.CancelIncidentComments.CreateInvocation().Execute();
        }
        partial void CancelIncidentComments_CanExecute(ref bool result);
        partial void CancelIncidentComments_Execute();

        /// <summary>
        /// Calls the SaveTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskComments()
        {
            this.Details.Methods.SaveTaskComments.CreateInvocation().Execute();
        }
        partial void SaveTaskComments_CanExecute(ref bool result);
        partial void SaveTaskComments_Execute();

        /// <summary>
        /// Calls the CancelTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskComments()
        {
            this.Details.Methods.CancelTaskComments.CreateInvocation().Execute();
        }
        partial void CancelTaskComments_CanExecute(ref bool result);
        partial void CancelTaskComments_Execute();

        /// <summary>
        /// Calls the SaveFeatureReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureReqTimeTracks()
        {
            this.Details.Methods.SaveFeatureReqTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveFeatureReqTimeTracks_CanExecute(ref bool result);
        partial void SaveFeatureReqTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelFeatureReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureReqTimeTracks()
        {
            this.Details.Methods.CancelFeatureReqTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelFeatureReqTimeTracks_CanExecute(ref bool result);
        partial void CancelFeatureReqTimeTracks_Execute();

        /// <summary>
        /// Calls the SaveIncidentReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentReqTimeTracks()
        {
            this.Details.Methods.SaveIncidentReqTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveIncidentReqTimeTracks_CanExecute(ref bool result);
        partial void SaveIncidentReqTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelIncidentReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentReqTimeTracks()
        {
            this.Details.Methods.CancelIncidentReqTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelIncidentReqTimeTracks_CanExecute(ref bool result);
        partial void CancelIncidentReqTimeTracks_Execute();

        /// <summary>
        /// Calls the SaveTaskReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskReqTimeTracks()
        {
            this.Details.Methods.SaveTaskReqTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveTaskReqTimeTracks_CanExecute(ref bool result);
        partial void SaveTaskReqTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelTaskReqTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskReqTimeTracks()
        {
            this.Details.Methods.CancelTaskReqTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelTaskReqTimeTracks_CanExecute(ref bool result);
        partial void CancelTaskReqTimeTracks_Execute();

        /// <summary>
        /// Calls the SaveFeatureIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureIssueTimeTracks()
        {
            this.Details.Methods.SaveFeatureIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveFeatureIssueTimeTracks_CanExecute(ref bool result);
        partial void SaveFeatureIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelFeatureIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureIssueTimeTracks()
        {
            this.Details.Methods.CancelFeatureIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelFeatureIssueTimeTracks_CanExecute(ref bool result);
        partial void CancelFeatureIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the SaveIncidentIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentIssueTimeTracks()
        {
            this.Details.Methods.SaveIncidentIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveIncidentIssueTimeTracks_CanExecute(ref bool result);
        partial void SaveIncidentIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelIncidentIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentIssueTimeTracks()
        {
            this.Details.Methods.CancelIncidentIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelIncidentIssueTimeTracks_CanExecute(ref bool result);
        partial void CancelIncidentIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the SaveTaskIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskIssueTimeTracks()
        {
            this.Details.Methods.SaveTaskIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void SaveTaskIssueTimeTracks_CanExecute(ref bool result);
        partial void SaveTaskIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the CancelTaskIssueTimeTracks screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskIssueTimeTracks()
        {
            this.Details.Methods.CancelTaskIssueTimeTracks.CreateInvocation().Execute();
        }
        partial void CancelTaskIssueTimeTracks_CanExecute(ref bool result);
        partial void CancelTaskIssueTimeTracks_Execute();

        /// <summary>
        /// Calls the OpenIncidentReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentReqTimeTrackWindow()
        {
            this.Details.Methods.OpenIncidentReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenIncidentReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenTaskReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskReqTimeTrackWindow()
        {
            this.Details.Methods.OpenTaskReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenTaskReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenFeatureIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenFeatureIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenFeatureIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenIncidentIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenIncidentIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenTaskIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenTaskIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenTaskIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the ToggleCompletedRequirements screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedRequirements()
        {
            this.Details.Methods.ToggleCompletedRequirements.CreateInvocation().Execute();
        }
        partial void ToggleCompletedRequirements_CanExecute(ref bool result);
        partial void ToggleCompletedRequirements_Execute();

        /// <summary>
        /// Calls the ToggleCompletedReqIssues screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedReqIssues()
        {
            this.Details.Methods.ToggleCompletedReqIssues.CreateInvocation().Execute();
        }
        partial void ToggleCompletedReqIssues_CanExecute(ref bool result);
        partial void ToggleCompletedReqIssues_Execute();

        /// <summary>
        /// Calls the ToggleCompletedFeatureRequirements screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedFeatureRequirements()
        {
            this.Details.Methods.ToggleCompletedFeatureRequirements.CreateInvocation().Execute();
        }
        partial void ToggleCompletedFeatureRequirements_CanExecute(ref bool result);
        partial void ToggleCompletedFeatureRequirements_Execute();

        /// <summary>
        /// Calls the ToggleCompletedFeatureIncidents screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedFeatureIncidents()
        {
            this.Details.Methods.ToggleCompletedFeatureIncidents.CreateInvocation().Execute();
        }
        partial void ToggleCompletedFeatureIncidents_CanExecute(ref bool result);
        partial void ToggleCompletedFeatureIncidents_Execute();

        /// <summary>
        /// Calls the MethodToggleCompletedFeatureIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void MethodToggleCompletedFeatureIssue()
        {
            this.Details.Methods.MethodToggleCompletedFeatureIssue.CreateInvocation().Execute();
        }
        partial void MethodToggleCompletedFeatureIssue_CanExecute(ref bool result);
        partial void MethodToggleCompletedFeatureIssue_Execute();

        /// <summary>
        /// Calls the ToggleCompletedIncidentRequirement screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedIncidentRequirement()
        {
            this.Details.Methods.ToggleCompletedIncidentRequirement.CreateInvocation().Execute();
        }
        partial void ToggleCompletedIncidentRequirement_CanExecute(ref bool result);
        partial void ToggleCompletedIncidentRequirement_Execute();

        /// <summary>
        /// Calls the ToggleCompletedIncidentIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedIncidentIssue()
        {
            this.Details.Methods.ToggleCompletedIncidentIssue.CreateInvocation().Execute();
        }
        partial void ToggleCompletedIncidentIssue_CanExecute(ref bool result);
        partial void ToggleCompletedIncidentIssue_Execute();

        /// <summary>
        /// Calls the ToggleCompletedTaskRequirement screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedTaskRequirement()
        {
            this.Details.Methods.ToggleCompletedTaskRequirement.CreateInvocation().Execute();
        }
        partial void ToggleCompletedTaskRequirement_CanExecute(ref bool result);
        partial void ToggleCompletedTaskRequirement_Execute();

        /// <summary>
        /// Calls the ToggleCompletedTaskIssue screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ToggleCompletedTaskIssue()
        {
            this.Details.Methods.ToggleCompletedTaskIssue.CreateInvocation().Execute();
        }
        partial void ToggleCompletedTaskIssue_CanExecute(ref bool result);
        partial void ToggleCompletedTaskIssue_Execute();

        /// <summary>
        /// Calls the ProjectFeaturesAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ProjectFeaturesAddAndEditNew()
        {
            this.Details.Methods.ProjectFeaturesAddAndEditNew.CreateInvocation().Execute();
        }
        partial void ProjectFeaturesAddAndEditNew_CanExecute(ref bool result);
        partial void ProjectFeaturesAddAndEditNew_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySet, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSet, global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.CurrentEmployee;
                var initializeCommandEntry = global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenOnTimeWindow;
                var initializeMethodEntry = global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenOnTimeWindow;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                __ManageMyAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeCreated,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeActivated,
                    global::LightSwitchApplication.ManageMyAssignments.DetailsClass.__ManageMyAssignments_InvokeSaveErrorEvent);
            private static void __ManageMyAssignments_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageMyAssignments_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageMyAssignments_InvokeSavingEvent(global::LightSwitchApplication.ManageMyAssignments s)
            {
                bool handled = false;
                s.ManageMyAssignments_Saving(ref handled);
                return handled;
            }
            private static void __ManageMyAssignments_InvokeSavedEvent(global::LightSwitchApplication.ManageMyAssignments s)
            {
                s.ManageMyAssignments_Saved();
            }
            private static bool __ManageMyAssignments_InvokeClosingEvent(global::LightSwitchApplication.ManageMyAssignments s)
            {
                bool cancel = false;
                s.ManageMyAssignments_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageMyAssignments_InvokeCreated(global::LightSwitchApplication.ManageMyAssignments s)
            {
                s.ManageMyAssignments_Created();
            }
            private static void __ManageMyAssignments_InvokeActivated(global::LightSwitchApplication.ManageMyAssignments s)
            {
                s.ManageMyAssignments_Activated();
            }
            private static bool __ManageMyAssignments_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageMyAssignments s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageMyAssignments_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeProjectsQuery(global::System.Nullable<int> EmployeeId)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    this.Screen.DataWorkspace.ApplicationData.EmployeeProjects(EmployeeId),
                    "Client");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectFeaturesQuery(global::System.Nullable<int> EmployeeId, string SearchTerm, string Status)
            {
                if (this.Screen.EmployeeProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.EmployeeProjects.SelectedItem.Details.Properties.ProjectFeatures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => (((EmployeeId.HasValue && (p.Developer.Id == EmployeeId)) && (((((SearchTerm == null) || p.DocumentName.Contains(SearchTerm)) || ((SearchTerm == null) || p.FeatureId.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm)))) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                    "Developer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentsQuery(global::System.Nullable<int> EmployeeId, string SearchTerm, string Status)
            {
                if (this.Screen.EmployeeProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.EmployeeProjects.SelectedItem.Details.Properties.ProjectIncidentsItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => (((EmployeeId.HasValue && (p.Developer.Id == EmployeeId)) && (((((SearchTerm == null) || p.IncidentId.Contains(SearchTerm)) || ((SearchTerm == null) || p.Name.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm)))) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                    "Developer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTasksQuery(global::System.Nullable<int> EmployeeId, string SearchTerm, string Status)
            {
                if (this.Screen.EmployeeProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.EmployeeProjects.SelectedItem.Details.Properties.ProjectTasks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => (((EmployeeId.HasValue && (p.Employee.Id == EmployeeId)) && ((((SearchTerm == null) || p.Name.Contains(SearchTerm)) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm)))) && (((p.Status.CompareTo("Completed") == 0) == false) || (p.Status.CompareTo(Status) == 0)))),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureReqsQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Name.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) && (((r.Status.CompareTo("Completed") == 0) == false) || (r.Status.CompareTo(Status) == 0)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentReqsQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.Name.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) && (((r.Status.CompareTo("Completed") == 0) == false) || (r.Status.CompareTo(Status) == 0)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskReqsQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Name.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) && (((r.Status.CompareTo("Completed") == 0) == false) || (r.Status.CompareTo(Status) == 0)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureIssuesQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (i) => (((((((((((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.IssueId.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || i.Type.Contains(SearchTerm))) && (((i.Status.CompareTo("Completed") == 0) == false) || (i.Status.CompareTo(Status) == 0)))),
                        "ReportedBy"),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentIssuesQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (i) => (((((((((((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || i.IssueId.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm))) || ((SearchTerm == null) || i.Type.Contains(SearchTerm))) && (((i.Status.CompareTo("Completed") == 0) == false) || (i.Status.CompareTo(Status) == 0)))),
                        "ReportedBy"),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskIssuesQuery(string SearchTerm, string Status)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                            loader,
                            (i) => (((((((((((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.IssueId.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.FirstName.Contains(SearchTerm))) || ((SearchTerm == null) || i.ReportedBy.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm))) || ((SearchTerm == null) || i.Type.Contains(SearchTerm))) && (((i.Status.CompareTo("Completed") == 0) == false) || (i.Status.CompareTo(Status) == 0)))),
                        "ReportedBy"),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Action.Contains(SearchTerm)) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Name.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureTDDDetailsQuery()
            {
                if (this.Screen.FeatureTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeatureTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectFeatureCommentsQuery()
            {
                if (this.Screen.ProjectFeatures.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectFeatures.SelectedItem.Details.Properties.ProjectFeatureComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Action.Contains(SearchTerm)) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Name.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Action.Contains(SearchTerm)) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Name.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentTDDDetailsQuery()
            {
                if (this.Screen.IncidentTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskTDDDetailsQuery()
            {
                if (this.Screen.TaskTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TaskTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentCommentsQuery()
            {
                if (this.Screen.ProjectIncidents.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidents.SelectedItem.Details.Properties.ProjectIncidentComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTaskCommentsQuery()
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.ProjectTaskComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureReqTimeTracksQuery()
            {
                if (this.Screen.FeatureReqs.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeatureReqs.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentReqTimeTracksQuery()
            {
                if (this.Screen.IncidentReqs.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentReqs.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.StartTime),
                        (t) => t.EndTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskReqTimeTracksQuery()
            {
                if (this.Screen.TaskReqs.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TaskReqs.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.StartTime),
                        (t) => t.EndTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureIssueTimeTracksQuery()
            {
                if (this.Screen.FeatureIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeatureIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.StartTime),
                        (t) => t.EndTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentIssueTimeTracksQuery()
            {
                if (this.Screen.IncidentIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.StartTime),
                        (t) => t.EndTime),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TaskIssueTimeTracksQuery()
            {
                if (this.Screen.TaskIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TaskIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                            global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                                loader,
                                (t) => t.WorkDate),
                            (t) => t.StartTime),
                        (t) => t.EndTime),
                    "Employee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee>.Data _CurrentEmployee;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project>.Data _EmployeeProjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeaturesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TasksSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeatureReqSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeatureIssueSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentReqSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentIssueSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TaskReqSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TaskIssueSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeatureTddSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentTddSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TaskTddSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _ProjectFeatures;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _ProjectFeatureStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _ProjectIncidentStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncidents;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTasks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _ProjectTaskStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _FeatureReqs;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeatureRequirementStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _IncidentReqs;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentRequirementStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _TaskReqs;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TaskRequirementStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _FeatureIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _FeatureIssueStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _IncidentIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _IncidentIssueStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _TaskIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data _TaskIssueStatusFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _FeatureTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _FeatureTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data _ProjectFeatureComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _IncidentTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _TaskTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _IncidentTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _TaskTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data _ProjectIncidentComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data _ProjectTaskComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _FeatureReqTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _IncidentReqTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TaskReqTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _FeatureIssueTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _IncidentIssueTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TaskIssueTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenOnTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureOnTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToogleCompletedIncidentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentOnTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToogleCompletedTasksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeaturesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _FeatureReqsExportToExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureIssuesTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _FeatureIssuesExportToExcelCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskReqTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskIssueTimeTracksCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedRequirementsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedReqIssuesCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeatureRequirementsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeatureIncidentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _MethodToggleCompletedFeatureIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedIncidentRequirementCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedIncidentIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedTaskRequirementCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedTaskIssueCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ProjectFeaturesAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenOnTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureOnTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToogleCompletedIncidentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentOnTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToogleCompletedTasksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeaturesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _FeatureReqsExportToExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureIssuesTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _FeatureIssuesExportToExcelMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskReqTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveFeatureIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelFeatureIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveIncidentIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelIncidentIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _SaveTaskIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _CancelTaskIssueTimeTracksMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenFeatureIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenIncidentIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _OpenTaskIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedRequirementsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedReqIssuesMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeatureRequirementsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedFeatureIncidentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _MethodToggleCompletedFeatureIssueMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedIncidentRequirementMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedIncidentIssueMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedTaskRequirementMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ToggleCompletedTaskIssueMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data _ProjectFeaturesAddAndEditNewMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee> CurrentEmployee
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.CurrentEmployee);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project> EmployeeProjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.EmployeeProjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeaturesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TasksSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeatureReqSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeatureIssueSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentReqSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentIssueSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TaskReqSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TaskIssueSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeatureTddSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTddSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentTddSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTddSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TaskTddSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTddSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature> ProjectFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> ProjectFeatureStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatureStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> ProjectIncidentStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidentStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> ProjectTaskStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTaskStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement> FeatureReqs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqs);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeatureRequirementStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureRequirementStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement> IncidentReqs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqs);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentRequirementStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentRequirementStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement> TaskReqs
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqs);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TaskRequirementStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskRequirementStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue> FeatureIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> FeatureIssueStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue> IncidentIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> IncidentIssueStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue> TaskIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string> TaskIssueStatusFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueStatusFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> FeatureTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> FeatureTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> IncidentTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> TaskTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> IncidentTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> TaskTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.ProjectTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> FeatureReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> IncidentReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> TaskReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> FeatureIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.FeatureIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> IncidentIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.IncidentIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> TaskIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties.TaskIssueTimeTracks);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenFeatureOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToogleCompletedIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToogleCompletedIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenIncidentOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> Comments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.Comments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenIncidentCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToogleCompletedTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToogleCompletedTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenTaskCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenFeatureReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> FeatureReqsExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.FeatureReqsExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureIssuesTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenFeatureIssuesTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> FeatureIssuesExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.FeatureIssuesExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveFeatureReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelFeatureReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveIncidentReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelIncidentReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveTaskReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelTaskReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveFeatureIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelFeatureIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveIncidentIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelIncidentIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.SaveTaskIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.CancelTaskIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenIncidentReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenTaskReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenFeatureIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenIncidentIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.OpenTaskIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedReqIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedReqIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatureRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedFeatureRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatureIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedFeatureIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> MethodToggleCompletedFeatureIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.MethodToggleCompletedFeatureIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedIncidentRequirement
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedIncidentRequirement);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedIncidentIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedIncidentIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedTaskRequirement
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedTaskRequirement);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedTaskIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ToggleCompletedTaskIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ProjectFeaturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties.ProjectFeaturesAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenFeatureOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToogleCompletedIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToogleCompletedIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenIncidentOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> Comments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.Comments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenIncidentCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToogleCompletedTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToogleCompletedTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenTaskCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatures
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedFeatures);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenFeatureReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> FeatureReqsExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.FeatureReqsExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureIssuesTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenFeatureIssuesTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> FeatureIssuesExportToExcel
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.FeatureIssuesExportToExcel);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveFeatureReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelFeatureReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveIncidentReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelIncidentReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveTaskReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskReqTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelTaskReqTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveFeatureIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveFeatureIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelFeatureIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelFeatureIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveIncidentIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveIncidentIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelIncidentIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelIncidentIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> SaveTaskIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.SaveTaskIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> CancelTaskIssueTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.CancelTaskIssueTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenIncidentReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenTaskReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenFeatureIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenFeatureIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenIncidentIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenIncidentIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> OpenTaskIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.OpenTaskIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedReqIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedReqIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatureRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedFeatureRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedFeatureIncidents
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedFeatureIncidents);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> MethodToggleCompletedFeatureIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.MethodToggleCompletedFeatureIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedIncidentRequirement
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedIncidentRequirement);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedIncidentIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedIncidentIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedTaskRequirement
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedTaskRequirement);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ToggleCompletedTaskIssue
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ToggleCompletedTaskIssue);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass> ProjectFeaturesAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties.ProjectFeaturesAddAndEditNew);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    CurrentEmployee = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "CurrentEmployee",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._CurrentEmployee_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._CurrentEmployee_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._CurrentEmployee_OnValueChanged);
                private static void _CurrentEmployee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CurrentEmployee, sf);
                }
                private static void _CurrentEmployee_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CurrentEmployee_Validate(r);
                }
                private static void _CurrentEmployee_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.CurrentEmployee_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    EmployeeProjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "EmployeeProjects",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._EmployeeProjects_OnLoaded);
                private static void _EmployeeProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeProjects, sf);
                }
                private static void _EmployeeProjects_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeProjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeProjects_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.EmployeeProjectsQuery((global::System.Nullable<int>)args[0]);
                }
                private static void _EmployeeProjects_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.EmployeeProjects_SelectionChanged();
                }
                private static void _EmployeeProjects_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeProjects_Changed(e);
                }
                private static void _EmployeeProjects_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.EmployeeProjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeaturesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeaturesSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_OnValueChanged);
                private static void _FeaturesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesSearchTerm, sf);
                }
                private static void _FeaturesSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesSearchTerm_Validate(r);
                }
                private static void _FeaturesSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeaturesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_OnValueChanged);
                private static void _IncidentsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsSearchTerm, sf);
                }
                private static void _IncidentsSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsSearchTerm_Validate(r);
                }
                private static void _IncidentsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TasksSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TasksSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_OnValueChanged);
                private static void _TasksSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksSearchTerm, sf);
                }
                private static void _TasksSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksSearchTerm_Validate(r);
                }
                private static void _TasksSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TasksSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeatureReqSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeatureReqSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqSearchTerm_OnValueChanged);
                private static void _FeatureReqSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureReqSearchTerm, sf);
                }
                private static void _FeatureReqSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureReqSearchTerm_Validate(r);
                }
                private static void _FeatureReqSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureReqSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeatureIssueSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeatureIssueSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueSearchTerm_OnValueChanged);
                private static void _FeatureIssueSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssueSearchTerm, sf);
                }
                private static void _FeatureIssueSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureIssueSearchTerm_Validate(r);
                }
                private static void _FeatureIssueSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureIssueSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentReqSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentReqSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqSearchTerm_OnValueChanged);
                private static void _IncidentReqSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentReqSearchTerm, sf);
                }
                private static void _IncidentReqSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentReqSearchTerm_Validate(r);
                }
                private static void _IncidentReqSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentReqSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentIssueSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentIssueSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueSearchTerm_OnValueChanged);
                private static void _IncidentIssueSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueSearchTerm, sf);
                }
                private static void _IncidentIssueSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentIssueSearchTerm_Validate(r);
                }
                private static void _IncidentIssueSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentIssueSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TaskReqSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TaskReqSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqSearchTerm_OnValueChanged);
                private static void _TaskReqSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskReqSearchTerm, sf);
                }
                private static void _TaskReqSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskReqSearchTerm_Validate(r);
                }
                private static void _TaskReqSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskReqSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TaskIssueSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TaskIssueSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueSearchTerm_OnValueChanged);
                private static void _TaskIssueSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueSearchTerm, sf);
                }
                private static void _TaskIssueSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskIssueSearchTerm_Validate(r);
                }
                private static void _TaskIssueSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskIssueSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeatureTddSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeatureTddSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTddSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTddSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTddSearchTerm_OnValueChanged);
                private static void _FeatureTddSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureTddSearchTerm, sf);
                }
                private static void _FeatureTddSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureTddSearchTerm_Validate(r);
                }
                private static void _FeatureTddSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureTddSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentTddSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentTddSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTddSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTddSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTddSearchTerm_OnValueChanged);
                private static void _IncidentTddSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentTddSearchTerm, sf);
                }
                private static void _IncidentTddSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentTddSearchTerm_Validate(r);
                }
                private static void _IncidentTddSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentTddSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TaskTddSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TaskTddSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTddSearchTerm_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTddSearchTerm_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTddSearchTerm_OnValueChanged);
                private static void _TaskTddSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskTddSearchTerm, sf);
                }
                private static void _TaskTddSearchTerm_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskTddSearchTerm_Validate(r);
                }
                private static void _TaskTddSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskTddSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    ProjectFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "ProjectFeatures",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatures_OnLoaded);
                private static void _ProjectFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatures, sf);
                }
                private static void _ProjectFeatures_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatures_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectFeatures_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectFeaturesQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2]);
                }
                private static void _ProjectFeatures_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectFeatures_SelectionChanged();
                }
                private static void _ProjectFeatures_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectFeatures_Changed(e);
                }
                private static void _ProjectFeatures_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectFeatures_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    ProjectFeatureStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "ProjectFeatureStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureStatusFilter_OnValueChanged);
                private static void _ProjectFeatureStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureStatusFilter, sf);
                }
                private static void _ProjectFeatureStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatureStatusFilter_Validate(r);
                }
                private static void _ProjectFeatureStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectFeatureStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    ProjectIncidentStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "ProjectIncidentStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentStatusFilter_OnValueChanged);
                private static void _ProjectIncidentStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentStatusFilter, sf);
                }
                private static void _ProjectIncidentStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentStatusFilter_Validate(r);
                }
                private static void _ProjectIncidentStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectIncidentStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncidents",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidents_OnLoaded);
                private static void _ProjectIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidents, sf);
                }
                private static void _ProjectIncidents_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidents_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidents_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentsQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2]);
                }
                private static void _ProjectIncidents_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectIncidents_SelectionChanged();
                }
                private static void _ProjectIncidents_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidents_Changed(e);
                }
                private static void _ProjectIncidents_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectIncidents_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTasks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTasks_OnLoaded);
                private static void _ProjectTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTasks, sf);
                }
                private static void _ProjectTasks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTasks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTasks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectTasksQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2]);
                }
                private static void _ProjectTasks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectTasks_SelectionChanged();
                }
                private static void _ProjectTasks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTasks_Changed(e);
                }
                private static void _ProjectTasks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectTasks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    ProjectTaskStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "ProjectTaskStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskStatusFilter_OnValueChanged);
                private static void _ProjectTaskStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTaskStatusFilter, sf);
                }
                private static void _ProjectTaskStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTaskStatusFilter_Validate(r);
                }
                private static void _ProjectTaskStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectTaskStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    FeatureReqs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "FeatureReqs",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqs_OnLoaded);
                private static void _FeatureReqs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureReqs, sf);
                }
                private static void _FeatureReqs_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureReqs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureReqs_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureReqsQuery((string)args[0], (string)args[1]);
                }
                private static void _FeatureReqs_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureReqs_SelectionChanged();
                }
                private static void _FeatureReqs_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureReqs_Changed(e);
                }
                private static void _FeatureReqs_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureReqs_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeatureRequirementStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeatureRequirementStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureRequirementStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureRequirementStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureRequirementStatusFilter_OnValueChanged);
                private static void _FeatureRequirementStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementStatusFilter, sf);
                }
                private static void _FeatureRequirementStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureRequirementStatusFilter_Validate(r);
                }
                private static void _FeatureRequirementStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureRequirementStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    IncidentReqs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "IncidentReqs",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqs_OnLoaded);
                private static void _IncidentReqs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentReqs, sf);
                }
                private static void _IncidentReqs_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentReqs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentReqs_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentReqsQuery((string)args[0], (string)args[1]);
                }
                private static void _IncidentReqs_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentReqs_SelectionChanged();
                }
                private static void _IncidentReqs_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentReqs_Changed(e);
                }
                private static void _IncidentReqs_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentReqs_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentRequirementStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentRequirementStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentRequirementStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentRequirementStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentRequirementStatusFilter_OnValueChanged);
                private static void _IncidentRequirementStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentRequirementStatusFilter, sf);
                }
                private static void _IncidentRequirementStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentRequirementStatusFilter_Validate(r);
                }
                private static void _IncidentRequirementStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentRequirementStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    TaskReqs = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "TaskReqs",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqs_OnLoaded);
                private static void _TaskReqs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskReqs, sf);
                }
                private static void _TaskReqs_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskReqs_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskReqs_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskReqsQuery((string)args[0], (string)args[1]);
                }
                private static void _TaskReqs_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskReqs_SelectionChanged();
                }
                private static void _TaskReqs_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskReqs_Changed(e);
                }
                private static void _TaskReqs_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskReqs_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TaskRequirementStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TaskRequirementStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskRequirementStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskRequirementStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskRequirementStatusFilter_OnValueChanged);
                private static void _TaskRequirementStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskRequirementStatusFilter, sf);
                }
                private static void _TaskRequirementStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskRequirementStatusFilter_Validate(r);
                }
                private static void _TaskRequirementStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskRequirementStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    FeatureIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "FeatureIssues",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssues_OnLoaded);
                private static void _FeatureIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssues, sf);
                }
                private static void _FeatureIssues_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureIssues_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureIssuesQuery((string)args[0], (string)args[1]);
                }
                private static void _FeatureIssues_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureIssues_SelectionChanged();
                }
                private static void _FeatureIssues_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureIssues_Changed(e);
                }
                private static void _FeatureIssues_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    FeatureIssueStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "FeatureIssueStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueStatusFilter_OnValueChanged);
                private static void _FeatureIssueStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssueStatusFilter, sf);
                }
                private static void _FeatureIssueStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureIssueStatusFilter_Validate(r);
                }
                private static void _FeatureIssueStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureIssueStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IncidentIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IncidentIssues",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssues_OnLoaded);
                private static void _IncidentIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssues, sf);
                }
                private static void _IncidentIssues_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentIssues_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentIssuesQuery((string)args[0], (string)args[1]);
                }
                private static void _IncidentIssues_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentIssues_SelectionChanged();
                }
                private static void _IncidentIssues_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentIssues_Changed(e);
                }
                private static void _IncidentIssues_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    IncidentIssueStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "IncidentIssueStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueStatusFilter_OnValueChanged);
                private static void _IncidentIssueStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueStatusFilter, sf);
                }
                private static void _IncidentIssueStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentIssueStatusFilter_Validate(r);
                }
                private static void _IncidentIssueStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentIssueStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    TaskIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "TaskIssues",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssues_OnLoaded);
                private static void _TaskIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssues, sf);
                }
                private static void _TaskIssues_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskIssues_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskIssuesQuery((string)args[0], (string)args[1]);
                }
                private static void _TaskIssues_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskIssues_SelectionChanged();
                }
                private static void _TaskIssues_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskIssues_Changed(e);
                }
                private static void _TaskIssues_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry
                    TaskIssueStatusFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Entry(
                        "TaskIssueStatusFilter",
                        false,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueStatusFilter_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueStatusFilter_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueStatusFilter_OnValueChanged);
                private static void _TaskIssueStatusFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueStatusFilter, sf);
                }
                private static void _TaskIssueStatusFilter_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskIssueStatusFilter_Validate(r);
                }
                private static void _TaskIssueStatusFilter_OnValueChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskIssueStatusFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    FeatureTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "FeatureTDDObjects",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDObjects_OnLoaded);
                private static void _FeatureTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureTDDObjects, sf);
                }
                private static void _FeatureTDDObjects_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureTDDObjects_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureTDDObjectsQuery((string)args[0]);
                }
                private static void _FeatureTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureTDDObjects_SelectionChanged();
                }
                private static void _FeatureTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureTDDObjects_Changed(e);
                }
                private static void _FeatureTDDObjects_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    FeatureTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "FeatureTDDDetails",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureTDDDetails_OnLoaded);
                private static void _FeatureTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureTDDDetails, sf);
                }
                private static void _FeatureTDDDetails_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureTDDDetails_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureTDDDetailsQuery();
                }
                private static void _FeatureTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureTDDDetails_SelectionChanged();
                }
                private static void _FeatureTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureTDDDetails_Changed(e);
                }
                private static void _FeatureTDDDetails_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry
                    ProjectFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry(
                        "ProjectFeatureComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnLoaded);
                private static void _ProjectFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureComments, sf);
                }
                private static void _ProjectFeatureComments_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatureComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectFeatureComments_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectFeatureCommentsQuery();
                }
                private static void _ProjectFeatureComments_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectFeatureComments_SelectionChanged();
                }
                private static void _ProjectFeatureComments_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectFeatureComments_Changed(e);
                }
                private static void _ProjectFeatureComments_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectFeatureComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    IncidentTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "IncidentTDDObjects",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDObjects_OnLoaded);
                private static void _IncidentTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentTDDObjects, sf);
                }
                private static void _IncidentTDDObjects_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentTDDObjects_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentTDDObjectsQuery((string)args[0]);
                }
                private static void _IncidentTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentTDDObjects_SelectionChanged();
                }
                private static void _IncidentTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentTDDObjects_Changed(e);
                }
                private static void _IncidentTDDObjects_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    TaskTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "TaskTDDObjects",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDObjects_OnLoaded);
                private static void _TaskTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskTDDObjects, sf);
                }
                private static void _TaskTDDObjects_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskTDDObjects_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskTDDObjectsQuery((string)args[0]);
                }
                private static void _TaskTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskTDDObjects_SelectionChanged();
                }
                private static void _TaskTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskTDDObjects_Changed(e);
                }
                private static void _TaskTDDObjects_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    IncidentTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "IncidentTDDDetails",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentTDDDetails_OnLoaded);
                private static void _IncidentTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentTDDDetails, sf);
                }
                private static void _IncidentTDDDetails_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentTDDDetails_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentTDDDetailsQuery();
                }
                private static void _IncidentTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentTDDDetails_SelectionChanged();
                }
                private static void _IncidentTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentTDDDetails_Changed(e);
                }
                private static void _IncidentTDDDetails_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    TaskTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "TaskTDDDetails",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskTDDDetails_OnLoaded);
                private static void _TaskTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskTDDDetails, sf);
                }
                private static void _TaskTDDDetails_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskTDDDetails_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskTDDDetailsQuery();
                }
                private static void _TaskTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskTDDDetails_SelectionChanged();
                }
                private static void _TaskTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskTDDDetails_Changed(e);
                }
                private static void _TaskTDDDetails_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry
                    ProjectIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry(
                        "ProjectIncidentComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnLoaded);
                private static void _ProjectIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentComments, sf);
                }
                private static void _ProjectIncidentComments_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidentComments_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentCommentsQuery();
                }
                private static void _ProjectIncidentComments_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectIncidentComments_SelectionChanged();
                }
                private static void _ProjectIncidentComments_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidentComments_Changed(e);
                }
                private static void _ProjectIncidentComments_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectIncidentComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry
                    ProjectTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry(
                        "ProjectTaskComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_OnLoaded);
                private static void _ProjectTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTaskComments, sf);
                }
                private static void _ProjectTaskComments_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTaskComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTaskComments_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectTaskCommentsQuery();
                }
                private static void _ProjectTaskComments_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.ProjectTaskComments_SelectionChanged();
                }
                private static void _ProjectTaskComments_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTaskComments_Changed(e);
                }
                private static void _ProjectTaskComments_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.ProjectTaskComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    FeatureReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "FeatureReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureReqTimeTracks_OnLoaded);
                private static void _FeatureReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureReqTimeTracks, sf);
                }
                private static void _FeatureReqTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureReqTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureReqTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureReqTimeTracksQuery();
                }
                private static void _FeatureReqTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureReqTimeTracks_SelectionChanged();
                }
                private static void _FeatureReqTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureReqTimeTracks_Changed(e);
                }
                private static void _FeatureReqTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureReqTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    IncidentReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "IncidentReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentReqTimeTracks_OnLoaded);
                private static void _IncidentReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentReqTimeTracks, sf);
                }
                private static void _IncidentReqTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentReqTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentReqTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentReqTimeTracksQuery();
                }
                private static void _IncidentReqTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentReqTimeTracks_SelectionChanged();
                }
                private static void _IncidentReqTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentReqTimeTracks_Changed(e);
                }
                private static void _IncidentReqTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentReqTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TaskReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TaskReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskReqTimeTracks_OnLoaded);
                private static void _TaskReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskReqTimeTracks, sf);
                }
                private static void _TaskReqTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskReqTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskReqTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskReqTimeTracksQuery();
                }
                private static void _TaskReqTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskReqTimeTracks_SelectionChanged();
                }
                private static void _TaskReqTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskReqTimeTracks_Changed(e);
                }
                private static void _TaskReqTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskReqTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    FeatureIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "FeatureIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._FeatureIssueTimeTracks_OnLoaded);
                private static void _FeatureIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssueTimeTracks, sf);
                }
                private static void _FeatureIssueTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureIssueTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureIssueTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureIssueTimeTracksQuery();
                }
                private static void _FeatureIssueTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.FeatureIssueTimeTracks_SelectionChanged();
                }
                private static void _FeatureIssueTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureIssueTimeTracks_Changed(e);
                }
                private static void _FeatureIssueTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.FeatureIssueTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    IncidentIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "IncidentIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._IncidentIssueTimeTracks_OnLoaded);
                private static void _IncidentIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueTimeTracks, sf);
                }
                private static void _IncidentIssueTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentIssueTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentIssueTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentIssueTimeTracksQuery();
                }
                private static void _IncidentIssueTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.IncidentIssueTimeTracks_SelectionChanged();
                }
                private static void _IncidentIssueTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentIssueTimeTracks_Changed(e);
                }
                private static void _IncidentIssueTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.IncidentIssueTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TaskIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TaskIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_Validate,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.PropertySetProperties._TaskIssueTimeTracks_OnLoaded);
                private static void _TaskIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueTimeTracks, sf);
                }
                private static void _TaskIssueTimeTracks_Validate(global::LightSwitchApplication.ManageMyAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TaskIssueTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TaskIssueTimeTracks_CreateQuery(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object[] args)
                {
                    return d.TaskIssueTimeTracksQuery();
                }
                private static void _TaskIssueTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageMyAssignments s)
                {
                    s.TaskIssueTimeTracks_SelectionChanged();
                }
                private static void _TaskIssueTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageMyAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TaskIssueTimeTracks_Changed(e);
                }
                private static void _TaskIssueTimeTracks_OnLoaded(global::LightSwitchApplication.ManageMyAssignments s, bool succeeded)
                {
                    s.TaskIssueTimeTracks_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenOnTimeWindow_CreateExecutableObject);
                private static void _OpenOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenOnTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenOnTimeWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenOnTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureOnTimeWindow_CreateExecutableObject);
                private static void _OpenFeatureOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureOnTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureOnTimeWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenFeatureOnTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToogleCompletedIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToogleCompletedIncidents",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToogleCompletedIncidents_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToogleCompletedIncidents_CreateExecutableObject);
                private static void _ToogleCompletedIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedIncidentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToogleCompletedIncidents_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToogleCompletedIncidents.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentOnTimeWindow_CreateExecutableObject);
                private static void _OpenIncidentOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentOnTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentOnTimeWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenIncidentOnTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    Comments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "Comments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._Comments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._Comments_CreateExecutableObject);
                private static void _Comments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Comments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.Comments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentCommentsWindow_CreateExecutableObject);
                private static void _OpenIncidentCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenIncidentCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToogleCompletedTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToogleCompletedTasks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToogleCompletedTasks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToogleCompletedTasks_CreateExecutableObject);
                private static void _ToogleCompletedTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedTasksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToogleCompletedTasks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToogleCompletedTasks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskCommentsWindow_CreateExecutableObject);
                private static void _OpenTaskCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenTaskCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatures",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatures_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatures_CreateExecutableObject);
                private static void _ToggleCompletedFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeaturesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedFeatures_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedFeatures.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureCommentsWindow_CreateExecutableObject);
                private static void _OpenFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenFeatureCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenFeatureReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenFeatureReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    FeatureReqsExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "FeatureReqsExportToExcel",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._FeatureReqsExportToExcel_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._FeatureReqsExportToExcel_CreateExecutableObject);
                private static void _FeatureReqsExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureReqsExportToExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureReqsExportToExcel_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.FeatureReqsExportToExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureIssuesTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssuesTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssuesTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssuesTimeTrackWindow_CreateExecutableObject);
                private static void _OpenFeatureIssuesTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssuesTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureIssuesTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenFeatureIssuesTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    FeatureIssuesExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "FeatureIssuesExportToExcel",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._FeatureIssuesExportToExcel_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._FeatureIssuesExportToExcel_CreateExecutableObject);
                private static void _FeatureIssuesExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesExportToExcelCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureIssuesExportToExcel_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.FeatureIssuesExportToExcel.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureCommentsWindow_CreateExecutableObject);
                private static void _SaveFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveFeatureCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureComments_CreateExecutableObject);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureComments_CreateExecutableObject);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentComments_CreateExecutableObject);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentComments_CreateExecutableObject);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskComments_CreateExecutableObject);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskComments_CreateExecutableObject);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskComments_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureReqTimeTracks_CreateExecutableObject);
                private static void _SaveFeatureReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveFeatureReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureReqTimeTracks_CreateExecutableObject);
                private static void _CancelFeatureReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelFeatureReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentReqTimeTracks_CreateExecutableObject);
                private static void _SaveIncidentReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveIncidentReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentReqTimeTracks_CreateExecutableObject);
                private static void _CancelIncidentReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelIncidentReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskReqTimeTracks_CreateExecutableObject);
                private static void _SaveTaskReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveTaskReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskReqTimeTracks_CreateExecutableObject);
                private static void _CancelTaskReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskReqTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskReqTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelTaskReqTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveFeatureIssueTimeTracks_CreateExecutableObject);
                private static void _SaveFeatureIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveFeatureIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelFeatureIssueTimeTracks_CreateExecutableObject);
                private static void _CancelFeatureIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelFeatureIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveIncidentIssueTimeTracks_CreateExecutableObject);
                private static void _SaveIncidentIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveIncidentIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelIncidentIssueTimeTracks_CreateExecutableObject);
                private static void _CancelIncidentIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelIncidentIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._SaveTaskIssueTimeTracks_CreateExecutableObject);
                private static void _SaveTaskIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.SaveTaskIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._CancelTaskIssueTimeTracks_CreateExecutableObject);
                private static void _CancelTaskIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskIssueTimeTracksCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskIssueTimeTracks_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.CancelTaskIssueTimeTracks.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenIncidentReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenIncidentReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenTaskReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenTaskReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenFeatureIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenFeatureIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenIncidentIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenIncidentIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenIncidentIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._OpenTaskIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenTaskIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.OpenTaskIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedRequirements",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedRequirements_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedRequirements_CreateExecutableObject);
                private static void _ToggleCompletedRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedRequirementsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedRequirements_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedRequirements.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedReqIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedReqIssues",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedReqIssues_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedReqIssues_CreateExecutableObject);
                private static void _ToggleCompletedReqIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedReqIssuesCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedReqIssues_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedReqIssues.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatureRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatureRequirements",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatureRequirements_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatureRequirements_CreateExecutableObject);
                private static void _ToggleCompletedFeatureRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeatureRequirementsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedFeatureRequirements_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedFeatureRequirements.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatureIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatureIncidents",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatureIncidents_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedFeatureIncidents_CreateExecutableObject);
                private static void _ToggleCompletedFeatureIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeatureIncidentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedFeatureIncidents_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedFeatureIncidents.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    MethodToggleCompletedFeatureIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "MethodToggleCompletedFeatureIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._MethodToggleCompletedFeatureIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._MethodToggleCompletedFeatureIssue_CreateExecutableObject);
                private static void _MethodToggleCompletedFeatureIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodToggleCompletedFeatureIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _MethodToggleCompletedFeatureIssue_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.MethodToggleCompletedFeatureIssue.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedIncidentRequirement = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedIncidentRequirement",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedIncidentRequirement_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedIncidentRequirement_CreateExecutableObject);
                private static void _ToggleCompletedIncidentRequirement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedIncidentRequirementCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedIncidentRequirement_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedIncidentRequirement.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedIncidentIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedIncidentIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedIncidentIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedIncidentIssue_CreateExecutableObject);
                private static void _ToggleCompletedIncidentIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedIncidentIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedIncidentIssue_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedIncidentIssue.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedTaskRequirement = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedTaskRequirement",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedTaskRequirement_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedTaskRequirement_CreateExecutableObject);
                private static void _ToggleCompletedTaskRequirement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedTaskRequirementCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedTaskRequirement_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedTaskRequirement.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedTaskIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedTaskIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedTaskIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ToggleCompletedTaskIssue_CreateExecutableObject);
                private static void _ToggleCompletedTaskIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedTaskIssueCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ToggleCompletedTaskIssue_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ToggleCompletedTaskIssue.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ProjectFeaturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ProjectFeaturesAddAndEditNew",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ProjectFeaturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.CommandSetProperties._ProjectFeaturesAddAndEditNew_CreateExecutableObject);
                private static void _ProjectFeaturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeaturesAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ProjectFeaturesAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageMyAssignments.DetailsClass)d).Methods.ProjectFeaturesAddAndEditNew.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenOnTimeWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenOnTimeWindow_InvokeMethod);
                private static void _OpenOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenOnTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenOnTimeWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenOnTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenOnTimeWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenOnTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_InvokeMethod);
                private static void _OpenFeatureOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureOnTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureOnTimeWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureOnTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureOnTimeWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureOnTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToogleCompletedIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToogleCompletedIncidents",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedIncidents_InvokeMethod);
                private static void _ToogleCompletedIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedIncidentsMethod, sf);
                }
                private static global::System.Exception _ToogleCompletedIncidents_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToogleCompletedIncidents_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToogleCompletedIncidents_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToogleCompletedIncidents_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentOnTimeWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_InvokeMethod);
                private static void _OpenIncidentOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentOnTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentOnTimeWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentOnTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentOnTimeWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentOnTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    Comments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "Comments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._Comments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._Comments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._Comments_InvokeMethod);
                private static void _Comments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CommentsMethod, sf);
                }
                private static global::System.Exception _Comments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Comments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Comments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Comments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_InvokeMethod);
                private static void _OpenIncidentCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToogleCompletedTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToogleCompletedTasks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedTasks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedTasks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToogleCompletedTasks_InvokeMethod);
                private static void _ToogleCompletedTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToogleCompletedTasksMethod, sf);
                }
                private static global::System.Exception _ToogleCompletedTasks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToogleCompletedTasks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToogleCompletedTasks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToogleCompletedTasks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskCommentsWindow_InvokeMethod);
                private static void _OpenTaskCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskCommentsWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatures = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatures",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatures_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatures_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatures_InvokeMethod);
                private static void _ToggleCompletedFeatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeaturesMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedFeatures_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedFeatures_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedFeatures_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedFeatures_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_InvokeMethod);
                private static void _OpenFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_InvokeMethod);
                private static void _OpenFeatureReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    FeatureReqsExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "FeatureReqsExportToExcel",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureReqsExportToExcel_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureReqsExportToExcel_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureReqsExportToExcel_InvokeMethod);
                private static void _FeatureReqsExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureReqsExportToExcelMethod, sf);
                }
                private static global::System.Exception _FeatureReqsExportToExcel_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureReqsExportToExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureReqsExportToExcel_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureReqsExportToExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureIssuesTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssuesTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssuesTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssuesTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssuesTimeTrackWindow_InvokeMethod);
                private static void _OpenFeatureIssuesTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssuesTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureIssuesTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureIssuesTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureIssuesTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureIssuesTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    FeatureIssuesExportToExcel = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "FeatureIssuesExportToExcel",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureIssuesExportToExcel_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureIssuesExportToExcel_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._FeatureIssuesExportToExcel_InvokeMethod);
                private static void _FeatureIssuesExportToExcel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesExportToExcelMethod, sf);
                }
                private static global::System.Exception _FeatureIssuesExportToExcel_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureIssuesExportToExcel_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureIssuesExportToExcel_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureIssuesExportToExcel_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureCommentsWindow_InvokeMethod);
                private static void _SaveFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsWindowMethod, sf);
                }
                private static global::System.Exception _SaveFeatureCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_InvokeMethod);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _SaveFeatureComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_InvokeMethod);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _CancelFeatureComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_InvokeMethod);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _SaveIncidentComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_InvokeMethod);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _CancelIncidentComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_InvokeMethod);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsMethod, sf);
                }
                private static global::System.Exception _SaveTaskComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_InvokeMethod);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsMethod, sf);
                }
                private static global::System.Exception _CancelTaskComments_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskComments_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureReqTimeTracks_InvokeMethod);
                private static void _SaveFeatureReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveFeatureReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureReqTimeTracks_InvokeMethod);
                private static void _CancelFeatureReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelFeatureReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentReqTimeTracks_InvokeMethod);
                private static void _SaveIncidentReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveIncidentReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentReqTimeTracks_InvokeMethod);
                private static void _CancelIncidentReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelIncidentReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskReqTimeTracks_InvokeMethod);
                private static void _SaveTaskReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveTaskReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskReqTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskReqTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskReqTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskReqTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskReqTimeTracks_InvokeMethod);
                private static void _CancelTaskReqTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskReqTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelTaskReqTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskReqTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskReqTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskReqTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveFeatureIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveFeatureIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveFeatureIssueTimeTracks_InvokeMethod);
                private static void _SaveFeatureIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveFeatureIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelFeatureIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelFeatureIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelFeatureIssueTimeTracks_InvokeMethod);
                private static void _CancelFeatureIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelFeatureIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveIncidentIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveIncidentIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveIncidentIssueTimeTracks_InvokeMethod);
                private static void _SaveIncidentIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveIncidentIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelIncidentIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelIncidentIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelIncidentIssueTimeTracks_InvokeMethod);
                private static void _CancelIncidentIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelIncidentIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    SaveTaskIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "SaveTaskIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._SaveTaskIssueTimeTracks_InvokeMethod);
                private static void _SaveTaskIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _SaveTaskIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    CancelTaskIssueTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "CancelTaskIssueTimeTracks",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskIssueTimeTracks_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskIssueTimeTracks_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._CancelTaskIssueTimeTracks_InvokeMethod);
                private static void _CancelTaskIssueTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskIssueTimeTracksMethod, sf);
                }
                private static global::System.Exception _CancelTaskIssueTimeTracks_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskIssueTimeTracks_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskIssueTimeTracks_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskIssueTimeTracks_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_InvokeMethod);
                private static void _OpenIncidentReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_InvokeMethod);
                private static void _OpenTaskReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenFeatureIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenFeatureIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenIncidentIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenIncidentIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenIncidentIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    OpenTaskIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "OpenTaskIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenTaskIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedRequirements",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedRequirements_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedRequirements_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedRequirements_InvokeMethod);
                private static void _ToggleCompletedRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedRequirementsMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedRequirements_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedRequirements_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedRequirements_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedRequirements_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedReqIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedReqIssues",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedReqIssues_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedReqIssues_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedReqIssues_InvokeMethod);
                private static void _ToggleCompletedReqIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedReqIssuesMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedReqIssues_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedReqIssues_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedReqIssues_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedReqIssues_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatureRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatureRequirements",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureRequirements_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureRequirements_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureRequirements_InvokeMethod);
                private static void _ToggleCompletedFeatureRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeatureRequirementsMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedFeatureRequirements_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedFeatureRequirements_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedFeatureRequirements_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedFeatureRequirements_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedFeatureIncidents = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedFeatureIncidents",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureIncidents_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureIncidents_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedFeatureIncidents_InvokeMethod);
                private static void _ToggleCompletedFeatureIncidents_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedFeatureIncidentsMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedFeatureIncidents_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedFeatureIncidents_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedFeatureIncidents_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedFeatureIncidents_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    MethodToggleCompletedFeatureIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "MethodToggleCompletedFeatureIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._MethodToggleCompletedFeatureIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._MethodToggleCompletedFeatureIssue_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._MethodToggleCompletedFeatureIssue_InvokeMethod);
                private static void _MethodToggleCompletedFeatureIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodToggleCompletedFeatureIssueMethod, sf);
                }
                private static global::System.Exception _MethodToggleCompletedFeatureIssue_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.MethodToggleCompletedFeatureIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _MethodToggleCompletedFeatureIssue_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.MethodToggleCompletedFeatureIssue_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedIncidentRequirement = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedIncidentRequirement",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentRequirement_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentRequirement_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentRequirement_InvokeMethod);
                private static void _ToggleCompletedIncidentRequirement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedIncidentRequirementMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedIncidentRequirement_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedIncidentRequirement_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedIncidentRequirement_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedIncidentRequirement_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedIncidentIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedIncidentIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentIssue_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedIncidentIssue_InvokeMethod);
                private static void _ToggleCompletedIncidentIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedIncidentIssueMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedIncidentIssue_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedIncidentIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedIncidentIssue_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedIncidentIssue_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedTaskRequirement = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedTaskRequirement",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskRequirement_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskRequirement_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskRequirement_InvokeMethod);
                private static void _ToggleCompletedTaskRequirement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedTaskRequirementMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedTaskRequirement_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedTaskRequirement_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedTaskRequirement_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedTaskRequirement_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ToggleCompletedTaskIssue = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ToggleCompletedTaskIssue",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskIssue_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskIssue_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ToggleCompletedTaskIssue_InvokeMethod);
                private static void _ToggleCompletedTaskIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ToggleCompletedTaskIssueMethod, sf);
                }
                private static global::System.Exception _ToggleCompletedTaskIssue_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ToggleCompletedTaskIssue_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ToggleCompletedTaskIssue_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ToggleCompletedTaskIssue_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry
                    ProjectFeaturesAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Entry(
                        "ProjectFeaturesAddAndEditNew",
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ProjectFeaturesAddAndEditNew_Stub,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ProjectFeaturesAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ManageMyAssignments.DetailsClass.MethodSetProperties._ProjectFeaturesAddAndEditNew_InvokeMethod);
                private static void _ProjectFeaturesAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageMyAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageMyAssignments, global::LightSwitchApplication.ManageMyAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeaturesAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _ProjectFeaturesAddAndEditNew_CanInvoke(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ProjectFeaturesAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ProjectFeaturesAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ManageMyAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ProjectFeaturesAddAndEditNew_Execute();
                }

            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageDepartments
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageDepartments() : base("LightSwitchApplication:ManageDepartments")
        {
            global::LightSwitchApplication.ManageDepartments.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageDepartments CreateInstance()
        {
            return new global::LightSwitchApplication.ManageDepartments(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageDepartments_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void Departments_SelectionChanged();

        partial void Departments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Loaded(bool succeeded);

        partial void CountryFilter_Changed();

        partial void Employees_SelectionChanged();

        partial void Employees_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Loaded(bool succeeded);

        partial void Employees1_SelectionChanged();

        partial void Employees1_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees1_Loaded(bool succeeded);

        /// <summary>
        /// Gets the Departments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Department> Departments
        {
            get
            {
                return global::LightSwitchApplication.ManageDepartments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Departments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Country CountryFilter
        {
            get 
            {
                return global::LightSwitchApplication.ManageDepartments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.CountryFilter);
            }
            set
            {
                global::LightSwitchApplication.ManageDepartments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.CountryFilter, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryFilter_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees
        {
            get
            {
                return global::LightSwitchApplication.ManageDepartments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Employees);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Employees1 visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Employee> Employees1
        {
            get
            {
                return global::LightSwitchApplication.ManageDepartments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Employees1);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees1_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySet, global::LightSwitchApplication.ManageDepartments.DetailsClass.CommandSet, global::LightSwitchApplication.ManageDepartments.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Departments;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>.Entry
                __ManageDepartmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeCreated,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeActivated,
                    global::LightSwitchApplication.ManageDepartments.DetailsClass.__ManageDepartments_InvokeSaveErrorEvent);
            private static void __ManageDepartments_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageDepartments s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageDepartments_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageDepartments_InvokeSavingEvent(global::LightSwitchApplication.ManageDepartments s)
            {
                bool handled = false;
                s.ManageDepartments_Saving(ref handled);
                return handled;
            }
            private static void __ManageDepartments_InvokeSavedEvent(global::LightSwitchApplication.ManageDepartments s)
            {
                s.ManageDepartments_Saved();
            }
            private static bool __ManageDepartments_InvokeClosingEvent(global::LightSwitchApplication.ManageDepartments s)
            {
                bool cancel = false;
                s.ManageDepartments_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageDepartments_InvokeCreated(global::LightSwitchApplication.ManageDepartments s)
            {
                s.ManageDepartments_Created();
            }
            private static void __ManageDepartments_InvokeActivated(global::LightSwitchApplication.ManageDepartments s)
            {
                s.ManageDepartments_Activated();
            }
            private static bool __ManageDepartments_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageDepartments s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageDepartments_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageDepartments.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageDepartments.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DepartmentsQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    this.Screen.DataWorkspace.ApplicationData.Departments,
                    (d) => d.Number);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeesQuery()
            {
                if (this.Screen.Departments.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Departments.SelectedItem.Details.Properties.Employees).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable Employees1Query()
            {
                if (this.Screen.Departments.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Employee>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Departments.SelectedItem.Details.Properties.Employees1).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                            global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                                loader,
                                "Supervsr"),
                            "Country"),
                        "Dept"),
                    "DeptEmployee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department>.Data _Departments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country>.Data _CountryFilter;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employees1;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department> Departments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department>)base.GetItem(global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Departments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country> CountryFilter
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country>)base.GetItem(global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.CountryFilter);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee> Employees
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Employees);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee> Employees1
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>)base.GetItem(global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties.Employees1);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    Departments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "Departments",
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_Stub,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_Validate,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_CreateQuery,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_SelectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Departments_OnLoaded);
                private static void _Departments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageDepartments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.ManageDepartments.DetailsClass d, object sf)
                {
                    c(d, ref d._Departments, sf);
                }
                private static void _Departments_Validate(global::LightSwitchApplication.ManageDepartments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Departments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Departments_CreateQuery(global::LightSwitchApplication.ManageDepartments.DetailsClass d, object[] args)
                {
                    return d.DepartmentsQuery();
                }
                private static void _Departments_SelectionChanged(global::LightSwitchApplication.ManageDepartments s)
                {
                    s.Departments_SelectionChanged();
                }
                private static void _Departments_OnCollectionChanged(global::LightSwitchApplication.ManageDepartments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Departments_Changed(e);
                }
                private static void _Departments_OnLoaded(global::LightSwitchApplication.ManageDepartments s, bool succeeded)
                {
                    s.Departments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    CountryFilter = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "CountryFilter",
                        false,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._CountryFilter_Stub,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._CountryFilter_Validate,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._CountryFilter_OnValueChanged);
                private static void _CountryFilter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageDepartments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.ManageDepartments.DetailsClass d, object sf)
                {
                    c(d, ref d._CountryFilter, sf);
                }
                private static void _CountryFilter_Validate(global::LightSwitchApplication.ManageDepartments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.CountryFilter_Validate(r);
                }
                private static void _CountryFilter_OnValueChanged(global::LightSwitchApplication.ManageDepartments s)
                {
                    s.CountryFilter_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees",
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_Stub,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_Validate,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_CreateQuery,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_SelectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_OnCollectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees_OnLoaded);
                private static void _Employees_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageDepartments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ManageDepartments.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees, sf);
                }
                private static void _Employees_Validate(global::LightSwitchApplication.ManageDepartments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees_CreateQuery(global::LightSwitchApplication.ManageDepartments.DetailsClass d, object[] args)
                {
                    return d.EmployeesQuery();
                }
                private static void _Employees_SelectionChanged(global::LightSwitchApplication.ManageDepartments s)
                {
                    s.Employees_SelectionChanged();
                }
                private static void _Employees_OnCollectionChanged(global::LightSwitchApplication.ManageDepartments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees_Changed(e);
                }
                private static void _Employees_OnLoaded(global::LightSwitchApplication.ManageDepartments s, bool succeeded)
                {
                    s.Employees_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employees1 = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employees1",
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_Stub,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_Validate,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_CreateQuery,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_SelectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_OnCollectionChanged,
                        global::LightSwitchApplication.ManageDepartments.DetailsClass.PropertySetProperties._Employees1_OnLoaded);
                private static void _Employees1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageDepartments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageDepartments, global::LightSwitchApplication.ManageDepartments.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ManageDepartments.DetailsClass d, object sf)
                {
                    c(d, ref d._Employees1, sf);
                }
                private static void _Employees1_Validate(global::LightSwitchApplication.ManageDepartments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Employees1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Employees1_CreateQuery(global::LightSwitchApplication.ManageDepartments.DetailsClass d, object[] args)
                {
                    return d.Employees1Query();
                }
                private static void _Employees1_SelectionChanged(global::LightSwitchApplication.ManageDepartments s)
                {
                    s.Employees1_SelectionChanged();
                }
                private static void _Employees1_OnCollectionChanged(global::LightSwitchApplication.ManageDepartments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Employees1_Changed(e);
                }
                private static void _Employees1_OnLoaded(global::LightSwitchApplication.ManageDepartments s, bool succeeded)
                {
                    s.Employees1_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageLevels
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageLevels() : base("LightSwitchApplication:ManageLevels")
        {
            global::LightSwitchApplication.ManageLevels.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageLevels CreateInstance()
        {
            return new global::LightSwitchApplication.ManageLevels(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageLevels_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void EmployeeLevels_SelectionChanged();

        partial void EmployeeLevels_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Loaded(bool succeeded);

        /// <summary>
        /// Gets the EmployeeLevels visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.EmployeeLevel> EmployeeLevels
        {
            get
            {
                return global::LightSwitchApplication.ManageLevels.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties.EmployeeLevels);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySet, global::LightSwitchApplication.ManageLevels.DetailsClass.CommandSet, global::LightSwitchApplication.ManageLevels.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties.EmployeeLevels;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>.Entry
                __ManageLevelsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeCreated,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeActivated,
                    global::LightSwitchApplication.ManageLevels.DetailsClass.__ManageLevels_InvokeSaveErrorEvent);
            private static void __ManageLevels_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageLevels s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageLevels_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageLevels_InvokeSavingEvent(global::LightSwitchApplication.ManageLevels s)
            {
                bool handled = false;
                s.ManageLevels_Saving(ref handled);
                return handled;
            }
            private static void __ManageLevels_InvokeSavedEvent(global::LightSwitchApplication.ManageLevels s)
            {
                s.ManageLevels_Saved();
            }
            private static bool __ManageLevels_InvokeClosingEvent(global::LightSwitchApplication.ManageLevels s)
            {
                bool cancel = false;
                s.ManageLevels_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageLevels_InvokeCreated(global::LightSwitchApplication.ManageLevels s)
            {
                s.ManageLevels_Created();
            }
            private static void __ManageLevels_InvokeActivated(global::LightSwitchApplication.ManageLevels s)
            {
                s.ManageLevels_Activated();
            }
            private static bool __ManageLevels_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageLevels s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageLevels_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageLevels.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageLevels.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable EmployeeLevelsQuery()
            {
                return this.Screen.DataWorkspace.ApplicationData.EmployeeLevels;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Data _EmployeeLevels;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel> EmployeeLevels
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel>)base.GetItem(global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties.EmployeeLevels);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Entry
                    EmployeeLevels = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Entry(
                        "EmployeeLevels",
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_Stub,
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_Validate,
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_CreateQuery,
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_SelectionChanged,
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_OnCollectionChanged,
                        global::LightSwitchApplication.ManageLevels.DetailsClass.PropertySetProperties._EmployeeLevels_OnLoaded);
                private static void _EmployeeLevels_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageLevels.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageLevels, global::LightSwitchApplication.ManageLevels.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Data> c, global::LightSwitchApplication.ManageLevels.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeLevels, sf);
                }
                private static void _EmployeeLevels_Validate(global::LightSwitchApplication.ManageLevels s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.EmployeeLevels_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _EmployeeLevels_CreateQuery(global::LightSwitchApplication.ManageLevels.DetailsClass d, object[] args)
                {
                    return d.EmployeeLevelsQuery();
                }
                private static void _EmployeeLevels_SelectionChanged(global::LightSwitchApplication.ManageLevels s)
                {
                    s.EmployeeLevels_SelectionChanged();
                }
                private static void _EmployeeLevels_OnCollectionChanged(global::LightSwitchApplication.ManageLevels s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.EmployeeLevels_Changed(e);
                }
                private static void _EmployeeLevels_OnLoaded(global::LightSwitchApplication.ManageLevels s, bool succeeded)
                {
                    s.EmployeeLevels_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewHeaderEdit
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ReviewHeaderEdit() : base("LightSwitchApplication:ReviewHeaderEdit")
        {
            global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ReviewHeaderEdit CreateInstance()
        {
            return new global::LightSwitchApplication.ReviewHeaderEdit(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderEdit_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void ReviewHeaders_SelectionChanged();

        partial void ReviewHeaders_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Loaded(bool succeeded);

        /// <summary>
        /// Gets the ReviewHeaders visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ReviewHeader> ReviewHeaders
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties.ReviewHeaders);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySet, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.CommandSet, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties.ReviewHeaders;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>.Entry
                __ReviewHeaderEditEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeSavingEvent,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeSavedEvent,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeClosingEvent,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeCreated,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeActivated,
                    global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.__ReviewHeaderEdit_InvokeSaveErrorEvent);
            private static void __ReviewHeaderEdit_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ReviewHeaderEdit s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ReviewHeaderEdit_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ReviewHeaderEdit_InvokeSavingEvent(global::LightSwitchApplication.ReviewHeaderEdit s)
            {
                bool handled = false;
                s.ReviewHeaderEdit_Saving(ref handled);
                return handled;
            }
            private static void __ReviewHeaderEdit_InvokeSavedEvent(global::LightSwitchApplication.ReviewHeaderEdit s)
            {
                s.ReviewHeaderEdit_Saved();
            }
            private static bool __ReviewHeaderEdit_InvokeClosingEvent(global::LightSwitchApplication.ReviewHeaderEdit s)
            {
                bool cancel = false;
                s.ReviewHeaderEdit_Closing(ref cancel);
                return cancel;
            }
            private static void __ReviewHeaderEdit_InvokeCreated(global::LightSwitchApplication.ReviewHeaderEdit s)
            {
                s.ReviewHeaderEdit_Created();
            }
            private static void __ReviewHeaderEdit_InvokeActivated(global::LightSwitchApplication.ReviewHeaderEdit s)
            {
                s.ReviewHeaderEdit_Activated();
            }
            private static bool __ReviewHeaderEdit_InvokeSaveErrorEvent(global::LightSwitchApplication.ReviewHeaderEdit s, global::System.Exception ex)
            {
                bool handled = false;
                s.ReviewHeaderEdit_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ReviewHeadersQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                        this.Screen.DataWorkspace.ApplicationData.ReviewHeaders,
                        "Employee"),
                    "SupervisorEmployee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeaders;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeaders
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader>)base.GetItem(global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties.ReviewHeaders);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeaders = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeaders",
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_Stub,
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_Validate,
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_CreateQuery,
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_SelectionChanged,
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_OnCollectionChanged,
                        global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass.PropertySetProperties._ReviewHeaders_OnLoaded);
                private static void _ReviewHeaders_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ReviewHeaderEdit, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaders, sf);
                }
                private static void _ReviewHeaders_Validate(global::LightSwitchApplication.ReviewHeaderEdit s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ReviewHeaders_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ReviewHeaders_CreateQuery(global::LightSwitchApplication.ReviewHeaderEdit.DetailsClass d, object[] args)
                {
                    return d.ReviewHeadersQuery();
                }
                private static void _ReviewHeaders_SelectionChanged(global::LightSwitchApplication.ReviewHeaderEdit s)
                {
                    s.ReviewHeaders_SelectionChanged();
                }
                private static void _ReviewHeaders_OnCollectionChanged(global::LightSwitchApplication.ReviewHeaderEdit s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ReviewHeaders_Changed(e);
                }
                private static void _ReviewHeaders_OnLoaded(global::LightSwitchApplication.ReviewHeaderEdit s, bool succeeded)
                {
                    s.ReviewHeaders_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewSummaryReport1
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ReviewSummaryReport1() : base("LightSwitchApplication:ReviewSummaryReport1")
        {
            global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ReviewSummaryReport1 CreateInstance()
        {
            return new global::LightSwitchApplication.ReviewSummaryReport1(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReport1_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.PropertySet, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.CommandSet, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>.Entry
                __ReviewSummaryReport1Entry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeSavingEvent,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeSavedEvent,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeClosingEvent,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeCreated,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeActivated,
                    global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.__ReviewSummaryReport1_InvokeSaveErrorEvent);
            private static void __ReviewSummaryReport1_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ReviewSummaryReport1 s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ReviewSummaryReport1_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ReviewSummaryReport1_InvokeSavingEvent(global::LightSwitchApplication.ReviewSummaryReport1 s)
            {
                bool handled = false;
                s.ReviewSummaryReport1_Saving(ref handled);
                return handled;
            }
            private static void __ReviewSummaryReport1_InvokeSavedEvent(global::LightSwitchApplication.ReviewSummaryReport1 s)
            {
                s.ReviewSummaryReport1_Saved();
            }
            private static bool __ReviewSummaryReport1_InvokeClosingEvent(global::LightSwitchApplication.ReviewSummaryReport1 s)
            {
                bool cancel = false;
                s.ReviewSummaryReport1_Closing(ref cancel);
                return cancel;
            }
            private static void __ReviewSummaryReport1_InvokeCreated(global::LightSwitchApplication.ReviewSummaryReport1 s)
            {
                s.ReviewSummaryReport1_Created();
            }
            private static void __ReviewSummaryReport1_InvokeActivated(global::LightSwitchApplication.ReviewSummaryReport1 s)
            {
                s.ReviewSummaryReport1_Activated();
            }
            private static bool __ReviewSummaryReport1_InvokeSaveErrorEvent(global::LightSwitchApplication.ReviewSummaryReport1 s, global::System.Exception ex)
            {
                bool handled = false;
                s.ReviewSummaryReport1_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ReviewSummaryReport1, global::LightSwitchApplication.ReviewSummaryReport1.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class AnnualReviewStatus1
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private AnnualReviewStatus1() : base("LightSwitchApplication:AnnualReviewStatus1")
        {
            global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static AnnualReviewStatus1 CreateInstance()
        {
            return new global::LightSwitchApplication.AnnualReviewStatus1(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void AnnualReviewStatus_SelectionChanged();

        partial void AnnualReviewStatus_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Loaded(bool succeeded);

        partial void AnnualReviewStatus1a_SelectionChanged();

        partial void AnnualReviewStatus1a_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1a_Loaded(bool succeeded);

        /// <summary>
        /// Gets the AnnualReviewStatus visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus
        {
            get
            {
                return global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.GetValue(this, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties.AnnualReviewStatus);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the AnnualReviewStatus1a visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus1a
        {
            get
            {
                return global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.GetValue(this, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties.AnnualReviewStatus1a);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus1a_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySet, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.CommandSet, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties.AnnualReviewStatus;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>.Entry
                __AnnualReviewStatus1Entry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>.Entry(
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeSavingEvent,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeSavedEvent,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeClosingEvent,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeCreated,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeActivated,
                    global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.__AnnualReviewStatus1_InvokeSaveErrorEvent);
            private static void __AnnualReviewStatus1_InvokeInitializeDataWorkspace(global::LightSwitchApplication.AnnualReviewStatus1 s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.AnnualReviewStatus1_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __AnnualReviewStatus1_InvokeSavingEvent(global::LightSwitchApplication.AnnualReviewStatus1 s)
            {
                bool handled = false;
                s.AnnualReviewStatus1_Saving(ref handled);
                return handled;
            }
            private static void __AnnualReviewStatus1_InvokeSavedEvent(global::LightSwitchApplication.AnnualReviewStatus1 s)
            {
                s.AnnualReviewStatus1_Saved();
            }
            private static bool __AnnualReviewStatus1_InvokeClosingEvent(global::LightSwitchApplication.AnnualReviewStatus1 s)
            {
                bool cancel = false;
                s.AnnualReviewStatus1_Closing(ref cancel);
                return cancel;
            }
            private static void __AnnualReviewStatus1_InvokeCreated(global::LightSwitchApplication.AnnualReviewStatus1 s)
            {
                s.AnnualReviewStatus1_Created();
            }
            private static void __AnnualReviewStatus1_InvokeActivated(global::LightSwitchApplication.AnnualReviewStatus1 s)
            {
                s.AnnualReviewStatus1_Activated();
            }
            private static bool __AnnualReviewStatus1_InvokeSaveErrorEvent(global::LightSwitchApplication.AnnualReviewStatus1 s, global::System.Exception ex)
            {
                bool handled = false;
                s.AnnualReviewStatus1_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AnnualReviewStatusQuery()
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.ThenBy(
                        global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                            this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.AnnualReviewStatus,
                            (a) => a.Department),
                        (a) => a.LastName),
                    (a) => a.FirstName);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable AnnualReviewStatus1aQuery()
            {
                return this.Screen.DataWorkspace.ProjectStatus_RIA_ServiceData.AnnualReviewStatus;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data _AnnualReviewStatus;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data _AnnualReviewStatus1a;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties.AnnualReviewStatus);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu> AnnualReviewStatus1a
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>)base.GetItem(global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties.AnnualReviewStatus1a);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass>
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry
                    AnnualReviewStatus = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry(
                        "AnnualReviewStatus",
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_Validate,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_CreateQuery,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_SelectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_OnCollectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus_OnLoaded);
                private static void _AnnualReviewStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data> c, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnualReviewStatus, sf);
                }
                private static void _AnnualReviewStatus_Validate(global::LightSwitchApplication.AnnualReviewStatus1 s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AnnualReviewStatus_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AnnualReviewStatus_CreateQuery(global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass d, object[] args)
                {
                    return d.AnnualReviewStatusQuery();
                }
                private static void _AnnualReviewStatus_SelectionChanged(global::LightSwitchApplication.AnnualReviewStatus1 s)
                {
                    s.AnnualReviewStatus_SelectionChanged();
                }
                private static void _AnnualReviewStatus_OnCollectionChanged(global::LightSwitchApplication.AnnualReviewStatus1 s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AnnualReviewStatus_Changed(e);
                }
                private static void _AnnualReviewStatus_OnLoaded(global::LightSwitchApplication.AnnualReviewStatus1 s, bool succeeded)
                {
                    s.AnnualReviewStatus_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry
                    AnnualReviewStatus1a = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Entry(
                        "AnnualReviewStatus1a",
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_Stub,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_Validate,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_CreateQuery,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_SelectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_OnCollectionChanged,
                        global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass.PropertySetProperties._AnnualReviewStatus1a_OnLoaded);
                private static void _AnnualReviewStatus1a_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.AnnualReviewStatus1, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass, global::LightSwitchApplication.AnnualReviewStatu>.Data> c, global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnualReviewStatus1a, sf);
                }
                private static void _AnnualReviewStatus1a_Validate(global::LightSwitchApplication.AnnualReviewStatus1 s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.AnnualReviewStatus1a_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _AnnualReviewStatus1a_CreateQuery(global::LightSwitchApplication.AnnualReviewStatus1.DetailsClass d, object[] args)
                {
                    return d.AnnualReviewStatus1aQuery();
                }
                private static void _AnnualReviewStatus1a_SelectionChanged(global::LightSwitchApplication.AnnualReviewStatus1 s)
                {
                    s.AnnualReviewStatus1a_SelectionChanged();
                }
                private static void _AnnualReviewStatus1a_OnCollectionChanged(global::LightSwitchApplication.AnnualReviewStatus1 s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.AnnualReviewStatus1a_Changed(e);
                }
                private static void _AnnualReviewStatus1a_OnLoaded(global::LightSwitchApplication.AnnualReviewStatus1 s, bool succeeded)
                {
                    s.AnnualReviewStatus1a_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {
            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {
            }
        }
    }
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ManageProjectAssignments
        : global::Microsoft.LightSwitch.Framework.Client.ScreenObject<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private ManageProjectAssignments() : base("LightSwitchApplication:ManageProjectAssignments")
        {
            global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.Initialize(this);
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public static ManageProjectAssignments CreateInstance()
        {
            return new global::LightSwitchApplication.ManageProjectAssignments(
            );
        }

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_InitializeDataWorkspace(global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_Activated();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_Saving(ref bool handled);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_Saved();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_Closing(ref bool cancel);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ManageProjectAssignments_SaveError(global::System.Exception exception, ref bool handled);
     
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)((global::Microsoft.LightSwitch.Details.Client.IScreenDetails)this.Details).DataWorkspace;
            }
        }
        
        #endregion
 
        partial void DODProjects_SelectionChanged();

        partial void DODProjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjects_Loaded(bool succeeded);

        partial void ProjectSearchTerm_Changed();

        partial void Features_SelectionChanged();

        partial void Features_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Features_Loaded(bool succeeded);

        partial void FeaturesSearchTerm_Changed();

        partial void FeaturesRequirements_SelectionChanged();

        partial void FeaturesRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesRequirements_Loaded(bool succeeded);

        partial void FeaturesRequirementsSearchTerm_Changed();

        partial void FeaturesIssues_SelectionChanged();

        partial void FeaturesIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesIssues_Loaded(bool succeeded);

        partial void FeaturesIssuesSearchTerm_Changed();

        partial void FeaturesTDDObjects_SelectionChanged();

        partial void FeaturesTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesTDDObjects_Loaded(bool succeeded);

        partial void FeaturesTDDObjectsSearchTerm_Changed();

        partial void FeaturesTDDDetails_SelectionChanged();

        partial void FeaturesTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesTDDDetails_Loaded(bool succeeded);

        partial void ProjectIncidentsItem_SelectionChanged();

        partial void ProjectIncidentsItem_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentsItem_Loaded(bool succeeded);

        partial void IncidentsSearchTerm_Changed();

        partial void IncidentsRequirements_SelectionChanged();

        partial void IncidentsRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsRequirements_Loaded(bool succeeded);

        partial void IncidentRequirementsSearchTerm_Changed();

        partial void IncidentsIssues_SelectionChanged();

        partial void IncidentsIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsIssues_Loaded(bool succeeded);

        partial void IncidentsIssuesSearchTerm_Changed();

        partial void IncidentsTDDObjects_SelectionChanged();

        partial void IncidentsTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsTDDObjects_Loaded(bool succeeded);

        partial void IncidentsTDDObjectsSearchTerm_Changed();

        partial void IncidentsTDDDetails_SelectionChanged();

        partial void IncidentsTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsTDDDetails_Loaded(bool succeeded);

        partial void ProjectTasks_SelectionChanged();

        partial void ProjectTasks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Loaded(bool succeeded);

        partial void TasksSearchTerm_Changed();

        partial void TasksRequirements_SelectionChanged();

        partial void TasksRequirements_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksRequirements_Loaded(bool succeeded);

        partial void TasksRequirementsSearchTerm_Changed();

        partial void TasksIssues_SelectionChanged();

        partial void TasksIssues_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksIssues_Loaded(bool succeeded);

        partial void TasksIssuesSearchTerm_Changed();

        partial void TasksTDDObjects_SelectionChanged();

        partial void TasksTDDObjects_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksTDDObjects_Loaded(bool succeeded);

        partial void TasksTDDObjectsSearchTerm_Changed();

        partial void TasksTDDDetails_SelectionChanged();

        partial void TasksTDDDetails_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksTDDDetails_Loaded(bool succeeded);

        partial void FeatureRequirementsTimeTracks_SelectionChanged();

        partial void FeatureRequirementsTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureRequirementsTimeTracks_Loaded(bool succeeded);

        partial void FeaturesIssuesTimeTracks_SelectionChanged();

        partial void FeaturesIssuesTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesIssuesTimeTracks_Loaded(bool succeeded);

        partial void IncidentsRequirementsTimeTracks_SelectionChanged();

        partial void IncidentsRequirementsTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsRequirementsTimeTracks_Loaded(bool succeeded);

        partial void IncidentsIssuesTimeTracks_SelectionChanged();

        partial void IncidentsIssuesTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsIssuesTimeTracks_Loaded(bool succeeded);

        partial void TasksRequirementsTimeTracks_SelectionChanged();

        partial void TasksRequirementsTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksRequirementsTimeTracks_Loaded(bool succeeded);

        partial void TasksIssuesTimeTracks_SelectionChanged();

        partial void TasksIssuesTimeTracks_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksIssuesTimeTracks_Loaded(bool succeeded);

        partial void ProjectFeatureComments_SelectionChanged();

        partial void ProjectFeatureComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Loaded(bool succeeded);

        partial void ProjectIncidentComments_SelectionChanged();

        partial void ProjectIncidentComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Loaded(bool succeeded);

        partial void ProjectTaskComments_SelectionChanged();

        partial void ProjectTaskComments_Changed(global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e);

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Loaded(bool succeeded);

        /// <summary>
        /// Gets the DODProjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Project> DODProjects
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.DODProjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the Features visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeature> Features
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.Features);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Features_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeaturesRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> FeaturesRequirements
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesRequirementsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesRequirementsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesRequirementsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesRequirementsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeaturesIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> FeaturesIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesIssuesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssuesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssuesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesIssuesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeaturesTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> FeaturesTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeaturesTDDObjectsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDObjectsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDObjectsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesTDDObjectsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeaturesTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> FeaturesTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidentsItem visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncident> ProjectIncidentsItem
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectIncidentsItem);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentsItem_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> IncidentsRequirements
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentRequirementsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentRequirementsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentRequirementsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentRequirementsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> IncidentsIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentsIssuesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssuesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssuesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsIssuesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> IncidentsTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentsTDDObjectsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDObjectsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDObjectsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsTDDObjectsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> IncidentsTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTasks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTask> ProjectTasks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectTasks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksRequirements visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Requirement> TasksRequirements
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirements);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksRequirements_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksRequirementsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirementsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirementsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksRequirementsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksIssues visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.Issue> TasksIssues
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssues);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksIssues_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksIssuesSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssuesSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssuesSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksIssuesSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksTDDObjects visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDObject> TasksTDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDObjects);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksTDDObjects_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TasksTDDObjectsSearchTerm
        {
            get 
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDObjectsSearchTerm);
            }
            set
            {
                global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.SetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDObjectsSearchTerm, value);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksTDDObjectsSearchTerm_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksTDDDetails visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TDDDetail> TasksTDDDetails
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDDetails);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksTDDDetails_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeatureRequirementsTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> FeatureRequirementsTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeatureRequirementsTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureRequirementsTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the FeaturesIssuesTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> FeaturesIssuesTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssuesTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeaturesIssuesTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsRequirementsTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> IncidentsRequirementsTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsRequirementsTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsRequirementsTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the IncidentsIssuesTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> IncidentsIssuesTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssuesTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentsIssuesTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksRequirementsTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> TasksRequirementsTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirementsTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksRequirementsTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the TasksIssuesTimeTracks visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.TimeTrack> TasksIssuesTimeTracks
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssuesTimeTracks);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TasksIssuesTimeTracks_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectFeatureComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectFeatureComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectIncidentComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectIncidentComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Gets the ProjectTaskComments visual collection. The collection contains all records currently shown on the respective list or grid control.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.Client.VisualCollection<global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
        {
            get
            {
                return global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.GetValue(this, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectTaskComments);
            }
        }
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Validate(global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder results);
 
        /// <summary>
        /// Calls the Method screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Method()
        {
            this.Details.Methods.Method.CreateInvocation().Execute();
        }
        partial void Method_CanExecute(ref bool result);
        partial void Method_Execute();

        /// <summary>
        /// Calls the FeatureRequirementTimeTrackingOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureRequirementTimeTrackingOK()
        {
            this.Details.Methods.FeatureRequirementTimeTrackingOK.CreateInvocation().Execute();
        }
        partial void FeatureRequirementTimeTrackingOK_CanExecute(ref bool result);
        partial void FeatureRequirementTimeTrackingOK_Execute();

        /// <summary>
        /// Calls the FeatureRequirementTimeTrackingCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureRequirementTimeTrackingCANCEL()
        {
            this.Details.Methods.FeatureRequirementTimeTrackingCANCEL.CreateInvocation().Execute();
        }
        partial void FeatureRequirementTimeTrackingCANCEL_CanExecute(ref bool result);
        partial void FeatureRequirementTimeTrackingCANCEL_Execute();

        /// <summary>
        /// Calls the FeatureIssuesTimeTrackingOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureIssuesTimeTrackingOK()
        {
            this.Details.Methods.FeatureIssuesTimeTrackingOK.CreateInvocation().Execute();
        }
        partial void FeatureIssuesTimeTrackingOK_CanExecute(ref bool result);
        partial void FeatureIssuesTimeTrackingOK_Execute();

        /// <summary>
        /// Calls the FeatureIssuesTimeTrackingCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void FeatureIssuesTimeTrackingCANCEL()
        {
            this.Details.Methods.FeatureIssuesTimeTrackingCANCEL.CreateInvocation().Execute();
        }
        partial void FeatureIssuesTimeTrackingCANCEL_CanExecute(ref bool result);
        partial void FeatureIssuesTimeTrackingCANCEL_Execute();

        /// <summary>
        /// Calls the IncidentsRequirementTimeTracksOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void IncidentsRequirementTimeTracksOK()
        {
            this.Details.Methods.IncidentsRequirementTimeTracksOK.CreateInvocation().Execute();
        }
        partial void IncidentsRequirementTimeTracksOK_CanExecute(ref bool result);
        partial void IncidentsRequirementTimeTracksOK_Execute();

        /// <summary>
        /// Calls the IncidentsRequirementsTimeTracksCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void IncidentsRequirementsTimeTracksCANCEL()
        {
            this.Details.Methods.IncidentsRequirementsTimeTracksCANCEL.CreateInvocation().Execute();
        }
        partial void IncidentsRequirementsTimeTracksCANCEL_CanExecute(ref bool result);
        partial void IncidentsRequirementsTimeTracksCANCEL_Execute();

        /// <summary>
        /// Calls the IncidentIssueTimeTrackingOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void IncidentIssueTimeTrackingOK()
        {
            this.Details.Methods.IncidentIssueTimeTrackingOK.CreateInvocation().Execute();
        }
        partial void IncidentIssueTimeTrackingOK_CanExecute(ref bool result);
        partial void IncidentIssueTimeTrackingOK_Execute();

        /// <summary>
        /// Calls the IncidentIssueTimeTrackingCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void IncidentIssueTimeTrackingCANCEL()
        {
            this.Details.Methods.IncidentIssueTimeTrackingCANCEL.CreateInvocation().Execute();
        }
        partial void IncidentIssueTimeTrackingCANCEL_CanExecute(ref bool result);
        partial void IncidentIssueTimeTrackingCANCEL_Execute();

        /// <summary>
        /// Calls the TaskRequirementTimeTrackingOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TaskRequirementTimeTrackingOK()
        {
            this.Details.Methods.TaskRequirementTimeTrackingOK.CreateInvocation().Execute();
        }
        partial void TaskRequirementTimeTrackingOK_CanExecute(ref bool result);
        partial void TaskRequirementTimeTrackingOK_Execute();

        /// <summary>
        /// Calls the TaskRequirementTimeTrackingCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TaskRequirementTimeTrackingCANCEL()
        {
            this.Details.Methods.TaskRequirementTimeTrackingCANCEL.CreateInvocation().Execute();
        }
        partial void TaskRequirementTimeTrackingCANCEL_CanExecute(ref bool result);
        partial void TaskRequirementTimeTrackingCANCEL_Execute();

        /// <summary>
        /// Calls the TaskIssueTimeTrackingOK screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TaskIssueTimeTrackingOK()
        {
            this.Details.Methods.TaskIssueTimeTrackingOK.CreateInvocation().Execute();
        }
        partial void TaskIssueTimeTrackingOK_CanExecute(ref bool result);
        partial void TaskIssueTimeTrackingOK_Execute();

        /// <summary>
        /// Calls the TaskIssueTimeTrackingCANCEL screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TaskIssueTimeTrackingCANCEL()
        {
            this.Details.Methods.TaskIssueTimeTrackingCANCEL.CreateInvocation().Execute();
        }
        partial void TaskIssueTimeTrackingCANCEL_CanExecute(ref bool result);
        partial void TaskIssueTimeTrackingCANCEL_Execute();

        /// <summary>
        /// Calls the TasksIssuesTimeTracksAddAndEditNew screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void TasksIssuesTimeTracksAddAndEditNew()
        {
            this.Details.Methods.TasksIssuesTimeTracksAddAndEditNew.CreateInvocation().Execute();
        }
        partial void TasksIssuesTimeTracksAddAndEditNew_CanExecute(ref bool result);
        partial void TasksIssuesTimeTracksAddAndEditNew_Execute();

        /// <summary>
        /// Calls the OpenFeatureCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureCommentsWindow()
        {
            this.Details.Methods.OpenFeatureCommentsWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureCommentsWindow_CanExecute(ref bool result);
        partial void OpenFeatureCommentsWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentCommentsWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentCommentsWindow()
        {
            this.Details.Methods.OpenIncidentCommentsWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentCommentsWindow_CanExecute(ref bool result);
        partial void OpenIncidentCommentsWindow_Execute();

        /// <summary>
        /// Calls the ProjectTasksComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void ProjectTasksComments()
        {
            this.Details.Methods.ProjectTasksComments.CreateInvocation().Execute();
        }
        partial void ProjectTasksComments_CanExecute(ref bool result);
        partial void ProjectTasksComments_Execute();

        /// <summary>
        /// Calls the OpenFeatureReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureReqTimeTrackWindow()
        {
            this.Details.Methods.OpenFeatureReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenFeatureReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenFeatureIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenFeatureIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenFeatureIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentReqTimeTrackWindow()
        {
            this.Details.Methods.OpenIncidentReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenIncidentReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenIncidentIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenIncidentIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenTaskReqTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskReqTimeTrackWindow()
        {
            this.Details.Methods.OpenTaskReqTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskReqTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenTaskReqTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the OpenTaskIssueTimeTrackWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenTaskIssueTimeTrackWindow()
        {
            this.Details.Methods.OpenTaskIssueTimeTrackWindow.CreateInvocation().Execute();
        }
        partial void OpenTaskIssueTimeTrackWindow_CanExecute(ref bool result);
        partial void OpenTaskIssueTimeTrackWindow_Execute();

        /// <summary>
        /// Calls the SaveFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveFeatureComments()
        {
            this.Details.Methods.SaveFeatureComments.CreateInvocation().Execute();
        }
        partial void SaveFeatureComments_CanExecute(ref bool result);
        partial void SaveFeatureComments_Execute();

        /// <summary>
        /// Calls the SaveIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveIncidentComments()
        {
            this.Details.Methods.SaveIncidentComments.CreateInvocation().Execute();
        }
        partial void SaveIncidentComments_CanExecute(ref bool result);
        partial void SaveIncidentComments_Execute();

        /// <summary>
        /// Calls the SaveTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void SaveTaskComments()
        {
            this.Details.Methods.SaveTaskComments.CreateInvocation().Execute();
        }
        partial void SaveTaskComments_CanExecute(ref bool result);
        partial void SaveTaskComments_Execute();

        /// <summary>
        /// Calls the CancelFeatureComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelFeatureComments()
        {
            this.Details.Methods.CancelFeatureComments.CreateInvocation().Execute();
        }
        partial void CancelFeatureComments_CanExecute(ref bool result);
        partial void CancelFeatureComments_Execute();

        /// <summary>
        /// Calls the CancelIncidentComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelIncidentComments()
        {
            this.Details.Methods.CancelIncidentComments.CreateInvocation().Execute();
        }
        partial void CancelIncidentComments_CanExecute(ref bool result);
        partial void CancelIncidentComments_Execute();

        /// <summary>
        /// Calls the CancelTaskComments screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void CancelTaskComments()
        {
            this.Details.Methods.CancelTaskComments.CreateInvocation().Execute();
        }
        partial void CancelTaskComments_CanExecute(ref bool result);
        partial void CancelTaskComments_Execute();

        /// <summary>
        /// Calls the OpenFeatureOnTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenFeatureOnTimeWindow()
        {
            this.Details.Methods.OpenFeatureOnTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenFeatureOnTimeWindow_CanExecute(ref bool result);
        partial void OpenFeatureOnTimeWindow_Execute();

        /// <summary>
        /// Calls the OpenIncidentOnTimeWindow screen method.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void OpenIncidentOnTimeWindow()
        {
            this.Details.Methods.OpenIncidentOnTimeWindow.CreateInvocation().Execute();
        }
        partial void OpenIncidentOnTimeWindow_CanExecute(ref bool result);
        partial void OpenIncidentOnTimeWindow_Execute();

        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass
            : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySet, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSet, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSet>
        {

            static DetailsClass()
            {
                var initializePropertyEntry = global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.DODProjects;
                var initializeCommandEntry = global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.Method;
                var initializeMethodEntry = global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.Method;
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                __ManageProjectAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenDetails<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeInitializeDataWorkspace,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeSavingEvent,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeSavedEvent,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeClosingEvent,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeCreated,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeActivated,
                    global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.__ManageProjectAssignments_InvokeSaveErrorEvent);
            private static void __ManageProjectAssignments_InvokeInitializeDataWorkspace(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Generic.List<global::Microsoft.LightSwitch.IDataService> saveChangesTo)
            {
                s.ManageProjectAssignments_InitializeDataWorkspace(saveChangesTo);
            }
            private static bool __ManageProjectAssignments_InvokeSavingEvent(global::LightSwitchApplication.ManageProjectAssignments s)
            {
                bool handled = false;
                s.ManageProjectAssignments_Saving(ref handled);
                return handled;
            }
            private static void __ManageProjectAssignments_InvokeSavedEvent(global::LightSwitchApplication.ManageProjectAssignments s)
            {
                s.ManageProjectAssignments_Saved();
            }
            private static bool __ManageProjectAssignments_InvokeClosingEvent(global::LightSwitchApplication.ManageProjectAssignments s)
            {
                bool cancel = false;
                s.ManageProjectAssignments_Closing(ref cancel);
                return cancel;
            }
            private static void __ManageProjectAssignments_InvokeCreated(global::LightSwitchApplication.ManageProjectAssignments s)
            {
                s.ManageProjectAssignments_Created();
            }
            private static void __ManageProjectAssignments_InvokeActivated(global::LightSwitchApplication.ManageProjectAssignments s)
            {
                s.ManageProjectAssignments_Activated();
            }
            private static bool __ManageProjectAssignments_InvokeSaveErrorEvent(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Exception ex)
            {
                bool handled = false;
                s.ManageProjectAssignments_SaveError(ex, ref handled);
                return handled;
            }

            public DetailsClass() : base()
            {
            }

            public new global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }

            public new global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSet Commands
            {
                get
                {
                    return base.Commands;
                }
            }

            public new global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSet Methods
            {
                get
                {
                    return base.Methods;
                }
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable DODProjectsQuery(string SearchTerm)
            {
                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        this.Screen.DataWorkspace.ApplicationData.DODProjects(),
                        (p) => ((((((SearchTerm == null) || p.ProjectName.Contains(SearchTerm)) || ((SearchTerm == null) || p.Client.Name.Contains(SearchTerm))) || ((SearchTerm == null) || p.Director.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Manager.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Phase.Contains(SearchTerm)))),
                    "Client");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesQuery(string SearchTerm)
            {
                if (this.Screen.DODProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeature>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.DODProjects.SelectedItem.Details.Properties.ProjectFeatures).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => ((((((SearchTerm == null) || p.DocumentName.Contains(SearchTerm)) || ((SearchTerm == null) || p.FeatureId.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm))) || ((SearchTerm == null) || p.Developer.LastName.Contains(SearchTerm)))),
                    "Developer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesRequirementsQuery(string SearchTerm)
            {
                if (this.Screen.Features.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Features.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Name.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) || ((SearchTerm == null) || r.Priority.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesIssuesQuery(string SearchTerm)
            {
                if (this.Screen.Features.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Features.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (i) => ((((((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.Features.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Features.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Name.Contains(SearchTerm)) || ((SearchTerm == null) || t.Action.Contains(SearchTerm))) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesTDDDetailsQuery()
            {
                if (this.Screen.FeaturesTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeaturesTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentsItemQuery(string SearchTerm)
            {
                if (this.Screen.DODProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncident>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.DODProjects.SelectedItem.Details.Properties.ProjectIncidentsItem).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => ((((((SearchTerm == null) || p.Name.Contains(SearchTerm)) || ((SearchTerm == null) || p.IncidentId.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm))) || ((SearchTerm == null) || p.Developer.LastName.Contains(SearchTerm)))),
                    "Developer");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsRequirementsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectIncidentsItem.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidentsItem.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Name.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) || ((SearchTerm == null) || r.Priority.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsIssuesQuery(string SearchTerm)
            {
                if (this.Screen.ProjectIncidentsItem.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidentsItem.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (i) => ((((((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectIncidentsItem.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidentsItem.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Action.Contains(SearchTerm)) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Name.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsTDDDetailsQuery()
            {
                if (this.Screen.IncidentsTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentsTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTasksQuery(string SearchTerm)
            {
                if (this.Screen.DODProjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTask>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.DODProjects.SelectedItem.Details.Properties.ProjectTasks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (p) => ((((((SearchTerm == null) || p.Name.Contains(SearchTerm)) || ((SearchTerm == null) || p.Employee.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || p.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || p.Status.Contains(SearchTerm))) || ((SearchTerm == null) || p.SkyDriveLink.Contains(SearchTerm)))),
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksRequirementsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.Requirements).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (r) => (((((((SearchTerm == null) || r.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || r.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || r.Status.Contains(SearchTerm))) || ((SearchTerm == null) || r.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || r.ReqId.Contains(SearchTerm))) || ((SearchTerm == null) || r.Name.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksIssuesQuery(string SearchTerm)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.Issues).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (i) => ((((((SearchTerm == null) || i.AssignedTo.FirstName.Contains(SearchTerm)) || ((SearchTerm == null) || i.AssignedTo.LastName.Contains(SearchTerm))) || ((SearchTerm == null) || i.Name.Contains(SearchTerm))) || ((SearchTerm == null) || i.Priority.Contains(SearchTerm))) || ((SearchTerm == null) || i.Status.Contains(SearchTerm)))),
                    "AssignedTo");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksTDDObjectsQuery(string SearchTerm)
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.TDDObjects).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.OrderBy(
                    global::Microsoft.LightSwitch.DataServiceQueryable.Where(
                        loader,
                        (t) => ((((((SearchTerm == null) || t.Action.Contains(SearchTerm)) || ((SearchTerm == null) || t.CodeReviewNotes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Name.Contains(SearchTerm))) || ((SearchTerm == null) || t.Notes.Contains(SearchTerm))) || ((SearchTerm == null) || t.Type.Contains(SearchTerm)))),
                    (t) => t.Type);
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksTDDDetailsQuery()
            {
                if (this.Screen.TasksTDDObjects.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDDetail>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TasksTDDObjects.SelectedItem.Details.Properties.TDDDetails).Loader;
                if (loader == null)
                {
                    return null;
                }

                return loader;
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeatureRequirementsTimeTracksQuery()
            {
                if (this.Screen.FeaturesRequirements.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeaturesRequirements.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable FeaturesIssuesTimeTracksQuery()
            {
                if (this.Screen.FeaturesIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.FeaturesIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsRequirementsTimeTracksQuery()
            {
                if (this.Screen.IncidentsRequirements.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentsRequirements.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable IncidentsIssuesTimeTracksQuery()
            {
                if (this.Screen.IncidentsIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.IncidentsIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksRequirementsTimeTracksQuery()
            {
                if (this.Screen.TasksRequirements.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TasksRequirements.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable TasksIssuesTimeTracksQuery()
            {
                if (this.Screen.TasksIssues.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.TasksIssues.SelectedItem.Details.Properties.TimeTracks).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectFeatureCommentsQuery()
            {
                if (this.Screen.Features.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.Features.SelectedItem.Details.Properties.ProjectFeatureComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectIncidentCommentsQuery()
            {
                if (this.Screen.ProjectIncidentsItem.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectIncidentsItem.SelectedItem.Details.Properties.ProjectIncidentComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            private global::Microsoft.LightSwitch.IDataServiceQueryable ProjectTaskCommentsQuery()
            {
                if (this.Screen.ProjectTasks.SelectedItem == null)
                {
                    return null;
                }

                global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment> loader =
                    (global::Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectTaskComment>)((global::Microsoft.LightSwitch.Details.ILoadableProperty)this.Screen.ProjectTasks.SelectedItem.Details.Properties.ProjectTaskComments).Loader;
                if (loader == null)
                {
                    return null;
                }

                return global::Microsoft.LightSwitch.DataServiceQueryable.Include(
                    loader,
                    "Employee");
            }

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project>.Data _DODProjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _ProjectSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _Features;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _FeaturesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _FeaturesRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _FeaturesRequirementsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _FeaturesIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _FeaturesIssuesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _FeaturesTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _FeaturesTDDObjectsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _FeaturesTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncidentsItem;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _IncidentsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _IncidentsRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _IncidentRequirementsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _IncidentsIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _IncidentsIssuesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _IncidentsTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _IncidentsTDDObjectsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _IncidentsTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTasks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _TasksSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data _TasksRequirements;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _TasksRequirementsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data _TasksIssues;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _TasksIssuesSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _TasksTDDObjects;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data _TasksTDDObjectsSearchTerm;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data _TasksTDDDetails;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _FeatureRequirementsTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _FeaturesIssuesTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _IncidentsRequirementsTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _IncidentsIssuesTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TasksRequirementsTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TasksIssuesTimeTracks;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data _ProjectFeatureComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data _ProjectIncidentComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data _ProjectTaskComments;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _MethodCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureRequirementTimeTrackingOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureRequirementTimeTrackingCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureIssuesTimeTrackingOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureIssuesTimeTrackingCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentsRequirementTimeTracksOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentsRequirementsTimeTracksCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentIssueTimeTrackingOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentIssueTimeTrackingCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskRequirementTimeTrackingOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskRequirementTimeTrackingCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskIssueTimeTrackingOKCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskIssueTimeTrackingCANCELCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TasksIssuesTimeTracksAddAndEditNewCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentCommentsWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _ProjectTasksCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenTaskReqTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenTaskIssueTimeTrackWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelFeatureCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelIncidentCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelTaskCommentsCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureOnTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentOnTimeWindowCommand;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _MethodMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureRequirementTimeTrackingOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureRequirementTimeTrackingCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureIssuesTimeTrackingOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _FeatureIssuesTimeTrackingCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentsRequirementTimeTracksOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentsRequirementsTimeTracksCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentIssueTimeTrackingOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _IncidentIssueTimeTrackingCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskRequirementTimeTrackingOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskRequirementTimeTrackingCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskIssueTimeTrackingOKMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TaskIssueTimeTrackingCANCELMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _TasksIssuesTimeTracksAddAndEditNewMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentCommentsWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _ProjectTasksCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenTaskReqTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenTaskIssueTimeTrackWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _SaveTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelFeatureCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelIncidentCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _CancelTaskCommentsMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenFeatureOnTimeWindowMethod;

            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data _OpenIncidentOnTimeWindowMethod;

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenPropertySet<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project> DODProjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.DODProjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> ProjectSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature> Features
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.Features);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> FeaturesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement> FeaturesRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> FeaturesRequirementsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesRequirementsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue> FeaturesIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> FeaturesIssuesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssuesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> FeaturesTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> FeaturesTDDObjectsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDObjectsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> FeaturesTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncidentsItem
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectIncidentsItem);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> IncidentsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement> IncidentsRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> IncidentRequirementsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentRequirementsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue> IncidentsIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> IncidentsIssuesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssuesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> IncidentsTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> IncidentsTDDObjectsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDObjectsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> IncidentsTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTasks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectTasks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> TasksSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement> TasksRequirements
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirements);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> TasksRequirementsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirementsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue> TasksIssues
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssues);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> TasksIssuesSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssuesSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject> TasksTDDObjects
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDObjects);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string> TasksTDDObjectsSearchTerm
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDObjectsSearchTerm);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail> TasksTDDDetails
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksTDDDetails);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> FeatureRequirementsTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeatureRequirementsTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> FeaturesIssuesTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.FeaturesIssuesTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> IncidentsRequirementsTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsRequirementsTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> IncidentsIssuesTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.IncidentsIssuesTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> TasksRequirementsTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksRequirementsTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack> TasksIssuesTimeTracks
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.TasksIssuesTimeTracks);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment> ProjectTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties.ProjectTaskComments);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class CommandSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommandSet<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureRequirementTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.FeatureRequirementTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureRequirementTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.FeatureRequirementTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureIssuesTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.FeatureIssuesTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureIssuesTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.FeatureIssuesTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentsRequirementTimeTracksOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.IncidentsRequirementTimeTracksOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentsRequirementsTimeTracksCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.IncidentsRequirementsTimeTracksCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentIssueTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.IncidentIssueTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentIssueTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.IncidentIssueTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskRequirementTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.TaskRequirementTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskRequirementTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.TaskRequirementTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskIssueTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.TaskIssueTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskIssueTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.TaskIssueTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TasksIssuesTimeTracksAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.TasksIssuesTimeTracksAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenIncidentCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> ProjectTasksComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.ProjectTasksComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenFeatureReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenFeatureIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenIncidentReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenIncidentIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenTaskReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenTaskReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenTaskIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenTaskIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenFeatureOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties.OpenIncidentOnTimeWindow);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class MethodSet
                : global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethodSet<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>
            {

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> Method
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.Method);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureRequirementTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.FeatureRequirementTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureRequirementTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.FeatureRequirementTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureIssuesTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.FeatureIssuesTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> FeatureIssuesTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.FeatureIssuesTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentsRequirementTimeTracksOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.IncidentsRequirementTimeTracksOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentsRequirementsTimeTracksCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.IncidentsRequirementsTimeTracksCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentIssueTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.IncidentIssueTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> IncidentIssueTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.IncidentIssueTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskRequirementTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.TaskRequirementTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskRequirementTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.TaskRequirementTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskIssueTimeTrackingOK
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.TaskIssueTimeTrackingOK);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TaskIssueTimeTrackingCANCEL
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.TaskIssueTimeTrackingCANCEL);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> TasksIssuesTimeTracksAddAndEditNew
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.TasksIssuesTimeTracksAddAndEditNew);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenFeatureCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentCommentsWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenIncidentCommentsWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> ProjectTasksComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.ProjectTasksComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenFeatureReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenFeatureIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenIncidentReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenIncidentIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenTaskReqTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenTaskReqTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenTaskIssueTimeTrackWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenTaskIssueTimeTrackWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.SaveFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.SaveIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> SaveTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.SaveTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelFeatureComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.CancelFeatureComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelIncidentComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.CancelIncidentComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> CancelTaskComments
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.CancelTaskComments);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenFeatureOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenFeatureOnTimeWindow);
                    }
                }

                public global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass> OpenIncidentOnTimeWindow
                {
                    get
                    {
                        return (global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>)base.GetItem(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties.OpenIncidentOnTimeWindow);
                    }
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class PropertySetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    DODProjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "DODProjects",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._DODProjects_OnLoaded);
                private static void _DODProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._DODProjects, sf);
                }
                private static void _DODProjects_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.DODProjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _DODProjects_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.DODProjectsQuery((string)args[0]);
                }
                private static void _DODProjects_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.DODProjects_SelectionChanged();
                }
                private static void _DODProjects_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.DODProjects_Changed(e);
                }
                private static void _DODProjects_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.DODProjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    ProjectSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "ProjectSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectSearchTerm_OnValueChanged);
                private static void _ProjectSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectSearchTerm, sf);
                }
                private static void _ProjectSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectSearchTerm_Validate(r);
                }
                private static void _ProjectSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    Features = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "Features",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._Features_OnLoaded);
                private static void _Features_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._Features, sf);
                }
                private static void _Features_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.Features_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _Features_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesQuery((string)args[0]);
                }
                private static void _Features_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.Features_SelectionChanged();
                }
                private static void _Features_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.Features_Changed(e);
                }
                private static void _Features_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.Features_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    FeaturesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "FeaturesSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesSearchTerm_OnValueChanged);
                private static void _FeaturesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesSearchTerm, sf);
                }
                private static void _FeaturesSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesSearchTerm_Validate(r);
                }
                private static void _FeaturesSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    FeaturesRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "FeaturesRequirements",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirements_OnLoaded);
                private static void _FeaturesRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesRequirements, sf);
                }
                private static void _FeaturesRequirements_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeaturesRequirements_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesRequirementsQuery((string)args[0]);
                }
                private static void _FeaturesRequirements_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesRequirements_SelectionChanged();
                }
                private static void _FeaturesRequirements_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeaturesRequirements_Changed(e);
                }
                private static void _FeaturesRequirements_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeaturesRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    FeaturesRequirementsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "FeaturesRequirementsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirementsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirementsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesRequirementsSearchTerm_OnValueChanged);
                private static void _FeaturesRequirementsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesRequirementsSearchTerm, sf);
                }
                private static void _FeaturesRequirementsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesRequirementsSearchTerm_Validate(r);
                }
                private static void _FeaturesRequirementsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesRequirementsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    FeaturesIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "FeaturesIssues",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssues_OnLoaded);
                private static void _FeaturesIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesIssues, sf);
                }
                private static void _FeaturesIssues_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeaturesIssues_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesIssuesQuery((string)args[0]);
                }
                private static void _FeaturesIssues_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesIssues_SelectionChanged();
                }
                private static void _FeaturesIssues_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeaturesIssues_Changed(e);
                }
                private static void _FeaturesIssues_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeaturesIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    FeaturesIssuesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "FeaturesIssuesSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesSearchTerm_OnValueChanged);
                private static void _FeaturesIssuesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesIssuesSearchTerm, sf);
                }
                private static void _FeaturesIssuesSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesIssuesSearchTerm_Validate(r);
                }
                private static void _FeaturesIssuesSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesIssuesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    FeaturesTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "FeaturesTDDObjects",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjects_OnLoaded);
                private static void _FeaturesTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesTDDObjects, sf);
                }
                private static void _FeaturesTDDObjects_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeaturesTDDObjects_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesTDDObjectsQuery((string)args[0]);
                }
                private static void _FeaturesTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesTDDObjects_SelectionChanged();
                }
                private static void _FeaturesTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeaturesTDDObjects_Changed(e);
                }
                private static void _FeaturesTDDObjects_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeaturesTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    FeaturesTDDObjectsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "FeaturesTDDObjectsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjectsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjectsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDObjectsSearchTerm_OnValueChanged);
                private static void _FeaturesTDDObjectsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesTDDObjectsSearchTerm, sf);
                }
                private static void _FeaturesTDDObjectsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesTDDObjectsSearchTerm_Validate(r);
                }
                private static void _FeaturesTDDObjectsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesTDDObjectsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    FeaturesTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "FeaturesTDDDetails",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesTDDDetails_OnLoaded);
                private static void _FeaturesTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesTDDDetails, sf);
                }
                private static void _FeaturesTDDDetails_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeaturesTDDDetails_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesTDDDetailsQuery();
                }
                private static void _FeaturesTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesTDDDetails_SelectionChanged();
                }
                private static void _FeaturesTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeaturesTDDDetails_Changed(e);
                }
                private static void _FeaturesTDDDetails_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeaturesTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncidentsItem = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncidentsItem",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentsItem_OnLoaded);
                private static void _ProjectIncidentsItem_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentsItem, sf);
                }
                private static void _ProjectIncidentsItem_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentsItem_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidentsItem_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentsItemQuery((string)args[0]);
                }
                private static void _ProjectIncidentsItem_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectIncidentsItem_SelectionChanged();
                }
                private static void _ProjectIncidentsItem_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidentsItem_Changed(e);
                }
                private static void _ProjectIncidentsItem_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.ProjectIncidentsItem_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    IncidentsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "IncidentsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsSearchTerm_OnValueChanged);
                private static void _IncidentsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsSearchTerm, sf);
                }
                private static void _IncidentsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsSearchTerm_Validate(r);
                }
                private static void _IncidentsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    IncidentsRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "IncidentsRequirements",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirements_OnLoaded);
                private static void _IncidentsRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirements, sf);
                }
                private static void _IncidentsRequirements_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsRequirements_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsRequirementsQuery((string)args[0]);
                }
                private static void _IncidentsRequirements_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsRequirements_SelectionChanged();
                }
                private static void _IncidentsRequirements_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsRequirements_Changed(e);
                }
                private static void _IncidentsRequirements_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    IncidentRequirementsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "IncidentRequirementsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentRequirementsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentRequirementsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentRequirementsSearchTerm_OnValueChanged);
                private static void _IncidentRequirementsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentRequirementsSearchTerm, sf);
                }
                private static void _IncidentRequirementsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentRequirementsSearchTerm_Validate(r);
                }
                private static void _IncidentRequirementsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentRequirementsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    IncidentsIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "IncidentsIssues",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssues_OnLoaded);
                private static void _IncidentsIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsIssues, sf);
                }
                private static void _IncidentsIssues_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsIssues_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsIssuesQuery((string)args[0]);
                }
                private static void _IncidentsIssues_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsIssues_SelectionChanged();
                }
                private static void _IncidentsIssues_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsIssues_Changed(e);
                }
                private static void _IncidentsIssues_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    IncidentsIssuesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "IncidentsIssuesSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesSearchTerm_OnValueChanged);
                private static void _IncidentsIssuesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsIssuesSearchTerm, sf);
                }
                private static void _IncidentsIssuesSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsIssuesSearchTerm_Validate(r);
                }
                private static void _IncidentsIssuesSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsIssuesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    IncidentsTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "IncidentsTDDObjects",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjects_OnLoaded);
                private static void _IncidentsTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsTDDObjects, sf);
                }
                private static void _IncidentsTDDObjects_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsTDDObjects_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsTDDObjectsQuery((string)args[0]);
                }
                private static void _IncidentsTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsTDDObjects_SelectionChanged();
                }
                private static void _IncidentsTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsTDDObjects_Changed(e);
                }
                private static void _IncidentsTDDObjects_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    IncidentsTDDObjectsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "IncidentsTDDObjectsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjectsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjectsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDObjectsSearchTerm_OnValueChanged);
                private static void _IncidentsTDDObjectsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsTDDObjectsSearchTerm, sf);
                }
                private static void _IncidentsTDDObjectsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsTDDObjectsSearchTerm_Validate(r);
                }
                private static void _IncidentsTDDObjectsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsTDDObjectsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    IncidentsTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "IncidentsTDDDetails",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsTDDDetails_OnLoaded);
                private static void _IncidentsTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsTDDDetails, sf);
                }
                private static void _IncidentsTDDDetails_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsTDDDetails_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsTDDDetailsQuery();
                }
                private static void _IncidentsTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsTDDDetails_SelectionChanged();
                }
                private static void _IncidentsTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsTDDDetails_Changed(e);
                }
                private static void _IncidentsTDDDetails_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTasks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTasks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTasks_OnLoaded);
                private static void _ProjectTasks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTasks, sf);
                }
                private static void _ProjectTasks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTasks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTasks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectTasksQuery((string)args[0]);
                }
                private static void _ProjectTasks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectTasks_SelectionChanged();
                }
                private static void _ProjectTasks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTasks_Changed(e);
                }
                private static void _ProjectTasks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.ProjectTasks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    TasksSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "TasksSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksSearchTerm_OnValueChanged);
                private static void _TasksSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksSearchTerm, sf);
                }
                private static void _TasksSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksSearchTerm_Validate(r);
                }
                private static void _TasksSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    TasksRequirements = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "TasksRequirements",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirements_OnLoaded);
                private static void _TasksRequirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksRequirements, sf);
                }
                private static void _TasksRequirements_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksRequirements_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksRequirements_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksRequirementsQuery((string)args[0]);
                }
                private static void _TasksRequirements_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksRequirements_SelectionChanged();
                }
                private static void _TasksRequirements_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksRequirements_Changed(e);
                }
                private static void _TasksRequirements_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksRequirements_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    TasksRequirementsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "TasksRequirementsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsSearchTerm_OnValueChanged);
                private static void _TasksRequirementsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksRequirementsSearchTerm, sf);
                }
                private static void _TasksRequirementsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksRequirementsSearchTerm_Validate(r);
                }
                private static void _TasksRequirementsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksRequirementsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    TasksIssues = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "TasksIssues",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssues_OnLoaded);
                private static void _TasksIssues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksIssues, sf);
                }
                private static void _TasksIssues_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksIssues_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksIssues_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksIssuesQuery((string)args[0]);
                }
                private static void _TasksIssues_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksIssues_SelectionChanged();
                }
                private static void _TasksIssues_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksIssues_Changed(e);
                }
                private static void _TasksIssues_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksIssues_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    TasksIssuesSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "TasksIssuesSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesSearchTerm_OnValueChanged);
                private static void _TasksIssuesSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksIssuesSearchTerm, sf);
                }
                private static void _TasksIssuesSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksIssuesSearchTerm_Validate(r);
                }
                private static void _TasksIssuesSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksIssuesSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    TasksTDDObjects = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "TasksTDDObjects",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjects_OnLoaded);
                private static void _TasksTDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksTDDObjects, sf);
                }
                private static void _TasksTDDObjects_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksTDDObjects_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksTDDObjects_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksTDDObjectsQuery((string)args[0]);
                }
                private static void _TasksTDDObjects_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksTDDObjects_SelectionChanged();
                }
                private static void _TasksTDDObjects_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksTDDObjects_Changed(e);
                }
                private static void _TasksTDDObjects_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksTDDObjects_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry
                    TasksTDDObjectsSearchTerm = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Entry(
                        "TasksTDDObjectsSearchTerm",
                        false,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjectsSearchTerm_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjectsSearchTerm_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDObjectsSearchTerm_OnValueChanged);
                private static void _TasksTDDObjectsSearchTerm_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenLocalProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, string>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksTDDObjectsSearchTerm, sf);
                }
                private static void _TasksTDDObjectsSearchTerm_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksTDDObjectsSearchTerm_Validate(r);
                }
                private static void _TasksTDDObjectsSearchTerm_OnValueChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksTDDObjectsSearchTerm_Changed();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry
                    TasksTDDDetails = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Entry(
                        "TasksTDDDetails",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksTDDDetails_OnLoaded);
                private static void _TasksTDDDetails_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TDDDetail>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksTDDDetails, sf);
                }
                private static void _TasksTDDDetails_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksTDDDetails_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksTDDDetails_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksTDDDetailsQuery();
                }
                private static void _TasksTDDDetails_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksTDDDetails_SelectionChanged();
                }
                private static void _TasksTDDDetails_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksTDDDetails_Changed(e);
                }
                private static void _TasksTDDDetails_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksTDDDetails_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    FeatureRequirementsTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "FeatureRequirementsTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeatureRequirementsTimeTracks_OnLoaded);
                private static void _FeatureRequirementsTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementsTimeTracks, sf);
                }
                private static void _FeatureRequirementsTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeatureRequirementsTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeatureRequirementsTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeatureRequirementsTimeTracksQuery();
                }
                private static void _FeatureRequirementsTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeatureRequirementsTimeTracks_SelectionChanged();
                }
                private static void _FeatureRequirementsTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeatureRequirementsTimeTracks_Changed(e);
                }
                private static void _FeatureRequirementsTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeatureRequirementsTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    FeaturesIssuesTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "FeaturesIssuesTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._FeaturesIssuesTimeTracks_OnLoaded);
                private static void _FeaturesIssuesTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeaturesIssuesTimeTracks, sf);
                }
                private static void _FeaturesIssuesTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.FeaturesIssuesTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _FeaturesIssuesTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.FeaturesIssuesTimeTracksQuery();
                }
                private static void _FeaturesIssuesTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.FeaturesIssuesTimeTracks_SelectionChanged();
                }
                private static void _FeaturesIssuesTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.FeaturesIssuesTimeTracks_Changed(e);
                }
                private static void _FeaturesIssuesTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.FeaturesIssuesTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    IncidentsRequirementsTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "IncidentsRequirementsTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsRequirementsTimeTracks_OnLoaded);
                private static void _IncidentsRequirementsTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirementsTimeTracks, sf);
                }
                private static void _IncidentsRequirementsTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsRequirementsTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsRequirementsTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsRequirementsTimeTracksQuery();
                }
                private static void _IncidentsRequirementsTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsRequirementsTimeTracks_SelectionChanged();
                }
                private static void _IncidentsRequirementsTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsRequirementsTimeTracks_Changed(e);
                }
                private static void _IncidentsRequirementsTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsRequirementsTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    IncidentsIssuesTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "IncidentsIssuesTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._IncidentsIssuesTimeTracks_OnLoaded);
                private static void _IncidentsIssuesTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsIssuesTimeTracks, sf);
                }
                private static void _IncidentsIssuesTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.IncidentsIssuesTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _IncidentsIssuesTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.IncidentsIssuesTimeTracksQuery();
                }
                private static void _IncidentsIssuesTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.IncidentsIssuesTimeTracks_SelectionChanged();
                }
                private static void _IncidentsIssuesTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.IncidentsIssuesTimeTracks_Changed(e);
                }
                private static void _IncidentsIssuesTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.IncidentsIssuesTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TasksRequirementsTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TasksRequirementsTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksRequirementsTimeTracks_OnLoaded);
                private static void _TasksRequirementsTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksRequirementsTimeTracks, sf);
                }
                private static void _TasksRequirementsTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksRequirementsTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksRequirementsTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksRequirementsTimeTracksQuery();
                }
                private static void _TasksRequirementsTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksRequirementsTimeTracks_SelectionChanged();
                }
                private static void _TasksRequirementsTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksRequirementsTimeTracks_Changed(e);
                }
                private static void _TasksRequirementsTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksRequirementsTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TasksIssuesTimeTracks = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TasksIssuesTimeTracks",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._TasksIssuesTimeTracks_OnLoaded);
                private static void _TasksIssuesTimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksIssuesTimeTracks, sf);
                }
                private static void _TasksIssuesTimeTracks_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.TasksIssuesTimeTracks_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _TasksIssuesTimeTracks_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.TasksIssuesTimeTracksQuery();
                }
                private static void _TasksIssuesTimeTracks_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.TasksIssuesTimeTracks_SelectionChanged();
                }
                private static void _TasksIssuesTimeTracks_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.TasksIssuesTimeTracks_Changed(e);
                }
                private static void _TasksIssuesTimeTracks_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.TasksIssuesTimeTracks_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry
                    ProjectFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry(
                        "ProjectFeatureComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectFeatureComments_OnLoaded);
                private static void _ProjectFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureComments, sf);
                }
                private static void _ProjectFeatureComments_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectFeatureComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectFeatureComments_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectFeatureCommentsQuery();
                }
                private static void _ProjectFeatureComments_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectFeatureComments_SelectionChanged();
                }
                private static void _ProjectFeatureComments_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectFeatureComments_Changed(e);
                }
                private static void _ProjectFeatureComments_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.ProjectFeatureComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry
                    ProjectIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry(
                        "ProjectIncidentComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectIncidentComments_OnLoaded);
                private static void _ProjectIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentComments, sf);
                }
                private static void _ProjectIncidentComments_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectIncidentComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectIncidentComments_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectIncidentCommentsQuery();
                }
                private static void _ProjectIncidentComments_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectIncidentComments_SelectionChanged();
                }
                private static void _ProjectIncidentComments_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectIncidentComments_Changed(e);
                }
                private static void _ProjectIncidentComments_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.ProjectIncidentComments_Loaded(succeeded);
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry
                    ProjectTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Entry(
                        "ProjectTaskComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_Validate,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_CreateQuery,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_SelectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_OnCollectionChanged,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.PropertySetProperties._ProjectTaskComments_OnLoaded);
                private static void _ProjectTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCollectionProperty<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::LightSwitchApplication.ProjectTaskComment>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTaskComments, sf);
                }
                private static void _ProjectTaskComments_Validate(global::LightSwitchApplication.ManageProjectAssignments s, global::Microsoft.LightSwitch.Framework.Client.ScreenValidationResultsBuilder r)
                {
                    s.ProjectTaskComments_Validate(r);
                }
                private static global::Microsoft.LightSwitch.IDataServiceQueryable _ProjectTaskComments_CreateQuery(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object[] args)
                {
                    return d.ProjectTaskCommentsQuery();
                }
                private static void _ProjectTaskComments_SelectionChanged(global::LightSwitchApplication.ManageProjectAssignments s)
                {
                    s.ProjectTaskComments_SelectionChanged();
                }
                private static void _ProjectTaskComments_OnCollectionChanged(global::LightSwitchApplication.ManageProjectAssignments s, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    s.ProjectTaskComments_Changed(e);
                }
                private static void _ProjectTaskComments_OnLoaded(global::LightSwitchApplication.ManageProjectAssignments s, bool succeeded)
                {
                    s.ProjectTaskComments_Loaded(succeeded);
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class CommandSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._Method_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._Method_CreateExecutableObject);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _Method_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.Method.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureRequirementTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureRequirementTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureRequirementTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureRequirementTimeTrackingOK_CreateExecutableObject);
                private static void _FeatureRequirementTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementTimeTrackingOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureRequirementTimeTrackingOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.FeatureRequirementTimeTrackingOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureRequirementTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureRequirementTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureRequirementTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureRequirementTimeTrackingCANCEL_CreateExecutableObject);
                private static void _FeatureRequirementTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementTimeTrackingCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureRequirementTimeTrackingCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.FeatureRequirementTimeTrackingCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureIssuesTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureIssuesTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureIssuesTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureIssuesTimeTrackingOK_CreateExecutableObject);
                private static void _FeatureIssuesTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesTimeTrackingOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureIssuesTimeTrackingOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.FeatureIssuesTimeTrackingOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureIssuesTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureIssuesTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureIssuesTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._FeatureIssuesTimeTrackingCANCEL_CreateExecutableObject);
                private static void _FeatureIssuesTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesTimeTrackingCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _FeatureIssuesTimeTrackingCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.FeatureIssuesTimeTrackingCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentsRequirementTimeTracksOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentsRequirementTimeTracksOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentsRequirementTimeTracksOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentsRequirementTimeTracksOK_CreateExecutableObject);
                private static void _IncidentsRequirementTimeTracksOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirementTimeTracksOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _IncidentsRequirementTimeTracksOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.IncidentsRequirementTimeTracksOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentsRequirementsTimeTracksCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentsRequirementsTimeTracksCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentsRequirementsTimeTracksCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentsRequirementsTimeTracksCANCEL_CreateExecutableObject);
                private static void _IncidentsRequirementsTimeTracksCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirementsTimeTracksCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _IncidentsRequirementsTimeTracksCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.IncidentsRequirementsTimeTracksCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentIssueTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentIssueTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentIssueTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentIssueTimeTrackingOK_CreateExecutableObject);
                private static void _IncidentIssueTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueTimeTrackingOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _IncidentIssueTimeTrackingOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.IncidentIssueTimeTrackingOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentIssueTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentIssueTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentIssueTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._IncidentIssueTimeTrackingCANCEL_CreateExecutableObject);
                private static void _IncidentIssueTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueTimeTrackingCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _IncidentIssueTimeTrackingCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.IncidentIssueTimeTrackingCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskRequirementTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskRequirementTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskRequirementTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskRequirementTimeTrackingOK_CreateExecutableObject);
                private static void _TaskRequirementTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskRequirementTimeTrackingOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TaskRequirementTimeTrackingOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.TaskRequirementTimeTrackingOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskRequirementTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskRequirementTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskRequirementTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskRequirementTimeTrackingCANCEL_CreateExecutableObject);
                private static void _TaskRequirementTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskRequirementTimeTrackingCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TaskRequirementTimeTrackingCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.TaskRequirementTimeTrackingCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskIssueTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskIssueTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskIssueTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskIssueTimeTrackingOK_CreateExecutableObject);
                private static void _TaskIssueTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueTimeTrackingOKCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TaskIssueTimeTrackingOK_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.TaskIssueTimeTrackingOK.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskIssueTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskIssueTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskIssueTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TaskIssueTimeTrackingCANCEL_CreateExecutableObject);
                private static void _TaskIssueTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueTimeTrackingCANCELCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TaskIssueTimeTrackingCANCEL_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.TaskIssueTimeTrackingCANCEL.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TasksIssuesTimeTracksAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TasksIssuesTimeTracksAddAndEditNew",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TasksIssuesTimeTracksAddAndEditNew_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._TasksIssuesTimeTracksAddAndEditNew_CreateExecutableObject);
                private static void _TasksIssuesTimeTracksAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksIssuesTimeTracksAddAndEditNewCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _TasksIssuesTimeTracksAddAndEditNew_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.TasksIssuesTimeTracksAddAndEditNew.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureCommentsWindow_CreateExecutableObject);
                private static void _OpenFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenFeatureCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentCommentsWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentCommentsWindow_CreateExecutableObject);
                private static void _OpenIncidentCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentCommentsWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenIncidentCommentsWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    ProjectTasksComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "ProjectTasksComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._ProjectTasksComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._ProjectTasksComments_CreateExecutableObject);
                private static void _ProjectTasksComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTasksCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _ProjectTasksComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.ProjectTasksComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenFeatureReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenFeatureReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenFeatureIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenFeatureIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenIncidentReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenIncidentReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenIncidentIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenIncidentIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenTaskReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenTaskReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenTaskReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenTaskReqTimeTrackWindow_CreateExecutableObject);
                private static void _OpenTaskReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskReqTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskReqTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenTaskReqTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenTaskIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenTaskIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenTaskIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenTaskIssueTimeTrackWindow_CreateExecutableObject);
                private static void _OpenTaskIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskIssueTimeTrackWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenTaskIssueTimeTrackWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenTaskIssueTimeTrackWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveFeatureComments_CreateExecutableObject);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveFeatureComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.SaveFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveIncidentComments_CreateExecutableObject);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveIncidentComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.SaveIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._SaveTaskComments_CreateExecutableObject);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _SaveTaskComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.SaveTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelFeatureComments_CreateExecutableObject);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelFeatureComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.CancelFeatureComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelIncidentComments_CreateExecutableObject);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelIncidentComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.CancelIncidentComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._CancelTaskComments_CreateExecutableObject);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _CancelTaskComments_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.CancelTaskComments.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureOnTimeWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenFeatureOnTimeWindow_CreateExecutableObject);
                private static void _OpenFeatureOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureOnTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenFeatureOnTimeWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenFeatureOnTimeWindow.CreateInvocation();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentOnTimeWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.CommandSetProperties._OpenIncidentOnTimeWindow_CreateExecutableObject);
                private static void _OpenIncidentOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenCommand<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentOnTimeWindowCommand, sf);
                }
                private static global::Microsoft.LightSwitch.IExecutable _OpenIncidentOnTimeWindow_CreateExecutableObject(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d)
                {
                    return ((global::LightSwitchApplication.ManageProjectAssignments.DetailsClass)d).Methods.OpenIncidentOnTimeWindow.CreateInvocation();
                }

            }

            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sealed class MethodSetProperties
            {

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    Method = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "Method",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._Method_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._Method_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._Method_InvokeMethod);
                private static void _Method_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._MethodMethod, sf);
                }
                private static global::System.Exception _Method_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.Method_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _Method_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.Method_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureRequirementTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureRequirementTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingOK_InvokeMethod);
                private static void _FeatureRequirementTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementTimeTrackingOKMethod, sf);
                }
                private static global::System.Exception _FeatureRequirementTimeTrackingOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureRequirementTimeTrackingOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureRequirementTimeTrackingOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureRequirementTimeTrackingOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureRequirementTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureRequirementTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureRequirementTimeTrackingCANCEL_InvokeMethod);
                private static void _FeatureRequirementTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureRequirementTimeTrackingCANCELMethod, sf);
                }
                private static global::System.Exception _FeatureRequirementTimeTrackingCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureRequirementTimeTrackingCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureRequirementTimeTrackingCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureRequirementTimeTrackingCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureIssuesTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureIssuesTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingOK_InvokeMethod);
                private static void _FeatureIssuesTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesTimeTrackingOKMethod, sf);
                }
                private static global::System.Exception _FeatureIssuesTimeTrackingOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureIssuesTimeTrackingOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureIssuesTimeTrackingOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureIssuesTimeTrackingOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    FeatureIssuesTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "FeatureIssuesTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._FeatureIssuesTimeTrackingCANCEL_InvokeMethod);
                private static void _FeatureIssuesTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureIssuesTimeTrackingCANCELMethod, sf);
                }
                private static global::System.Exception _FeatureIssuesTimeTrackingCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.FeatureIssuesTimeTrackingCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _FeatureIssuesTimeTrackingCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.FeatureIssuesTimeTrackingCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentsRequirementTimeTracksOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentsRequirementTimeTracksOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementTimeTracksOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementTimeTracksOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementTimeTracksOK_InvokeMethod);
                private static void _IncidentsRequirementTimeTracksOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirementTimeTracksOKMethod, sf);
                }
                private static global::System.Exception _IncidentsRequirementTimeTracksOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.IncidentsRequirementTimeTracksOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _IncidentsRequirementTimeTracksOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.IncidentsRequirementTimeTracksOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentsRequirementsTimeTracksCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentsRequirementsTimeTracksCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementsTimeTracksCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementsTimeTracksCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentsRequirementsTimeTracksCANCEL_InvokeMethod);
                private static void _IncidentsRequirementsTimeTracksCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentsRequirementsTimeTracksCANCELMethod, sf);
                }
                private static global::System.Exception _IncidentsRequirementsTimeTracksCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.IncidentsRequirementsTimeTracksCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _IncidentsRequirementsTimeTracksCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.IncidentsRequirementsTimeTracksCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentIssueTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentIssueTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingOK_InvokeMethod);
                private static void _IncidentIssueTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueTimeTrackingOKMethod, sf);
                }
                private static global::System.Exception _IncidentIssueTimeTrackingOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.IncidentIssueTimeTrackingOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _IncidentIssueTimeTrackingOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.IncidentIssueTimeTrackingOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    IncidentIssueTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "IncidentIssueTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._IncidentIssueTimeTrackingCANCEL_InvokeMethod);
                private static void _IncidentIssueTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentIssueTimeTrackingCANCELMethod, sf);
                }
                private static global::System.Exception _IncidentIssueTimeTrackingCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.IncidentIssueTimeTrackingCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _IncidentIssueTimeTrackingCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.IncidentIssueTimeTrackingCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskRequirementTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskRequirementTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingOK_InvokeMethod);
                private static void _TaskRequirementTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskRequirementTimeTrackingOKMethod, sf);
                }
                private static global::System.Exception _TaskRequirementTimeTrackingOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TaskRequirementTimeTrackingOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TaskRequirementTimeTrackingOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TaskRequirementTimeTrackingOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskRequirementTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskRequirementTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskRequirementTimeTrackingCANCEL_InvokeMethod);
                private static void _TaskRequirementTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskRequirementTimeTrackingCANCELMethod, sf);
                }
                private static global::System.Exception _TaskRequirementTimeTrackingCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TaskRequirementTimeTrackingCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TaskRequirementTimeTrackingCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TaskRequirementTimeTrackingCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskIssueTimeTrackingOK = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskIssueTimeTrackingOK",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingOK_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingOK_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingOK_InvokeMethod);
                private static void _TaskIssueTimeTrackingOK_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueTimeTrackingOKMethod, sf);
                }
                private static global::System.Exception _TaskIssueTimeTrackingOK_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TaskIssueTimeTrackingOK_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TaskIssueTimeTrackingOK_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TaskIssueTimeTrackingOK_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TaskIssueTimeTrackingCANCEL = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TaskIssueTimeTrackingCANCEL",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingCANCEL_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingCANCEL_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TaskIssueTimeTrackingCANCEL_InvokeMethod);
                private static void _TaskIssueTimeTrackingCANCEL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TaskIssueTimeTrackingCANCELMethod, sf);
                }
                private static global::System.Exception _TaskIssueTimeTrackingCANCEL_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TaskIssueTimeTrackingCANCEL_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TaskIssueTimeTrackingCANCEL_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TaskIssueTimeTrackingCANCEL_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    TasksIssuesTimeTracksAddAndEditNew = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "TasksIssuesTimeTracksAddAndEditNew",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TasksIssuesTimeTracksAddAndEditNew_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TasksIssuesTimeTracksAddAndEditNew_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._TasksIssuesTimeTracksAddAndEditNew_InvokeMethod);
                private static void _TasksIssuesTimeTracksAddAndEditNew_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._TasksIssuesTimeTracksAddAndEditNewMethod, sf);
                }
                private static global::System.Exception _TasksIssuesTimeTracksAddAndEditNew_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.TasksIssuesTimeTracksAddAndEditNew_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _TasksIssuesTimeTracksAddAndEditNew_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.TasksIssuesTimeTracksAddAndEditNew_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureCommentsWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureCommentsWindow_InvokeMethod);
                private static void _OpenFeatureCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureCommentsWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentCommentsWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentCommentsWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentCommentsWindow_InvokeMethod);
                private static void _OpenIncidentCommentsWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentCommentsWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentCommentsWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentCommentsWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentCommentsWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentCommentsWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    ProjectTasksComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "ProjectTasksComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._ProjectTasksComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._ProjectTasksComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._ProjectTasksComments_InvokeMethod);
                private static void _ProjectTasksComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTasksCommentsMethod, sf);
                }
                private static global::System.Exception _ProjectTasksComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.ProjectTasksComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _ProjectTasksComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.ProjectTasksComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureReqTimeTrackWindow_InvokeMethod);
                private static void _OpenFeatureReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenFeatureIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentReqTimeTrackWindow_InvokeMethod);
                private static void _OpenIncidentReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenIncidentIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenTaskReqTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenTaskReqTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskReqTimeTrackWindow_InvokeMethod);
                private static void _OpenTaskReqTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskReqTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskReqTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskReqTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskReqTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskReqTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenTaskIssueTimeTrackWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenTaskIssueTimeTrackWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenTaskIssueTimeTrackWindow_InvokeMethod);
                private static void _OpenTaskIssueTimeTrackWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenTaskIssueTimeTrackWindowMethod, sf);
                }
                private static global::System.Exception _OpenTaskIssueTimeTrackWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenTaskIssueTimeTrackWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenTaskIssueTimeTrackWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenTaskIssueTimeTrackWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveFeatureComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveFeatureComments_InvokeMethod);
                private static void _SaveFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _SaveFeatureComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveFeatureComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveIncidentComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveIncidentComments_InvokeMethod);
                private static void _SaveIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _SaveIncidentComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveIncidentComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    SaveTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "SaveTaskComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._SaveTaskComments_InvokeMethod);
                private static void _SaveTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._SaveTaskCommentsMethod, sf);
                }
                private static global::System.Exception _SaveTaskComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.SaveTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _SaveTaskComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.SaveTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelFeatureComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelFeatureComments_InvokeMethod);
                private static void _CancelFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelFeatureCommentsMethod, sf);
                }
                private static global::System.Exception _CancelFeatureComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelFeatureComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelFeatureComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelFeatureComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelIncidentComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelIncidentComments_InvokeMethod);
                private static void _CancelIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelIncidentCommentsMethod, sf);
                }
                private static global::System.Exception _CancelIncidentComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelIncidentComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelIncidentComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelIncidentComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    CancelTaskComments = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "CancelTaskComments",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._CancelTaskComments_InvokeMethod);
                private static void _CancelTaskComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelTaskCommentsMethod, sf);
                }
                private static global::System.Exception _CancelTaskComments_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.CancelTaskComments_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _CancelTaskComments_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.CancelTaskComments_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenFeatureOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenFeatureOnTimeWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenFeatureOnTimeWindow_InvokeMethod);
                private static void _OpenFeatureOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenFeatureOnTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenFeatureOnTimeWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenFeatureOnTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenFeatureOnTimeWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenFeatureOnTimeWindow_Execute();
                }

                public static readonly global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry
                    OpenIncidentOnTimeWindow = new global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Entry(
                        "OpenIncidentOnTimeWindow",
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_Stub,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_CanInvoke,
                        global::LightSwitchApplication.ManageProjectAssignments.DetailsClass.MethodSetProperties._OpenIncidentOnTimeWindow_InvokeMethod);
                private static void _OpenIncidentOnTimeWindow_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ManageProjectAssignments.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.Client.ScreenMethod<global::LightSwitchApplication.ManageProjectAssignments, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass>.Data> c, global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, object sf)
                {
                    c(d, ref d._OpenIncidentOnTimeWindowMethod, sf);
                }
                private static global::System.Exception _OpenIncidentOnTimeWindow_CanInvoke(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args, global::System.Exception ex)
                {
                    bool result = true;
                    d.Screen.OpenIncidentOnTimeWindow_CanExecute(ref result);
                    return result ? null : ex;
                }
                private static void _OpenIncidentOnTimeWindow_InvokeMethod(global::LightSwitchApplication.ManageProjectAssignments.DetailsClass d, global::System.Collections.ObjectModel.ReadOnlyCollection<object> args)
                {
                    d.Screen.OpenIncidentOnTimeWindow_Execute();
                }

            }
        }
    }
}
