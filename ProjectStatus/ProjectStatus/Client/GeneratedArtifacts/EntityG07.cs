

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Configuration : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Configuration entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Configuration()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Configuration(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Configuration> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Configuration.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configuration_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Configuration.DetailsClass.SetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Configuration.DetailsClass.SetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Key
        {
            get
            {
                return global::LightSwitchApplication.Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Key);
            }
            set
            {
                global::LightSwitchApplication.Configuration.DetailsClass.SetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Key, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Key_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Key_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Key_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Value
        {
            get
            {
                return global::LightSwitchApplication.Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Value);
            }
            set
            {
                global::LightSwitchApplication.Configuration.DetailsClass.SetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Value, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Value_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ValueType
        {
            get
            {
                return global::LightSwitchApplication.Configuration.DetailsClass.GetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.ValueType);
            }
            set
            {
                global::LightSwitchApplication.Configuration.DetailsClass.SetValue(this, global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.ValueType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ValueType_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Configuration,
                global::LightSwitchApplication.Configuration.DetailsClass,
                global::LightSwitchApplication.Configuration.DetailsClass.IImplementation,
                global::LightSwitchApplication.Configuration.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>.Entry
                __ConfigurationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>.Entry(
                    global::LightSwitchApplication.Configuration.DetailsClass.__Configuration_CreateNew,
                    global::LightSwitchApplication.Configuration.DetailsClass.__Configuration_Created,
                    global::LightSwitchApplication.Configuration.DetailsClass.__Configuration_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Configuration __Configuration_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Configuration> es)
            {
                return new global::LightSwitchApplication.Configuration(es);
            }
            private static void __Configuration_Created(global::LightSwitchApplication.Configuration e)
            {
                e.Configuration_Created();
            }
            private static bool __Configuration_AllowSaveWithErrors(global::LightSwitchApplication.Configuration e)
            {
                bool result = false;
                e.Configuration_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Configuration.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string> Key
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Key) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string> Value
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.Value) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string> ValueType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties.ValueType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Key { get; set; }
                new string Value { get; set; }
                new string ValueType { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int>.Data> c, global::LightSwitchApplication.Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Configuration e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Configuration e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Configuration e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Configuration e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry
                    Key = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry(
                        "Key",
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_Stub,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_ComputeIsReadOnly,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_Validate,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_GetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_SetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Key_OnValueChanged);
                private static void _Key_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._Key, sf);
                }
                private static bool _Key_ComputeIsReadOnly(global::LightSwitchApplication.Configuration e)
                {
                    bool result = false;
                    e.Key_IsReadOnly(ref result);
                    return result;
                }
                private static void _Key_Validate(global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Key_Validate(r);
                }
                private static string _Key_GetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.Key;
                }
                private static void _Key_SetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Key = v;
                }
                private static void _Key_OnValueChanged(global::LightSwitchApplication.Configuration e)
                {
                    e.Key_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry
                    Value = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry(
                        "Value",
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_Stub,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_ComputeIsReadOnly,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_Validate,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_GetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_SetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._Value_OnValueChanged);
                private static void _Value_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._Value, sf);
                }
                private static bool _Value_ComputeIsReadOnly(global::LightSwitchApplication.Configuration e)
                {
                    bool result = false;
                    e.Value_IsReadOnly(ref result);
                    return result;
                }
                private static void _Value_Validate(global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Value_Validate(r);
                }
                private static string _Value_GetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.Value;
                }
                private static void _Value_SetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Value = v;
                }
                private static void _Value_OnValueChanged(global::LightSwitchApplication.Configuration e)
                {
                    e.Value_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry
                    ValueType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Entry(
                        "ValueType",
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_Stub,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_Validate,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_GetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_SetImplementationValue,
                        global::LightSwitchApplication.Configuration.DetailsClass.PropertySetProperties._ValueType_OnValueChanged);
                private static void _ValueType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Configuration.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data> c, global::LightSwitchApplication.Configuration.DetailsClass d, object sf)
                {
                    c(d, ref d._ValueType, sf);
                }
                private static bool _ValueType_ComputeIsReadOnly(global::LightSwitchApplication.Configuration e)
                {
                    bool result = false;
                    e.ValueType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ValueType_Validate(global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ValueType_Validate(r);
                }
                private static string _ValueType_GetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d)
                {
                    return d.ImplementationEntity.ValueType;
                }
                private static void _ValueType_SetImplementationValue(global::LightSwitchApplication.Configuration.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ValueType = v;
                }
                private static void _ValueType_OnValueChanged(global::LightSwitchApplication.Configuration e)
                {
                    e.ValueType_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data _Key;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data _Value;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Configuration, global::LightSwitchApplication.Configuration.DetailsClass, string>.Data _ValueType;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectVpn : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectVpn entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectVpn()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectVpn(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectVpn> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectVpn.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpn_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpn_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Url
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Url);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Url, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Url_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string User
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.User);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.User, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void User_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Password
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Password);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Password, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Password_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Password_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Password_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MoreInfo
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.MoreInfo);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.MoreInfo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectVpn.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.ProjectVpn.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectVpn,
                global::LightSwitchApplication.ProjectVpn.DetailsClass,
                global::LightSwitchApplication.ProjectVpn.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>.Entry
                __ProjectVpnEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectVpn.DetailsClass.__ProjectVpn_CreateNew,
                    global::LightSwitchApplication.ProjectVpn.DetailsClass.__ProjectVpn_Created,
                    global::LightSwitchApplication.ProjectVpn.DetailsClass.__ProjectVpn_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectVpn __ProjectVpn_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectVpn> es)
            {
                return new global::LightSwitchApplication.ProjectVpn(es);
            }
            private static void __ProjectVpn_Created(global::LightSwitchApplication.ProjectVpn e)
            {
                e.ProjectVpn_Created();
            }
            private static bool __ProjectVpn_AllowSaveWithErrors(global::LightSwitchApplication.ProjectVpn e)
            {
                bool result = false;
                e.ProjectVpn_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string> Url
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Url) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string> User
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.User) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string> Password
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Password) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string> MoreInfo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.MoreInfo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Type { get; set; }
                new string Url { get; set; }
                new string User { get; set; }
                new string Password { get; set; }
                new string MoreInfo { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry
                    Url = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry(
                        "Url",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Url_OnValueChanged);
                private static void _Url_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._Url, sf);
                }
                private static bool _Url_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.Url_IsReadOnly(ref result);
                    return result;
                }
                private static void _Url_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Url_Validate(r);
                }
                private static string _Url_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.Url;
                }
                private static void _Url_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Url = v;
                }
                private static void _Url_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.Url_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry
                    User = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry(
                        "User",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._User_OnValueChanged);
                private static void _User_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._User, sf);
                }
                private static bool _User_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.User_IsReadOnly(ref result);
                    return result;
                }
                private static void _User_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.User_Validate(r);
                }
                private static string _User_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.User;
                }
                private static void _User_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.User = v;
                }
                private static void _User_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.User_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry
                    Password = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry(
                        "Password",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Password_OnValueChanged);
                private static void _Password_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._Password, sf);
                }
                private static bool _Password_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.Password_IsReadOnly(ref result);
                    return result;
                }
                private static void _Password_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Password_Validate(r);
                }
                private static string _Password_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.Password;
                }
                private static void _Password_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Password = v;
                }
                private static void _Password_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.Password_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry
                    MoreInfo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Entry(
                        "MoreInfo",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._MoreInfo_OnValueChanged);
                private static void _MoreInfo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._MoreInfo, sf);
                }
                private static bool _MoreInfo_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.MoreInfo_IsReadOnly(ref result);
                    return result;
                }
                private static void _MoreInfo_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MoreInfo_Validate(r);
                }
                private static string _MoreInfo_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.MoreInfo;
                }
                private static void _MoreInfo_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MoreInfo = v;
                }
                private static void _MoreInfo_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.MoreInfo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectVpn.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectVpn.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.ProjectVpn e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.ProjectVpn.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectVpn.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectVpn e)
                {
                    e.Project_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data _Url;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data _User;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data _Password;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, string>.Data _MoreInfo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectVpn, global::LightSwitchApplication.ProjectVpn.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectFeature : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectFeature entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectFeature()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectFeature(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectFeature> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectFeature.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FeatureId
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.FeatureId);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.FeatureId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FeatureId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientId
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ClientId);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ClientId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DocumentName
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DocumentName);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DocumentName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DocumentName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SkyDriveLink
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.SkyDriveLink);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.SkyDriveLink, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Priority
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsApproved
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IsApproved);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IsApproved, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsApproved_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ApprovedDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ApprovedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApprovedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> AssignedDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.AssignedDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.AssignedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DODTeam
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DODTeam);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DODTeam, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TestingStatus
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TestingStatus);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TestingStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestingStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestingStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TestingStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ConsumedAnalysisHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedAnalysisHours);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedAnalysisHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ConsumedDevelopmentHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> PercentageCompleted
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PercentageCompleted);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PercentageCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CompletedDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.CompletedDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.CompletedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MergeStatus
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.MergeStatus);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.MergeStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MergeStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MergeStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MergeStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DevelopmentProjectName
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DevelopmentProjectName);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DevelopmentProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LastUpdate);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LastUpdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VisualStudioProjectName
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.VisualStudioProjectName);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.VisualStudioProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LabelFileName
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LabelFileName);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LabelFileName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal RemainingHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.RemainingHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal PercentageConsumed
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PercentageConsumed);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageConsumed_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageConsumed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdatedInLocalTime
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LastUpdatedInLocalTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdatedInLocalTime_Compute(ref global::System.DateTime result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdatedInLocalTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedDevHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedDevHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedDevHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedDevHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedAnalysisHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedAnalysisHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedAnalysisHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedAnalysisHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableOverHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.BillableOverHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableIssuesHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.BillableIssuesHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableIssuesHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableIssuesHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ReqTotalEstimate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ReqTotalEstimate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalEstimate_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalEstimate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ReqTotalBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ReqTotalBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal IssuesTotalEstimate
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IssuesTotalEstimate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalEstimate_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalEstimate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal IssuesTotalBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IssuesTotalBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> TotalEstimatedHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TotalEstimatedHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalEstimatedHours_Compute(ref global::System.Nullable<decimal> result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalEstimatedHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Developer
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ProjectFeatureComments);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureCommentsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ProjectFeatureComments);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimeTracking> TimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> TimeTrackingsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TDDExtension> TDDExtensions
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDExtensions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension> TDDExtensionsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDExtensions);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee PrimaryContact
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact);
            }
            set
            {
                global::LightSwitchApplication.ProjectFeature.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryContact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryContact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrimaryContact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Requirement> Requirements
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Requirements);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> RequirementsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Requirements);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Issues);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> IssuesQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Issues);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TDDObject> TDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDObjects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> TDDObjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectFeature.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDObjects);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectFeature,
                global::LightSwitchApplication.ProjectFeature.DetailsClass,
                global::LightSwitchApplication.ProjectFeature.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>.Entry
                __ProjectFeatureEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectFeature.DetailsClass.__ProjectFeature_CreateNew,
                    global::LightSwitchApplication.ProjectFeature.DetailsClass.__ProjectFeature_Created,
                    global::LightSwitchApplication.ProjectFeature.DetailsClass.__ProjectFeature_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectFeature __ProjectFeature_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectFeature> es)
            {
                return new global::LightSwitchApplication.ProjectFeature(es);
            }
            private static void __ProjectFeature_Created(global::LightSwitchApplication.ProjectFeature e)
            {
                e.ProjectFeature_Created();
            }
            private static bool __ProjectFeature_AllowSaveWithErrors(global::LightSwitchApplication.ProjectFeature e)
            {
                bool result = false;
                e.ProjectFeature_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> FeatureId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.FeatureId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> ClientId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ClientId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> DocumentName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DocumentName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> SkyDriveLink
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.SkyDriveLink) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool> IsApproved
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IsApproved) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>> ApprovedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ApprovedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>> AssignedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.AssignedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> DODTeam
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DODTeam) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> TestingStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TestingStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>> ConsumedAnalysisHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedAnalysisHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>> ConsumedDevelopmentHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>> PercentageCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PercentageCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>> CompletedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.CompletedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> MergeStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.MergeStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> DevelopmentProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.DevelopmentProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime> LastUpdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LastUpdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> VisualStudioProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.VisualStudioProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string> LabelFileName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LabelFileName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> RemainingHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.RemainingHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> PercentageConsumed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PercentageConsumed) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime> LastUpdatedInLocalTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.LastUpdatedInLocalTime) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> TrackedDevHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedDevHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> TrackedAnalysisHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedAnalysisHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> TrackedBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TrackedBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> BillableOverHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.BillableOverHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> BillableIssuesHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.BillableIssuesHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> ReqTotalEstimate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ReqTotalEstimate) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> ReqTotalBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ReqTotalBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> IssuesTotalEstimate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IssuesTotalEstimate) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal> IssuesTotalBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.IssuesTotalBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>> TotalEstimatedHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TotalEstimatedHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee> Developer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment> ProjectFeatureComments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ProjectFeatureComments) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking> TimeTrackings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TimeTrackings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension> TDDExtensions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDExtensions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee> PrimaryContact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement> Requirements
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Requirements) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Issues) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject> TDDObjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDObjects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string FeatureId { get; set; }
                new string ClientId { get; set; }
                new string DocumentName { get; set; }
                new string SkyDriveLink { get; set; }
                new int Priority { get; set; }
                new bool IsApproved { get; set; }
                new global::System.Nullable<global::System.DateTime> ApprovedDate { get; set; }
                new global::System.Nullable<global::System.DateTime> AssignedDate { get; set; }
                new string DODTeam { get; set; }
                new string Status { get; set; }
                new string TestingStatus { get; set; }
                new global::System.Nullable<int> ConsumedAnalysisHours { get; set; }
                new global::System.Nullable<int> ConsumedDevelopmentHours { get; set; }
                new global::System.Nullable<decimal> PercentageCompleted { get; set; }
                new global::System.Nullable<global::System.DateTime> CompletedDate { get; set; }
                new string MergeStatus { get; set; }
                new string DevelopmentProjectName { get; set; }
                new global::System.DateTime LastUpdate { get; set; }
                new string VisualStudioProjectName { get; set; }
                new string LabelFileName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Developer { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::System.Collections.IEnumerable ProjectFeatureComments { get; }
                new global::System.Collections.IEnumerable TimeTrackings { get; }
                new global::System.Collections.IEnumerable TDDExtensions { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation PrimaryContact { get; set; }
                new global::System.Collections.IEnumerable Requirements { get; }
                new global::System.Collections.IEnumerable Issues { get; }
                new global::System.Collections.IEnumerable TDDObjects { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    FeatureId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "FeatureId",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._FeatureId_OnValueChanged);
                private static void _FeatureId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._FeatureId, sf);
                }
                private static bool _FeatureId_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.FeatureId_IsReadOnly(ref result);
                    return result;
                }
                private static void _FeatureId_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FeatureId_Validate(r);
                }
                private static string _FeatureId_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.FeatureId;
                }
                private static void _FeatureId_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FeatureId = v;
                }
                private static void _FeatureId_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.FeatureId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    ClientId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "ClientId",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ClientId_OnValueChanged);
                private static void _ClientId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientId, sf);
                }
                private static bool _ClientId_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.ClientId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientId_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientId_Validate(r);
                }
                private static string _ClientId_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientId;
                }
                private static void _ClientId_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientId = v;
                }
                private static void _ClientId_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.ClientId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    DocumentName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "DocumentName",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DocumentName_OnValueChanged);
                private static void _DocumentName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._DocumentName, sf);
                }
                private static bool _DocumentName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.DocumentName_IsReadOnly(ref result);
                    return result;
                }
                private static void _DocumentName_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DocumentName_Validate(r);
                }
                private static string _DocumentName_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.DocumentName;
                }
                private static void _DocumentName_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DocumentName = v;
                }
                private static void _DocumentName_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.DocumentName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    SkyDriveLink = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "SkyDriveLink",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._SkyDriveLink_OnValueChanged);
                private static void _SkyDriveLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._SkyDriveLink, sf);
                }
                private static bool _SkyDriveLink_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.SkyDriveLink_IsReadOnly(ref result);
                    return result;
                }
                private static void _SkyDriveLink_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SkyDriveLink_Validate(r);
                }
                private static string _SkyDriveLink_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.SkyDriveLink;
                }
                private static void _SkyDriveLink_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SkyDriveLink = v;
                }
                private static void _SkyDriveLink_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.SkyDriveLink_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Entry(
                        "Priority",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static int _Priority_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool>.Entry
                    IsApproved = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool>.Entry(
                        "IsApproved",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IsApproved_OnValueChanged);
                private static void _IsApproved_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._IsApproved, sf);
                }
                private static bool _IsApproved_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.IsApproved_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsApproved_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsApproved_Validate(r);
                }
                private static bool _IsApproved_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.IsApproved;
                }
                private static void _IsApproved_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsApproved = v;
                }
                private static void _IsApproved_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.IsApproved_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ApprovedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ApprovedDate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ApprovedDate_OnValueChanged);
                private static void _ApprovedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ApprovedDate, sf);
                }
                private static bool _ApprovedDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.ApprovedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApprovedDate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApprovedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ApprovedDate_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.ApprovedDate;
                }
                private static void _ApprovedDate_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ApprovedDate = global::LightSwitchApplication.ProjectFeature.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ApprovedDate_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.ApprovedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    AssignedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "AssignedDate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._AssignedDate_OnValueChanged);
                private static void _AssignedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedDate, sf);
                }
                private static bool _AssignedDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.AssignedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedDate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _AssignedDate_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedDate;
                }
                private static void _AssignedDate_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.AssignedDate = global::LightSwitchApplication.ProjectFeature.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _AssignedDate_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.AssignedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    DODTeam = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "DODTeam",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DODTeam_OnValueChanged);
                private static void _DODTeam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._DODTeam, sf);
                }
                private static bool _DODTeam_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.DODTeam_IsReadOnly(ref result);
                    return result;
                }
                private static void _DODTeam_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DODTeam_Validate(r);
                }
                private static string _DODTeam_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.DODTeam;
                }
                private static void _DODTeam_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DODTeam = v;
                }
                private static void _DODTeam_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.DODTeam_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    TestingStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "TestingStatus",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TestingStatus_OnValueChanged);
                private static void _TestingStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TestingStatus, sf);
                }
                private static bool _TestingStatus_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.TestingStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _TestingStatus_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TestingStatus_Validate(r);
                }
                private static string _TestingStatus_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.TestingStatus;
                }
                private static void _TestingStatus_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TestingStatus = v;
                }
                private static void _TestingStatus_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.TestingStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Entry
                    ConsumedAnalysisHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ConsumedAnalysisHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_OnValueChanged);
                private static void _ConsumedAnalysisHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ConsumedAnalysisHours, sf);
                }
                private static bool _ConsumedAnalysisHours_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.ConsumedAnalysisHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConsumedAnalysisHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConsumedAnalysisHours_Validate(r);
                }
                private static global::System.Nullable<int> _ConsumedAnalysisHours_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.ConsumedAnalysisHours;
                }
                private static void _ConsumedAnalysisHours_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ConsumedAnalysisHours = v;
                }
                private static void _ConsumedAnalysisHours_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.ConsumedAnalysisHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Entry
                    ConsumedDevelopmentHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ConsumedDevelopmentHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_OnValueChanged);
                private static void _ConsumedDevelopmentHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ConsumedDevelopmentHours, sf);
                }
                private static bool _ConsumedDevelopmentHours_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.ConsumedDevelopmentHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConsumedDevelopmentHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConsumedDevelopmentHours_Validate(r);
                }
                private static global::System.Nullable<int> _ConsumedDevelopmentHours_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.ConsumedDevelopmentHours;
                }
                private static void _ConsumedDevelopmentHours_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ConsumedDevelopmentHours = v;
                }
                private static void _ConsumedDevelopmentHours_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.ConsumedDevelopmentHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Entry
                    PercentageCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "PercentageCompleted",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageCompleted_OnValueChanged);
                private static void _PercentageCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._PercentageCompleted, sf);
                }
                private static bool _PercentageCompleted_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.PercentageCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _PercentageCompleted_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PercentageCompleted_Validate(r);
                }
                private static global::System.Nullable<decimal> _PercentageCompleted_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.PercentageCompleted;
                }
                private static void _PercentageCompleted_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.PercentageCompleted = v;
                }
                private static void _PercentageCompleted_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.PercentageCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CompletedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CompletedDate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._CompletedDate_OnValueChanged);
                private static void _CompletedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._CompletedDate, sf);
                }
                private static bool _CompletedDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.CompletedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompletedDate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompletedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CompletedDate_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.CompletedDate;
                }
                private static void _CompletedDate_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CompletedDate = global::LightSwitchApplication.ProjectFeature.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CompletedDate_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.CompletedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    MergeStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "MergeStatus",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._MergeStatus_OnValueChanged);
                private static void _MergeStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._MergeStatus, sf);
                }
                private static bool _MergeStatus_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.MergeStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _MergeStatus_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MergeStatus_Validate(r);
                }
                private static string _MergeStatus_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.MergeStatus;
                }
                private static void _MergeStatus_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MergeStatus = v;
                }
                private static void _MergeStatus_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.MergeStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    DevelopmentProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "DevelopmentProjectName",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._DevelopmentProjectName_OnValueChanged);
                private static void _DevelopmentProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._DevelopmentProjectName, sf);
                }
                private static bool _DevelopmentProjectName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.DevelopmentProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _DevelopmentProjectName_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DevelopmentProjectName_Validate(r);
                }
                private static string _DevelopmentProjectName_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.DevelopmentProjectName;
                }
                private static void _DevelopmentProjectName_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DevelopmentProjectName = v;
                }
                private static void _DevelopmentProjectName_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.DevelopmentProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Entry
                    LastUpdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdate_OnValueChanged);
                private static void _LastUpdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdate, sf);
                }
                private static bool _LastUpdate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.LastUpdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastUpdate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdate_Validate(r);
                }
                private static global::System.DateTime _LastUpdate_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.LastUpdate;
                }
                private static void _LastUpdate_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LastUpdate = global::LightSwitchApplication.ProjectFeature.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LastUpdate_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.LastUpdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    VisualStudioProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "VisualStudioProjectName",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._VisualStudioProjectName_OnValueChanged);
                private static void _VisualStudioProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._VisualStudioProjectName, sf);
                }
                private static bool _VisualStudioProjectName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.VisualStudioProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _VisualStudioProjectName_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VisualStudioProjectName_Validate(r);
                }
                private static string _VisualStudioProjectName_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.VisualStudioProjectName;
                }
                private static void _VisualStudioProjectName_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VisualStudioProjectName = v;
                }
                private static void _VisualStudioProjectName_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.VisualStudioProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry
                    LabelFileName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Entry(
                        "LabelFileName",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LabelFileName_OnValueChanged);
                private static void _LabelFileName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._LabelFileName, sf);
                }
                private static bool _LabelFileName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.LabelFileName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LabelFileName_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LabelFileName_Validate(r);
                }
                private static string _LabelFileName_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.LabelFileName;
                }
                private static void _LabelFileName_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LabelFileName = v;
                }
                private static void _LabelFileName_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.LabelFileName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    RemainingHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "RemainingHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RemainingHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RemainingHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._RemainingHours_ComputeValue);
                private static void _RemainingHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._RemainingHours, sf);
                }
                private static void _RemainingHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RemainingHours_Validate(r);
                }
                private static decimal _RemainingHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.RemainingHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    PercentageConsumed = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "PercentageConsumed",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageConsumed_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageConsumed_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PercentageConsumed_ComputeValue);
                private static void _PercentageConsumed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._PercentageConsumed, sf);
                }
                private static void _PercentageConsumed_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PercentageConsumed_Validate(r);
                }
                private static decimal _PercentageConsumed_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.PercentageConsumed_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Entry
                    LastUpdatedInLocalTime = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdatedInLocalTime",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdatedInLocalTime_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdatedInLocalTime_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._LastUpdatedInLocalTime_ComputeValue);
                private static void _LastUpdatedInLocalTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdatedInLocalTime, sf);
                }
                private static void _LastUpdatedInLocalTime_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdatedInLocalTime_Validate(r);
                }
                private static global::System.DateTime _LastUpdatedInLocalTime_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    global::System.DateTime value = default(global::System.DateTime);
                    e.LastUpdatedInLocalTime_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    TrackedDevHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "TrackedDevHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedDevHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedDevHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedDevHours_ComputeValue);
                private static void _TrackedDevHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedDevHours, sf);
                }
                private static void _TrackedDevHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedDevHours_Validate(r);
                }
                private static decimal _TrackedDevHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.TrackedDevHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    TrackedAnalysisHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "TrackedAnalysisHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedAnalysisHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedAnalysisHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedAnalysisHours_ComputeValue);
                private static void _TrackedAnalysisHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedAnalysisHours, sf);
                }
                private static void _TrackedAnalysisHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedAnalysisHours_Validate(r);
                }
                private static decimal _TrackedAnalysisHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.TrackedAnalysisHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    TrackedBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "TrackedBillableHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedBillableHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedBillableHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TrackedBillableHours_ComputeValue);
                private static void _TrackedBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedBillableHours, sf);
                }
                private static void _TrackedBillableHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedBillableHours_Validate(r);
                }
                private static decimal _TrackedBillableHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.TrackedBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    BillableOverHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "BillableOverHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableOverHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableOverHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableOverHours_ComputeValue);
                private static void _BillableOverHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableOverHours, sf);
                }
                private static void _BillableOverHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableOverHours_Validate(r);
                }
                private static decimal _BillableOverHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.BillableOverHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    BillableIssuesHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "BillableIssuesHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableIssuesHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableIssuesHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._BillableIssuesHours_ComputeValue);
                private static void _BillableIssuesHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableIssuesHours, sf);
                }
                private static void _BillableIssuesHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableIssuesHours_Validate(r);
                }
                private static decimal _BillableIssuesHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.BillableIssuesHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    ReqTotalEstimate = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "ReqTotalEstimate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalEstimate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalEstimate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalEstimate_ComputeValue);
                private static void _ReqTotalEstimate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ReqTotalEstimate, sf);
                }
                private static void _ReqTotalEstimate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReqTotalEstimate_Validate(r);
                }
                private static decimal _ReqTotalEstimate_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.ReqTotalEstimate_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    ReqTotalBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "ReqTotalBillableHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalBillableHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalBillableHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ReqTotalBillableHours_ComputeValue);
                private static void _ReqTotalBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ReqTotalBillableHours, sf);
                }
                private static void _ReqTotalBillableHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReqTotalBillableHours_Validate(r);
                }
                private static decimal _ReqTotalBillableHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.ReqTotalBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    IssuesTotalEstimate = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "IssuesTotalEstimate",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalEstimate_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalEstimate_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalEstimate_ComputeValue);
                private static void _IssuesTotalEstimate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesTotalEstimate, sf);
                }
                private static void _IssuesTotalEstimate_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssuesTotalEstimate_Validate(r);
                }
                private static decimal _IssuesTotalEstimate_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.IssuesTotalEstimate_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry
                    IssuesTotalBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Entry(
                        "IssuesTotalBillableHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_ComputeValue);
                private static void _IssuesTotalBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesTotalBillableHours, sf);
                }
                private static void _IssuesTotalBillableHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssuesTotalBillableHours_Validate(r);
                }
                private static decimal _IssuesTotalBillableHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    decimal value = default(decimal);
                    e.IssuesTotalBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Entry
                    TotalEstimatedHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "TotalEstimatedHours",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TotalEstimatedHours_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TotalEstimatedHours_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TotalEstimatedHours_ComputeValue);
                private static void _TotalEstimatedHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalEstimatedHours, sf);
                }
                private static void _TotalEstimatedHours_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalEstimatedHours_Validate(r);
                }
                private static global::System.Nullable<decimal> _TotalEstimatedHours_ComputeValue(global::LightSwitchApplication.ProjectFeature e)
                {
                    global::System.Nullable<decimal> value = default(global::System.Nullable<decimal>);
                    e.TotalEstimatedHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Developer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Developer",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_Refresh,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Developer_OnValueChanged);
                private static void _Developer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Developer, sf);
                }
                private static bool _Developer_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.Developer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Developer_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Developer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Developer_GetCoreImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Developer;
                }
                private static global::LightSwitchApplication.Employee _Developer_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer, ref d._Developer);
                }
                private static void _Developer_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer, ref d._Developer, (i, ev) => i.Developer = ev, v);
                }
                private static void _Developer_Refresh(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Developer, ref d._Developer);
                }
                private static void _Developer_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.Developer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry
                    ProjectFeatureComments = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Entry(
                        "ProjectFeatureComments",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ProjectFeatureComments_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ProjectFeatureComments_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._ProjectFeatureComments_GetEntityCollection);
                private static void _ProjectFeatureComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeatureComments, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectFeatureComment> _ProjectFeatureComments_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProjectFeatureComment, global::LightSwitchApplication.ProjectFeatureComment.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.ProjectFeatureComments, ref d._ProjectFeatureComments);
                }
                private static global::System.Collections.IEnumerable _ProjectFeatureComments_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectFeatureComments;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    TimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "TimeTrackings",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TimeTrackings_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TimeTrackings_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TimeTrackings_GetEntityCollection);
                private static void _TimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTrackings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking> _TimeTrackings_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TimeTrackings, ref d._TimeTrackings);
                }
                private static global::System.Collections.IEnumerable _TimeTrackings_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeTrackings;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry
                    TDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry(
                        "TDDExtensions",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDExtensions_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDExtensions_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDExtensions_GetEntityCollection);
                private static void _TDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TDDExtensions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TDDExtension> _TDDExtensions_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TDDExtension, global::LightSwitchApplication.TDDExtension.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDExtensions, ref d._TDDExtensions);
                }
                private static global::System.Collections.IEnumerable _TDDExtensions_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.TDDExtensions;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    PrimaryContact = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "PrimaryContact",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_Validate,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_GetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_SetImplementationValue,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_Refresh,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._PrimaryContact_OnValueChanged);
                private static void _PrimaryContact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._PrimaryContact, sf);
                }
                private static bool _PrimaryContact_ComputeIsReadOnly(global::LightSwitchApplication.ProjectFeature e)
                {
                    bool result = false;
                    e.PrimaryContact_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrimaryContact_Validate(global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrimaryContact_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _PrimaryContact_GetCoreImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.PrimaryContact;
                }
                private static global::LightSwitchApplication.Employee _PrimaryContact_GetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact, ref d._PrimaryContact);
                }
                private static void _PrimaryContact_SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact, ref d._PrimaryContact, (i, ev) => i.PrimaryContact = ev, v);
                }
                private static void _PrimaryContact_Refresh(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.PrimaryContact, ref d._PrimaryContact);
                }
                private static void _PrimaryContact_OnValueChanged(global::LightSwitchApplication.ProjectFeature e)
                {
                    e.PrimaryContact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    Requirements = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "Requirements",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Requirements_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Requirements_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Requirements_GetEntityCollection);
                private static void _Requirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Requirements, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Requirement> _Requirements_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Requirements, ref d._Requirements);
                }
                private static global::System.Collections.IEnumerable _Requirements_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Requirements;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Issues_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._Issues_GetEntityCollection);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> _Issues_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.Issues, ref d._Issues);
                }
                private static global::System.Collections.IEnumerable _Issues_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.Issues;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    TDDObjects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "TDDObjects",
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDObjects_Stub,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDObjects_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties._TDDObjects_GetEntityCollection);
                private static void _TDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectFeature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ProjectFeature.DetailsClass d, object sf)
                {
                    c(d, ref d._TDDObjects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TDDObject> _TDDObjects_GetReferencedEntities(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TDDObject, global::LightSwitchApplication.TDDObject.DetailsClass>(global::LightSwitchApplication.ProjectFeature.DetailsClass.PropertySetProperties.TDDObjects, ref d._TDDObjects);
                }
                private static global::System.Collections.IEnumerable _TDDObjects_GetEntityCollection(global::LightSwitchApplication.ProjectFeature.DetailsClass d)
                {
                    return d.ImplementationEntity.TDDObjects;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _FeatureId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _ClientId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _DocumentName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _SkyDriveLink;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, int>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, bool>.Data _IsApproved;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ApprovedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _AssignedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _DODTeam;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _TestingStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Data _ConsumedAnalysisHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<int>>.Data _ConsumedDevelopmentHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Data _PercentageCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CompletedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _MergeStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _DevelopmentProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Data _LastUpdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _VisualStudioProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, string>.Data _LabelFileName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _RemainingHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _PercentageConsumed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.DateTime>.Data _LastUpdatedInLocalTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _TrackedDevHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _TrackedAnalysisHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _TrackedBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _BillableOverHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _BillableIssuesHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _ReqTotalEstimate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _ReqTotalBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _IssuesTotalEstimate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, decimal>.Data _IssuesTotalBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::System.Nullable<decimal>>.Data _TotalEstimatedHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Data _Developer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.ProjectFeatureComment>.Data _ProjectFeatureComments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _TimeTrackings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data _TDDExtensions;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Employee>.Data _PrimaryContact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Requirement>.Data _Requirements;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _TDDObjects;
            
        }
    
        #endregion
    }
    
    #endregion
}
