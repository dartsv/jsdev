

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Customer : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Customer entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Customer()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Customer(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Customer> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Customer.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customer_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserID
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.UserID);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.UserID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FullName
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FullName);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FullName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FullName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirstName
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FirstName);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FirstName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LastName
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.LastName);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.LastName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.Customer.DetailsClass.GetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.Customer.DetailsClass.SetValue(this, global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Customer,
                global::LightSwitchApplication.Customer.DetailsClass,
                global::LightSwitchApplication.Customer.DetailsClass.IImplementation,
                global::LightSwitchApplication.Customer.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>.Entry
                __CustomerEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>.Entry(
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_CreateNew,
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_Created,
                    global::LightSwitchApplication.Customer.DetailsClass.__Customer_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Customer __Customer_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Customer> es)
            {
                return new global::LightSwitchApplication.Customer(es);
            }
            private static void __Customer_Created(global::LightSwitchApplication.Customer e)
            {
                e.Customer_Created();
            }
            private static bool __Customer_AllowSaveWithErrors(global::LightSwitchApplication.Customer e)
            {
                bool result = false;
                e.Customer_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Customer.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> UserID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.UserID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> FullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FullName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> FirstName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.FirstName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> LastName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.LastName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string UserID { get; set; }
                new string FullName { get; set; }
                new string FirstName { get; set; }
                new string LastName { get; set; }
                new string Title { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    UserID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "UserID",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._UserID_OnValueChanged);
                private static void _UserID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._UserID, sf);
                }
                private static bool _UserID_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.UserID_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserID_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserID_Validate(r);
                }
                private static string _UserID_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.UserID;
                }
                private static void _UserID_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UserID = v;
                }
                private static void _UserID_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.UserID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    FullName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "FullName",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FullName_OnValueChanged);
                private static void _FullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._FullName, sf);
                }
                private static bool _FullName_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.FullName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FullName_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FullName_Validate(r);
                }
                private static string _FullName_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.FullName;
                }
                private static void _FullName_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FullName = v;
                }
                private static void _FullName_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.FullName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    FirstName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "FirstName",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._FirstName_OnValueChanged);
                private static void _FirstName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._FirstName, sf);
                }
                private static bool _FirstName_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.FirstName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirstName_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirstName_Validate(r);
                }
                private static string _FirstName_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.FirstName;
                }
                private static void _FirstName_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FirstName = v;
                }
                private static void _FirstName_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.FirstName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    LastName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "LastName",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._LastName_OnValueChanged);
                private static void _LastName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._LastName, sf);
                }
                private static bool _LastName_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.LastName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastName_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastName_Validate(r);
                }
                private static string _LastName_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.LastName;
                }
                private static void _LastName_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LastName = v;
                }
                private static void _LastName_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.LastName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Customer.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Customer.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.Customer e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.Customer.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Customer.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.Customer e)
                {
                    e.Project_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _UserID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _FullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _FirstName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _LastName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Customer, global::LightSwitchApplication.Customer.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Client : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Client entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Client()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Client(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Client> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Client.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// Account number of the client
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Account
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Account);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Account, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Changed();

        /// <summary>
        /// Defines if the client is currently active
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsActive
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// Defines if the client is an internal client
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsInternal
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsInternal);
            }
            set
            {
                global::LightSwitchApplication.Client.DetailsClass.SetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsInternal, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInternal_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInternal_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInternal_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Project> Projects
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetValue(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Projects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Project> ProjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.Client.DetailsClass.GetQuery(this, global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Projects);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Client,
                global::LightSwitchApplication.Client.DetailsClass,
                global::LightSwitchApplication.Client.DetailsClass.IImplementation,
                global::LightSwitchApplication.Client.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>.Entry
                __ClientEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>.Entry(
                    global::LightSwitchApplication.Client.DetailsClass.__Client_CreateNew,
                    global::LightSwitchApplication.Client.DetailsClass.__Client_Created,
                    global::LightSwitchApplication.Client.DetailsClass.__Client_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Client __Client_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Client> es)
            {
                return new global::LightSwitchApplication.Client(es);
            }
            private static void __Client_Created(global::LightSwitchApplication.Client e)
            {
                e.Client_Created();
            }
            private static bool __Client_AllowSaveWithErrors(global::LightSwitchApplication.Client e)
            {
                bool result = false;
                e.Client_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Client.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string> Account
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Account) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool> IsInternal
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.IsInternal) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project> Projects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Projects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Name { get; set; }
                new string Account { get; set; }
                new bool IsActive { get; set; }
                new bool IsInternal { get; set; }
                new global::System.Collections.IEnumerable Projects { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Entry
                    Account = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Entry(
                        "Account",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Account_OnValueChanged);
                private static void _Account_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._Account, sf);
                }
                private static bool _Account_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.Account_IsReadOnly(ref result);
                    return result;
                }
                private static void _Account_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Account_Validate(r);
                }
                private static string _Account_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.Account;
                }
                private static void _Account_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Account = v;
                }
                private static void _Account_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.Account_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static bool _IsActive_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Entry
                    IsInternal = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Entry(
                        "IsInternal",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_ComputeIsReadOnly,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_Validate,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_GetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_SetImplementationValue,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._IsInternal_OnValueChanged);
                private static void _IsInternal_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInternal, sf);
                }
                private static bool _IsInternal_ComputeIsReadOnly(global::LightSwitchApplication.Client e)
                {
                    bool result = false;
                    e.IsInternal_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInternal_Validate(global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInternal_Validate(r);
                }
                private static bool _IsInternal_GetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInternal;
                }
                private static void _IsInternal_SetImplementationValue(global::LightSwitchApplication.Client.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsInternal = v;
                }
                private static void _IsInternal_OnValueChanged(global::LightSwitchApplication.Client e)
                {
                    e.IsInternal_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Projects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Projects",
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Projects_Stub,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Projects_GetReferencedEntities,
                        global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties._Projects_GetEntityCollection);
                private static void _Projects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Client.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.Client.DetailsClass d, object sf)
                {
                    c(d, ref d._Projects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> _Projects_GetReferencedEntities(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.Client.DetailsClass.PropertySetProperties.Projects, ref d._Projects);
                }
                private static global::System.Collections.IEnumerable _Projects_GetEntityCollection(global::LightSwitchApplication.Client.DetailsClass d)
                {
                    return d.ImplementationEntity.Projects;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, string>.Data _Account;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, bool>.Data _IsInternal;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass, global::LightSwitchApplication.Project>.Data _Projects;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeTracking : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TimeTracking entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeTracking()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeTracking(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeTracking> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TimeTracking.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracking_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracking_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsForIssue
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.IsForIssue);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.IsForIssue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Task
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Task);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Task, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime WorkDate
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.WorkDate);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.WorkDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.StartTime);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.StartTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.EndTime);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.EndTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Chargeable
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Chargeable);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Chargeable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Chargeable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Chargeable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Chargeable_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Hours
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Hours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectIncident ProjectIncident
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectFeature ProjectFeature
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectTask ProjectTask
        {
            get
            {
                return global::LightSwitchApplication.TimeTracking.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask);
            }
            set
            {
                global::LightSwitchApplication.TimeTracking.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TimeTracking,
                global::LightSwitchApplication.TimeTracking.DetailsClass,
                global::LightSwitchApplication.TimeTracking.DetailsClass.IImplementation,
                global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>.Entry
                __TimeTrackingEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeTracking.DetailsClass.__TimeTracking_CreateNew,
                    global::LightSwitchApplication.TimeTracking.DetailsClass.__TimeTracking_Created,
                    global::LightSwitchApplication.TimeTracking.DetailsClass.__TimeTracking_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TimeTracking __TimeTracking_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeTracking> es)
            {
                return new global::LightSwitchApplication.TimeTracking(es);
            }
            private static void __TimeTracking_Created(global::LightSwitchApplication.TimeTracking e)
            {
                e.TimeTracking_Created();
            }
            private static bool __TimeTracking_AllowSaveWithErrors(global::LightSwitchApplication.TimeTracking e)
            {
                bool result = false;
                e.TimeTracking_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool> IsForIssue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.IsForIssue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string> Task
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Task) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime> WorkDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.WorkDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime> StartTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.StartTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime> EndTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.EndTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string> Chargeable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Chargeable) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal> Hours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Hours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncident
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature> ProjectFeature
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTask
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Type { get; set; }
                new bool IsForIssue { get; set; }
                new string Task { get; set; }
                new global::System.DateTime WorkDate { get; set; }
                new global::System.DateTime StartTime { get; set; }
                new global::System.DateTime EndTime { get; set; }
                new string Chargeable { get; set; }
                new string Notes { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Employee { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectIncident { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectFeature { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectTask { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool>.Entry
                    IsForIssue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool>.Entry(
                        "IsForIssue",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._IsForIssue_OnValueChanged);
                private static void _IsForIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._IsForIssue, sf);
                }
                private static bool _IsForIssue_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.IsForIssue_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsForIssue_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsForIssue_Validate(r);
                }
                private static bool _IsForIssue_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.IsForIssue;
                }
                private static void _IsForIssue_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsForIssue = v;
                }
                private static void _IsForIssue_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.IsForIssue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry
                    Task = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry(
                        "Task",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Task_OnValueChanged);
                private static void _Task_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Task, sf);
                }
                private static bool _Task_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Task_IsReadOnly(ref result);
                    return result;
                }
                private static void _Task_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Task_Validate(r);
                }
                private static string _Task_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Task;
                }
                private static void _Task_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Task = v;
                }
                private static void _Task_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Task_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry
                    WorkDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry(
                        "WorkDate",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._WorkDate_OnValueChanged);
                private static void _WorkDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkDate, sf);
                }
                private static bool _WorkDate_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.WorkDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkDate_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkDate_Validate(r);
                }
                private static global::System.DateTime _WorkDate_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkDate;
                }
                private static void _WorkDate_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.WorkDate = global::LightSwitchApplication.TimeTracking.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _WorkDate_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.WorkDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry
                    StartTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry(
                        "StartTime",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._StartTime_OnValueChanged);
                private static void _StartTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._StartTime, sf);
                }
                private static bool _StartTime_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.StartTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartTime_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartTime_Validate(r);
                }
                private static global::System.DateTime _StartTime_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.StartTime;
                }
                private static void _StartTime_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartTime = global::LightSwitchApplication.TimeTracking.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartTime_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.StartTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry
                    EndTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Entry(
                        "EndTime",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._EndTime_OnValueChanged);
                private static void _EndTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._EndTime, sf);
                }
                private static bool _EndTime_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.EndTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndTime_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndTime_Validate(r);
                }
                private static global::System.DateTime _EndTime_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.EndTime;
                }
                private static void _EndTime_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndTime = global::LightSwitchApplication.TimeTracking.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EndTime_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.EndTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry
                    Chargeable = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry(
                        "Chargeable",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Chargeable_OnValueChanged);
                private static void _Chargeable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Chargeable, sf);
                }
                private static bool _Chargeable_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Chargeable_IsReadOnly(ref result);
                    return result;
                }
                private static void _Chargeable_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Chargeable_Validate(r);
                }
                private static string _Chargeable_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Chargeable;
                }
                private static void _Chargeable_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Chargeable = v;
                }
                private static void _Chargeable_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Chargeable_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal>.Entry
                    Hours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal>.Entry(
                        "Hours",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Hours_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Hours_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Hours_ComputeValue);
                private static void _Hours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Hours, sf);
                }
                private static void _Hours_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hours_Validate(r);
                }
                private static decimal _Hours_ComputeValue(global::LightSwitchApplication.TimeTracking e)
                {
                    decimal value = default(decimal);
                    e.Hours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_Refresh,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Employee_GetCoreImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static global::LightSwitchApplication.Employee _Employee_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee, ref d._Employee, (i, ev) => i.Employee = ev, v);
                }
                private static void _Employee_Refresh(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.Employee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncident = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncident",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_Refresh,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectIncident_OnValueChanged);
                private static void _ProjectIncident_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncident, sf);
                }
                private static bool _ProjectIncident_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.ProjectIncident_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectIncident_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectIncident_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectIncident_GetCoreImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectIncident;
                }
                private static global::LightSwitchApplication.ProjectIncident _ProjectIncident_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::LightSwitchApplication.ProjectIncident v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident, (i, ev) => i.ProjectIncident = ev, v);
                }
                private static void _ProjectIncident_Refresh(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.ProjectIncident_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    ProjectFeature = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "ProjectFeature",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_Refresh,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectFeature_OnValueChanged);
                private static void _ProjectFeature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeature, sf);
                }
                private static bool _ProjectFeature_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.ProjectFeature_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectFeature_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectFeature_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectFeature_GetCoreImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectFeature;
                }
                private static global::LightSwitchApplication.ProjectFeature _ProjectFeature_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::LightSwitchApplication.ProjectFeature v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature, (i, ev) => i.ProjectFeature = ev, v);
                }
                private static void _ProjectFeature_Refresh(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.ProjectFeature_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTask = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTask",
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_Stub,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_Validate,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_GetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_SetImplementationValue,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_Refresh,
                        global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties._ProjectTask_OnValueChanged);
                private static void _ProjectTask_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTracking.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.TimeTracking.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTask, sf);
                }
                private static bool _ProjectTask_ComputeIsReadOnly(global::LightSwitchApplication.TimeTracking e)
                {
                    bool result = false;
                    e.ProjectTask_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectTask_Validate(global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectTask_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectTask_GetCoreImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectTask;
                }
                private static global::LightSwitchApplication.ProjectTask _ProjectTask_GetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectTask, global::LightSwitchApplication.ProjectTask.DetailsClass>(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass d, global::LightSwitchApplication.ProjectTask v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask, (i, ev) => i.ProjectTask = ev, v);
                }
                private static void _ProjectTask_Refresh(global::LightSwitchApplication.TimeTracking.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTracking.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_OnValueChanged(global::LightSwitchApplication.TimeTracking e)
                {
                    e.ProjectTask_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, bool>.Data _IsForIssue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data _Task;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data _WorkDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data _StartTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::System.DateTime>.Data _EndTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data _Chargeable;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, decimal>.Data _Hours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncident;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _ProjectFeature;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTask;
            
        }
    
        #endregion
    }
    
    #endregion
}
