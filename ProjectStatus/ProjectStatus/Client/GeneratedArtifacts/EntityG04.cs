

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewHeader : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ReviewHeader entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReviewHeader()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReviewHeader(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReviewHeader> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ReviewHeader.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ReviewDate
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewDate);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewDate_Changed();

        /// <summary>
        /// Starting date of the review time period.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TimePeriodCoveredStart
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredStart);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredStart, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredStart_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredStart_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredStart_Changed();

        /// <summary>
        /// Ending date of the review time period.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TimePeriodCoveredEnd
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredEnd);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredEnd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredEnd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredEnd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimePeriodCoveredEnd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReviewType
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewType);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewType_Changed();

        /// <summary>
        /// Supervisor at time of review creation.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Supervisor
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Supervisor);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Supervisor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supervisor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supervisor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Supervisor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectsCovered
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ProjectsCovered);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ProjectsCovered, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsCovered_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsCovered_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsCovered_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Role
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Role);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Role, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Role_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Promote
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Promote);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Promote, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Promote_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Promote_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Promote_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Strengths
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Strengths);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Strengths, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strengths_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DevelopmentNeeds
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.DevelopmentNeeds);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.DevelopmentNeeds, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentNeeds_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentNeeds_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentNeeds_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int SummaryRating
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SummaryRating);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SummaryRating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SummaryRating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SummaryRating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SummaryRating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MajorAssignments
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.MajorAssignments);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.MajorAssignments, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MajorAssignments_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MajorAssignments_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MajorAssignments_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool EmployeeHasSigned
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeHasSigned);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeHasSigned, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeHasSigned_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeHasSigned_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeHasSigned_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SignedStatus
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SignedStatus);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SignedStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignedStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignedStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SignedStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Department
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Department);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Department, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool Published
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Published);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Published, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Published_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Published_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Published_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmployeeReviewerFullName
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeReviewerFullName);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeReviewerFullName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeReviewerFullName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeReviewerFullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeReviewerFullName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmployeeSupervisorFullName
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeSupervisorFullName);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeSupervisorFullName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSupervisorFullName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSupervisorFullName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSupervisorFullName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmployeeName
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReviewerName
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewerName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewerName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReviewHeaderDept
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewHeaderDept);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderDept_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaderDept_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Reviewer
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reviewer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reviewer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Reviewer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ReviewCritieria> ReviewCritieria
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewCritieria);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ReviewCritieria> ReviewCritieriaQuery
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetQuery(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewCritieria);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Signature> Signatures
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Signatures);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Signature> SignaturesQuery
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetQuery(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Signatures);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TrainingPlan> TrainingPlans
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TrainingPlans);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TrainingPlan> TrainingPlansQuery
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetQuery(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TrainingPlans);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee SupervisorEmployee
        {
            get
            {
                return global::LightSwitchApplication.ReviewHeader.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee);
            }
            set
            {
                global::LightSwitchApplication.ReviewHeader.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupervisorEmployee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupervisorEmployee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupervisorEmployee_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ReviewHeader,
                global::LightSwitchApplication.ReviewHeader.DetailsClass,
                global::LightSwitchApplication.ReviewHeader.DetailsClass.IImplementation,
                global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>.Entry
                __ReviewHeaderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewHeader.DetailsClass.__ReviewHeader_CreateNew,
                    global::LightSwitchApplication.ReviewHeader.DetailsClass.__ReviewHeader_Created,
                    global::LightSwitchApplication.ReviewHeader.DetailsClass.__ReviewHeader_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ReviewHeader __ReviewHeader_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReviewHeader> es)
            {
                return new global::LightSwitchApplication.ReviewHeader(es);
            }
            private static void __ReviewHeader_Created(global::LightSwitchApplication.ReviewHeader e)
            {
                e.ReviewHeader_Created();
            }
            private static bool __ReviewHeader_AllowSaveWithErrors(global::LightSwitchApplication.ReviewHeader e)
            {
                bool result = false;
                e.ReviewHeader_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime> ReviewDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime> TimePeriodCoveredStart
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredStart) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime> TimePeriodCoveredEnd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TimePeriodCoveredEnd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> ReviewType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> Supervisor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Supervisor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> ProjectsCovered
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ProjectsCovered) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> Role
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Role) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool> Promote
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Promote) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> Strengths
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Strengths) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> DevelopmentNeeds
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.DevelopmentNeeds) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int> SummaryRating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SummaryRating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> MajorAssignments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.MajorAssignments) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool> EmployeeHasSigned
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeHasSigned) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> SignedStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SignedStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> Department
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Department) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool> Published
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Published) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> EmployeeReviewerFullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeReviewerFullName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> EmployeeSupervisorFullName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeSupervisorFullName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> EmployeeName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.EmployeeName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> ReviewerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewerName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string> ReviewHeaderDept
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewHeaderDept) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee> Reviewer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria> ReviewCritieria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewCritieria) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature> Signatures
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Signatures) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan> TrainingPlans
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TrainingPlans) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee> SupervisorEmployee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime ReviewDate { get; set; }
                new global::System.DateTime TimePeriodCoveredStart { get; set; }
                new global::System.DateTime TimePeriodCoveredEnd { get; set; }
                new string ReviewType { get; set; }
                new string Supervisor { get; set; }
                new string ProjectsCovered { get; set; }
                new string Role { get; set; }
                new bool Promote { get; set; }
                new string Strengths { get; set; }
                new string DevelopmentNeeds { get; set; }
                new int SummaryRating { get; set; }
                new string MajorAssignments { get; set; }
                new bool EmployeeHasSigned { get; set; }
                new string SignedStatus { get; set; }
                new string Department { get; set; }
                new bool Published { get; set; }
                new string EmployeeReviewerFullName { get; set; }
                new string EmployeeSupervisorFullName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Employee { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Reviewer { get; set; }
                new global::System.Collections.IEnumerable ReviewCritieria { get; }
                new global::System.Collections.IEnumerable Signatures { get; }
                new global::System.Collections.IEnumerable TrainingPlans { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SupervisorEmployee { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry
                    ReviewDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry(
                        "ReviewDate",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewDate_OnValueChanged);
                private static void _ReviewDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewDate, sf);
                }
                private static bool _ReviewDate_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.ReviewDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReviewDate_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewDate_Validate(r);
                }
                private static global::System.DateTime _ReviewDate_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ReviewDate;
                }
                private static void _ReviewDate_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ReviewDate = global::LightSwitchApplication.ReviewHeader.DetailsClass.TruncateDate(v);
                }
                private static void _ReviewDate_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.ReviewDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry
                    TimePeriodCoveredStart = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry(
                        "TimePeriodCoveredStart",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredStart_OnValueChanged);
                private static void _TimePeriodCoveredStart_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._TimePeriodCoveredStart, sf);
                }
                private static bool _TimePeriodCoveredStart_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.TimePeriodCoveredStart_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimePeriodCoveredStart_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimePeriodCoveredStart_Validate(r);
                }
                private static global::System.DateTime _TimePeriodCoveredStart_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.TimePeriodCoveredStart;
                }
                private static void _TimePeriodCoveredStart_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TimePeriodCoveredStart = global::LightSwitchApplication.ReviewHeader.DetailsClass.TruncateDate(v);
                }
                private static void _TimePeriodCoveredStart_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.TimePeriodCoveredStart_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry
                    TimePeriodCoveredEnd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Entry(
                        "TimePeriodCoveredEnd",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TimePeriodCoveredEnd_OnValueChanged);
                private static void _TimePeriodCoveredEnd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._TimePeriodCoveredEnd, sf);
                }
                private static bool _TimePeriodCoveredEnd_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.TimePeriodCoveredEnd_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimePeriodCoveredEnd_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimePeriodCoveredEnd_Validate(r);
                }
                private static global::System.DateTime _TimePeriodCoveredEnd_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.TimePeriodCoveredEnd;
                }
                private static void _TimePeriodCoveredEnd_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TimePeriodCoveredEnd = global::LightSwitchApplication.ReviewHeader.DetailsClass.TruncateDate(v);
                }
                private static void _TimePeriodCoveredEnd_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.TimePeriodCoveredEnd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    ReviewType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "ReviewType",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewType_OnValueChanged);
                private static void _ReviewType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewType, sf);
                }
                private static bool _ReviewType_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.ReviewType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReviewType_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewType_Validate(r);
                }
                private static string _ReviewType_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ReviewType;
                }
                private static void _ReviewType_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReviewType = v;
                }
                private static void _ReviewType_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.ReviewType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    Supervisor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "Supervisor",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Supervisor_OnValueChanged);
                private static void _Supervisor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Supervisor, sf);
                }
                private static bool _Supervisor_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Supervisor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Supervisor_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Supervisor_Validate(r);
                }
                private static string _Supervisor_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Supervisor;
                }
                private static void _Supervisor_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Supervisor = v;
                }
                private static void _Supervisor_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Supervisor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    ProjectsCovered = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "ProjectsCovered",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ProjectsCovered_OnValueChanged);
                private static void _ProjectsCovered_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectsCovered, sf);
                }
                private static bool _ProjectsCovered_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.ProjectsCovered_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectsCovered_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectsCovered_Validate(r);
                }
                private static string _ProjectsCovered_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectsCovered;
                }
                private static void _ProjectsCovered_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectsCovered = v;
                }
                private static void _ProjectsCovered_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.ProjectsCovered_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    Role = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "Role",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Role_OnValueChanged);
                private static void _Role_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Role, sf);
                }
                private static bool _Role_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Role_IsReadOnly(ref result);
                    return result;
                }
                private static void _Role_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Role_Validate(r);
                }
                private static string _Role_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Role;
                }
                private static void _Role_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Role = v;
                }
                private static void _Role_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Role_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry
                    Promote = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry(
                        "Promote",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Promote_OnValueChanged);
                private static void _Promote_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Promote, sf);
                }
                private static bool _Promote_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Promote_IsReadOnly(ref result);
                    return result;
                }
                private static void _Promote_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Promote_Validate(r);
                }
                private static bool _Promote_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Promote;
                }
                private static void _Promote_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Promote = v;
                }
                private static void _Promote_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Promote_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    Strengths = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "Strengths",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Strengths_OnValueChanged);
                private static void _Strengths_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Strengths, sf);
                }
                private static bool _Strengths_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Strengths_IsReadOnly(ref result);
                    return result;
                }
                private static void _Strengths_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Strengths_Validate(r);
                }
                private static string _Strengths_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Strengths;
                }
                private static void _Strengths_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Strengths = v;
                }
                private static void _Strengths_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Strengths_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    DevelopmentNeeds = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "DevelopmentNeeds",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._DevelopmentNeeds_OnValueChanged);
                private static void _DevelopmentNeeds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._DevelopmentNeeds, sf);
                }
                private static bool _DevelopmentNeeds_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.DevelopmentNeeds_IsReadOnly(ref result);
                    return result;
                }
                private static void _DevelopmentNeeds_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DevelopmentNeeds_Validate(r);
                }
                private static string _DevelopmentNeeds_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.DevelopmentNeeds;
                }
                private static void _DevelopmentNeeds_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DevelopmentNeeds = v;
                }
                private static void _DevelopmentNeeds_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.DevelopmentNeeds_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Entry
                    SummaryRating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Entry(
                        "SummaryRating",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SummaryRating_OnValueChanged);
                private static void _SummaryRating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SummaryRating, sf);
                }
                private static bool _SummaryRating_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.SummaryRating_IsReadOnly(ref result);
                    return result;
                }
                private static void _SummaryRating_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SummaryRating_Validate(r);
                }
                private static int _SummaryRating_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SummaryRating;
                }
                private static void _SummaryRating_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, int v)
                {
                    d.ImplementationEntity.SummaryRating = v;
                }
                private static void _SummaryRating_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.SummaryRating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    MajorAssignments = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "MajorAssignments",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._MajorAssignments_OnValueChanged);
                private static void _MajorAssignments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._MajorAssignments, sf);
                }
                private static bool _MajorAssignments_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.MajorAssignments_IsReadOnly(ref result);
                    return result;
                }
                private static void _MajorAssignments_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MajorAssignments_Validate(r);
                }
                private static string _MajorAssignments_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.MajorAssignments;
                }
                private static void _MajorAssignments_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MajorAssignments = v;
                }
                private static void _MajorAssignments_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.MajorAssignments_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry
                    EmployeeHasSigned = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry(
                        "EmployeeHasSigned",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeHasSigned_OnValueChanged);
                private static void _EmployeeHasSigned_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeHasSigned, sf);
                }
                private static bool _EmployeeHasSigned_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.EmployeeHasSigned_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeHasSigned_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeHasSigned_Validate(r);
                }
                private static bool _EmployeeHasSigned_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeHasSigned;
                }
                private static void _EmployeeHasSigned_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.EmployeeHasSigned = v;
                }
                private static void _EmployeeHasSigned_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.EmployeeHasSigned_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    SignedStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "SignedStatus",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SignedStatus_OnValueChanged);
                private static void _SignedStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SignedStatus, sf);
                }
                private static bool _SignedStatus_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.SignedStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _SignedStatus_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SignedStatus_Validate(r);
                }
                private static string _SignedStatus_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SignedStatus;
                }
                private static void _SignedStatus_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SignedStatus = v;
                }
                private static void _SignedStatus_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.SignedStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    Department = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "Department",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Department_OnValueChanged);
                private static void _Department_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Department, sf);
                }
                private static bool _Department_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Department_IsReadOnly(ref result);
                    return result;
                }
                private static void _Department_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Department_Validate(r);
                }
                private static string _Department_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Department;
                }
                private static void _Department_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Department = v;
                }
                private static void _Department_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Department_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry
                    Published = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Entry(
                        "Published",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Published_OnValueChanged);
                private static void _Published_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Published, sf);
                }
                private static bool _Published_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Published_IsReadOnly(ref result);
                    return result;
                }
                private static void _Published_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Published_Validate(r);
                }
                private static bool _Published_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Published;
                }
                private static void _Published_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.Published = v;
                }
                private static void _Published_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Published_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    EmployeeReviewerFullName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "EmployeeReviewerFullName",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeReviewerFullName_OnValueChanged);
                private static void _EmployeeReviewerFullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeReviewerFullName, sf);
                }
                private static bool _EmployeeReviewerFullName_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.EmployeeReviewerFullName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeReviewerFullName_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeReviewerFullName_Validate(r);
                }
                private static string _EmployeeReviewerFullName_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeReviewerFullName;
                }
                private static void _EmployeeReviewerFullName_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmployeeReviewerFullName = v;
                }
                private static void _EmployeeReviewerFullName_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.EmployeeReviewerFullName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    EmployeeSupervisorFullName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "EmployeeSupervisorFullName",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeSupervisorFullName_OnValueChanged);
                private static void _EmployeeSupervisorFullName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeSupervisorFullName, sf);
                }
                private static bool _EmployeeSupervisorFullName_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.EmployeeSupervisorFullName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeSupervisorFullName_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeSupervisorFullName_Validate(r);
                }
                private static string _EmployeeSupervisorFullName_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeSupervisorFullName;
                }
                private static void _EmployeeSupervisorFullName_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EmployeeSupervisorFullName = v;
                }
                private static void _EmployeeSupervisorFullName_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.EmployeeSupervisorFullName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    EmployeeName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "EmployeeName",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeName_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeName_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._EmployeeName_ComputeValue);
                private static void _EmployeeName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeName, sf);
                }
                private static void _EmployeeName_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeName_Validate(r);
                }
                private static string _EmployeeName_ComputeValue(global::LightSwitchApplication.ReviewHeader e)
                {
                    string value = default(string);
                    e.EmployeeName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    ReviewerName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "ReviewerName",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewerName_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewerName_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewerName_ComputeValue);
                private static void _ReviewerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewerName, sf);
                }
                private static void _ReviewerName_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewerName_Validate(r);
                }
                private static string _ReviewerName_ComputeValue(global::LightSwitchApplication.ReviewHeader e)
                {
                    string value = default(string);
                    e.ReviewerName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry
                    ReviewHeaderDept = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Entry(
                        "ReviewHeaderDept",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewHeaderDept_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewHeaderDept_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewHeaderDept_ComputeValue);
                private static void _ReviewHeaderDept_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeaderDept, sf);
                }
                private static void _ReviewHeaderDept_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewHeaderDept_Validate(r);
                }
                private static string _ReviewHeaderDept_ComputeValue(global::LightSwitchApplication.ReviewHeader e)
                {
                    string value = default(string);
                    e.ReviewHeaderDept_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_GetCoreImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_Refresh,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Employee_GetCoreImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static global::LightSwitchApplication.Employee _Employee_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee, ref d._Employee, (i, ev) => i.Employee = ev, v);
                }
                private static void _Employee_Refresh(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Employee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Reviewer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Reviewer",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_GetCoreImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_Refresh,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Reviewer_OnValueChanged);
                private static void _Reviewer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Reviewer, sf);
                }
                private static bool _Reviewer_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.Reviewer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Reviewer_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Reviewer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Reviewer_GetCoreImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Reviewer;
                }
                private static global::LightSwitchApplication.Employee _Reviewer_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer, ref d._Reviewer);
                }
                private static void _Reviewer_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer, ref d._Reviewer, (i, ev) => i.Reviewer = ev, v);
                }
                private static void _Reviewer_Refresh(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Reviewer, ref d._Reviewer);
                }
                private static void _Reviewer_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.Reviewer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Entry
                    ReviewCritieria = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Entry(
                        "ReviewCritieria",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewCritieria_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewCritieria_GetReferencedEntities,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._ReviewCritieria_GetEntityCollection);
                private static void _ReviewCritieria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewCritieria, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ReviewCritieria> _ReviewCritieria_GetReferencedEntities(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.ReviewCritieria, ref d._ReviewCritieria);
                }
                private static global::System.Collections.IEnumerable _ReviewCritieria_GetEntityCollection(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.ReviewCritieria;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature>.Entry
                    Signatures = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature>.Entry(
                        "Signatures",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Signatures_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Signatures_GetReferencedEntities,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._Signatures_GetEntityCollection);
                private static void _Signatures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._Signatures, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Signature> _Signatures_GetReferencedEntities(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.Signatures, ref d._Signatures);
                }
                private static global::System.Collections.IEnumerable _Signatures_GetEntityCollection(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.Signatures;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry
                    TrainingPlans = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Entry(
                        "TrainingPlans",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TrainingPlans_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TrainingPlans_GetReferencedEntities,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._TrainingPlans_GetEntityCollection);
                private static void _TrainingPlans_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._TrainingPlans, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TrainingPlan> _TrainingPlans_GetReferencedEntities(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TrainingPlan, global::LightSwitchApplication.TrainingPlan.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.TrainingPlans, ref d._TrainingPlans);
                }
                private static global::System.Collections.IEnumerable _TrainingPlans_GetEntityCollection(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.TrainingPlans;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    SupervisorEmployee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "SupervisorEmployee",
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_Stub,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_Validate,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_GetCoreImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_GetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_SetImplementationValue,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_Refresh,
                        global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties._SupervisorEmployee_OnValueChanged);
                private static void _SupervisorEmployee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewHeader.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ReviewHeader.DetailsClass d, object sf)
                {
                    c(d, ref d._SupervisorEmployee, sf);
                }
                private static bool _SupervisorEmployee_ComputeIsReadOnly(global::LightSwitchApplication.ReviewHeader e)
                {
                    bool result = false;
                    e.SupervisorEmployee_IsReadOnly(ref result);
                    return result;
                }
                private static void _SupervisorEmployee_Validate(global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SupervisorEmployee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SupervisorEmployee_GetCoreImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.ImplementationEntity.SupervisorEmployee;
                }
                private static global::LightSwitchApplication.Employee _SupervisorEmployee_GetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee, ref d._SupervisorEmployee);
                }
                private static void _SupervisorEmployee_SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee, ref d._SupervisorEmployee, (i, ev) => i.SupervisorEmployee = ev, v);
                }
                private static void _SupervisorEmployee_Refresh(global::LightSwitchApplication.ReviewHeader.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ReviewHeader.DetailsClass.PropertySetProperties.SupervisorEmployee, ref d._SupervisorEmployee);
                }
                private static void _SupervisorEmployee_OnValueChanged(global::LightSwitchApplication.ReviewHeader e)
                {
                    e.SupervisorEmployee_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data _ReviewDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data _TimePeriodCoveredStart;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::System.DateTime>.Data _TimePeriodCoveredEnd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _ReviewType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _Supervisor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _ProjectsCovered;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _Role;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data _Promote;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _Strengths;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _DevelopmentNeeds;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, int>.Data _SummaryRating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _MajorAssignments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data _EmployeeHasSigned;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _SignedStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _Department;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, bool>.Data _Published;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _EmployeeReviewerFullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _EmployeeSupervisorFullName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _EmployeeName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _ReviewerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, string>.Data _ReviewHeaderDept;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data _Reviewer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.ReviewCritieria>.Data _ReviewCritieria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Signature>.Data _Signatures;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.TrainingPlan>.Data _TrainingPlans;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass, global::LightSwitchApplication.Employee>.Data _SupervisorEmployee;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ReviewCritieria : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ReviewCritieria entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReviewCritieria()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReviewCritieria(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReviewCritieria> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ReviewCritieria.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritieria_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritieria_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Rating
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Rating);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Rating, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rating_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Category
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Category);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Category, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Criteria
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Criteria);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Criteria, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comments
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Comments);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Comments, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comments_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ReviewHeader ReviewHeader
        {
            get
            {
                return global::LightSwitchApplication.ReviewCritieria.DetailsClass.GetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader);
            }
            set
            {
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.SetValue(this, global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ReviewCritieria,
                global::LightSwitchApplication.ReviewCritieria.DetailsClass,
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.IImplementation,
                global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>.Entry
                __ReviewCritieriaEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>.Entry(
                    global::LightSwitchApplication.ReviewCritieria.DetailsClass.__ReviewCritieria_CreateNew,
                    global::LightSwitchApplication.ReviewCritieria.DetailsClass.__ReviewCritieria_Created,
                    global::LightSwitchApplication.ReviewCritieria.DetailsClass.__ReviewCritieria_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ReviewCritieria __ReviewCritieria_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ReviewCritieria> es)
            {
                return new global::LightSwitchApplication.ReviewCritieria(es);
            }
            private static void __ReviewCritieria_Created(global::LightSwitchApplication.ReviewCritieria e)
            {
                e.ReviewCritieria_Created();
            }
            private static bool __ReviewCritieria_AllowSaveWithErrors(global::LightSwitchApplication.ReviewCritieria e)
            {
                bool result = false;
                e.ReviewCritieria_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int> Rating
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Rating) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string> Criteria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Criteria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string> Comments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.Comments) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeader
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new int Rating { get; set; }
                new string Category { get; set; }
                new string Criteria { get; set; }
                new string Comments { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ReviewHeader { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Entry
                    Rating = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Entry(
                        "Rating",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Rating_OnValueChanged);
                private static void _Rating_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._Rating, sf);
                }
                private static bool _Rating_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.Rating_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rating_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rating_Validate(r);
                }
                private static int _Rating_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.Rating;
                }
                private static void _Rating_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Rating = v;
                }
                private static void _Rating_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.Rating_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry(
                        "Category",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static string _Category_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Category = v;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry
                    Criteria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry(
                        "Criteria",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Criteria_OnValueChanged);
                private static void _Criteria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._Criteria, sf);
                }
                private static bool _Criteria_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.Criteria_IsReadOnly(ref result);
                    return result;
                }
                private static void _Criteria_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Criteria_Validate(r);
                }
                private static string _Criteria_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.Criteria;
                }
                private static void _Criteria_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Criteria = v;
                }
                private static void _Criteria_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.Criteria_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry
                    Comments = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Entry(
                        "Comments",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._Comments_OnValueChanged);
                private static void _Comments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._Comments, sf);
                }
                private static bool _Comments_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.Comments_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comments_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comments_Validate(r);
                }
                private static string _Comments_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.Comments;
                }
                private static void _Comments_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comments = v;
                }
                private static void _Comments_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.Comments_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeader = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeader",
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_Stub,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_ComputeIsReadOnly,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_Validate,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_GetCoreImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_GetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_SetImplementationValue,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_Refresh,
                        global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties._ReviewHeader_OnValueChanged);
                private static void _ReviewHeader_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.ReviewCritieria.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeader, sf);
                }
                private static bool _ReviewHeader_ComputeIsReadOnly(global::LightSwitchApplication.ReviewCritieria e)
                {
                    bool result = false;
                    e.ReviewHeader_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReviewHeader_Validate(global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewHeader_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ReviewHeader_GetCoreImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.ImplementationEntity.ReviewHeader;
                }
                private static global::LightSwitchApplication.ReviewHeader _ReviewHeader_GetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader);
                }
                private static void _ReviewHeader_SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass d, global::LightSwitchApplication.ReviewHeader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader, (i, ev) => i.ReviewHeader = ev, v);
                }
                private static void _ReviewHeader_Refresh(global::LightSwitchApplication.ReviewCritieria.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ReviewCritieria.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader);
                }
                private static void _ReviewHeader_OnValueChanged(global::LightSwitchApplication.ReviewCritieria e)
                {
                    e.ReviewHeader_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, int>.Data _Rating;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data _Criteria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, string>.Data _Comments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ReviewCritieria, global::LightSwitchApplication.ReviewCritieria.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeader;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Signature : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Signature entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Signature()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Signature(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Signature> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Signature.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signature_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signature_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Signature.DetailsClass.SetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Signature.DetailsClass.SetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime SigningDate
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.SigningDate);
            }
            set
            {
                global::LightSwitchApplication.Signature.DetailsClass.SetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.SigningDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SigningDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SigningDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SigningDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EmployeeName
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.EmployeeName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReviewerName
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewerName);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewerName_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectsCovered
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ProjectsCovered);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsCovered_Compute(ref string result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectsCovered_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.Signature.DetailsClass.SetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ReviewHeader ReviewHeader
        {
            get
            {
                return global::LightSwitchApplication.Signature.DetailsClass.GetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader);
            }
            set
            {
                global::LightSwitchApplication.Signature.DetailsClass.SetValue(this, global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeader_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Signature,
                global::LightSwitchApplication.Signature.DetailsClass,
                global::LightSwitchApplication.Signature.DetailsClass.IImplementation,
                global::LightSwitchApplication.Signature.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>.Entry
                __SignatureEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>.Entry(
                    global::LightSwitchApplication.Signature.DetailsClass.__Signature_CreateNew,
                    global::LightSwitchApplication.Signature.DetailsClass.__Signature_Created,
                    global::LightSwitchApplication.Signature.DetailsClass.__Signature_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Signature __Signature_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Signature> es)
            {
                return new global::LightSwitchApplication.Signature(es);
            }
            private static void __Signature_Created(global::LightSwitchApplication.Signature e)
            {
                e.Signature_Created();
            }
            private static bool __Signature_AllowSaveWithErrors(global::LightSwitchApplication.Signature e)
            {
                bool result = false;
                e.Signature_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Signature.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime> SigningDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.SigningDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string> EmployeeName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.EmployeeName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string> ReviewerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewerName) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string> ProjectsCovered
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ProjectsCovered) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader> ReviewHeader
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime SigningDate { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Employee { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ReviewHeader { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Signature e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Signature e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Signature e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Signature e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime>.Entry
                    SigningDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime>.Entry(
                        "SigningDate",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_GetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_SetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._SigningDate_OnValueChanged);
                private static void _SigningDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._SigningDate, sf);
                }
                private static bool _SigningDate_ComputeIsReadOnly(global::LightSwitchApplication.Signature e)
                {
                    bool result = false;
                    e.SigningDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _SigningDate_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SigningDate_Validate(r);
                }
                private static global::System.DateTime _SigningDate_GetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.ImplementationEntity.SigningDate;
                }
                private static void _SigningDate_SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.SigningDate = global::LightSwitchApplication.Signature.DetailsClass.TruncateDate(v);
                }
                private static void _SigningDate_OnValueChanged(global::LightSwitchApplication.Signature e)
                {
                    e.SigningDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry
                    EmployeeName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry(
                        "EmployeeName",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._EmployeeName_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._EmployeeName_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._EmployeeName_ComputeValue);
                private static void _EmployeeName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeName, sf);
                }
                private static void _EmployeeName_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeName_Validate(r);
                }
                private static string _EmployeeName_ComputeValue(global::LightSwitchApplication.Signature e)
                {
                    string value = default(string);
                    e.EmployeeName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry
                    ReviewerName = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry(
                        "ReviewerName",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewerName_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewerName_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewerName_ComputeValue);
                private static void _ReviewerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewerName, sf);
                }
                private static void _ReviewerName_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewerName_Validate(r);
                }
                private static string _ReviewerName_ComputeValue(global::LightSwitchApplication.Signature e)
                {
                    string value = default(string);
                    e.ReviewerName_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry
                    ProjectsCovered = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Entry(
                        "ProjectsCovered",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ProjectsCovered_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ProjectsCovered_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ProjectsCovered_ComputeValue);
                private static void _ProjectsCovered_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectsCovered, sf);
                }
                private static void _ProjectsCovered_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectsCovered_Validate(r);
                }
                private static string _ProjectsCovered_ComputeValue(global::LightSwitchApplication.Signature e)
                {
                    string value = default(string);
                    e.ProjectsCovered_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_GetCoreImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_Refresh,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.Signature e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Employee_GetCoreImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static global::LightSwitchApplication.Employee _Employee_GetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee, ref d._Employee, (i, ev) => i.Employee = ev, v);
                }
                private static void _Employee_Refresh(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.Signature e)
                {
                    e.Employee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry
                    ReviewHeader = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Entry(
                        "ReviewHeader",
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_Stub,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_ComputeIsReadOnly,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_Validate,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_GetCoreImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_GetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_SetImplementationValue,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_Refresh,
                        global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties._ReviewHeader_OnValueChanged);
                private static void _ReviewHeader_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Signature.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data> c, global::LightSwitchApplication.Signature.DetailsClass d, object sf)
                {
                    c(d, ref d._ReviewHeader, sf);
                }
                private static bool _ReviewHeader_ComputeIsReadOnly(global::LightSwitchApplication.Signature e)
                {
                    bool result = false;
                    e.ReviewHeader_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReviewHeader_Validate(global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReviewHeader_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ReviewHeader_GetCoreImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.ImplementationEntity.ReviewHeader;
                }
                private static global::LightSwitchApplication.ReviewHeader _ReviewHeader_GetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ReviewHeader, global::LightSwitchApplication.ReviewHeader.DetailsClass>(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader);
                }
                private static void _ReviewHeader_SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass d, global::LightSwitchApplication.ReviewHeader v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader, (i, ev) => i.ReviewHeader = ev, v);
                }
                private static void _ReviewHeader_Refresh(global::LightSwitchApplication.Signature.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Signature.DetailsClass.PropertySetProperties.ReviewHeader, ref d._ReviewHeader);
                }
                private static void _ReviewHeader_OnValueChanged(global::LightSwitchApplication.Signature e)
                {
                    e.ReviewHeader_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::System.DateTime>.Data _SigningDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data _EmployeeName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data _ReviewerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, string>.Data _ProjectsCovered;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Signature, global::LightSwitchApplication.Signature.DetailsClass, global::LightSwitchApplication.ReviewHeader>.Data _ReviewHeader;
            
        }
    
        #endregion
    }
    
    #endregion
}
