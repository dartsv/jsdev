

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Announcement : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Announcement entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Announcement()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Announcement(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Announcement> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Announcement.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcement_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcement_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Announcement.DetailsClass.GetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Announcement.DetailsClass.SetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AnnouncementText
        {
            get
            {
                return global::LightSwitchApplication.Announcement.DetailsClass.GetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.AnnouncementText);
            }
            set
            {
                global::LightSwitchApplication.Announcement.DetailsClass.SetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.AnnouncementText, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementText_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementText_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnouncementText_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] Picture
        {
            get
            {
                return global::LightSwitchApplication.Announcement.DetailsClass.GetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Picture);
            }
            set
            {
                global::LightSwitchApplication.Announcement.DetailsClass.SetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Picture, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Picture_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Picture_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Picture_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MoreInfoLink
        {
            get
            {
                return global::LightSwitchApplication.Announcement.DetailsClass.GetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.MoreInfoLink);
            }
            set
            {
                global::LightSwitchApplication.Announcement.DetailsClass.SetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.MoreInfoLink, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfoLink_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfoLink_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MoreInfoLink_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Announcement.DetailsClass.GetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Announcement.DetailsClass.SetValue(this, global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Announcement,
                global::LightSwitchApplication.Announcement.DetailsClass,
                global::LightSwitchApplication.Announcement.DetailsClass.IImplementation,
                global::LightSwitchApplication.Announcement.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>.Entry
                __AnnouncementEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>.Entry(
                    global::LightSwitchApplication.Announcement.DetailsClass.__Announcement_CreateNew,
                    global::LightSwitchApplication.Announcement.DetailsClass.__Announcement_Created,
                    global::LightSwitchApplication.Announcement.DetailsClass.__Announcement_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Announcement __Announcement_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Announcement> es)
            {
                return new global::LightSwitchApplication.Announcement(es);
            }
            private static void __Announcement_Created(global::LightSwitchApplication.Announcement e)
            {
                e.Announcement_Created();
            }
            private static bool __Announcement_AllowSaveWithErrors(global::LightSwitchApplication.Announcement e)
            {
                bool result = false;
                e.Announcement_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Announcement.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string> AnnouncementText
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.AnnouncementText) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]> Picture
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.Picture) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string> MoreInfoLink
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.MoreInfoLink) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string AnnouncementText { get; set; }
                new byte[] Picture { get; set; }
                new string MoreInfoLink { get; set; }
                new byte[] RowVersion { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Announcement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int>.Data> c, global::LightSwitchApplication.Announcement.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Announcement e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Announcement e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Entry
                    AnnouncementText = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Entry(
                        "AnnouncementText",
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_Stub,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_ComputeIsReadOnly,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_Validate,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_GetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_SetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._AnnouncementText_OnValueChanged);
                private static void _AnnouncementText_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Announcement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Announcement.DetailsClass d, object sf)
                {
                    c(d, ref d._AnnouncementText, sf);
                }
                private static bool _AnnouncementText_ComputeIsReadOnly(global::LightSwitchApplication.Announcement e)
                {
                    bool result = false;
                    e.AnnouncementText_IsReadOnly(ref result);
                    return result;
                }
                private static void _AnnouncementText_Validate(global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AnnouncementText_Validate(r);
                }
                private static string _AnnouncementText_GetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d)
                {
                    return d.ImplementationEntity.AnnouncementText;
                }
                private static void _AnnouncementText_SetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AnnouncementText = v;
                }
                private static void _AnnouncementText_OnValueChanged(global::LightSwitchApplication.Announcement e)
                {
                    e.AnnouncementText_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Entry
                    Picture = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Entry(
                        "Picture",
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_Stub,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_ComputeIsReadOnly,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_Validate,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_GetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_SetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._Picture_OnValueChanged);
                private static void _Picture_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Announcement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Announcement.DetailsClass d, object sf)
                {
                    c(d, ref d._Picture, sf);
                }
                private static bool _Picture_ComputeIsReadOnly(global::LightSwitchApplication.Announcement e)
                {
                    bool result = false;
                    e.Picture_IsReadOnly(ref result);
                    return result;
                }
                private static void _Picture_Validate(global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Picture_Validate(r);
                }
                private static byte[] _Picture_GetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d)
                {
                    return d.ImplementationEntity.Picture;
                }
                private static void _Picture_SetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.Picture = v;
                }
                private static void _Picture_OnValueChanged(global::LightSwitchApplication.Announcement e)
                {
                    e.Picture_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Entry
                    MoreInfoLink = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Entry(
                        "MoreInfoLink",
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_Stub,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_ComputeIsReadOnly,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_Validate,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_GetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_SetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._MoreInfoLink_OnValueChanged);
                private static void _MoreInfoLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Announcement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Announcement.DetailsClass d, object sf)
                {
                    c(d, ref d._MoreInfoLink, sf);
                }
                private static bool _MoreInfoLink_ComputeIsReadOnly(global::LightSwitchApplication.Announcement e)
                {
                    bool result = false;
                    e.MoreInfoLink_IsReadOnly(ref result);
                    return result;
                }
                private static void _MoreInfoLink_Validate(global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MoreInfoLink_Validate(r);
                }
                private static string _MoreInfoLink_GetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d)
                {
                    return d.ImplementationEntity.MoreInfoLink;
                }
                private static void _MoreInfoLink_SetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MoreInfoLink = v;
                }
                private static void _MoreInfoLink_OnValueChanged(global::LightSwitchApplication.Announcement e)
                {
                    e.MoreInfoLink_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Announcement.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Announcement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Announcement.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Announcement e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Announcement.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Announcement e)
                {
                    e.RowVersion_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Data _AnnouncementText;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Data _Picture;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, string>.Data _MoreInfoLink;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Announcement, global::LightSwitchApplication.Announcement.DetailsClass, byte[]>.Data _RowVersion;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeForecastExceptions : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TimeForecastExceptions entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeForecastExceptions()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeForecastExceptions(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeForecastExceptions> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptions_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptions_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.EndDate);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.EndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Percent
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Percent);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Percent, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percent_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percent_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Percent_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.LastUpdate);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.LastUpdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get
            {
                return global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TimeForecastExceptions,
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass,
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.IImplementation,
                global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>.Entry
                __TimeForecastExceptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.__TimeForecastExceptions_CreateNew,
                    global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.__TimeForecastExceptions_Created,
                    global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.__TimeForecastExceptions_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TimeForecastExceptions __TimeForecastExceptions_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeForecastExceptions> es)
            {
                return new global::LightSwitchApplication.TimeForecastExceptions(es);
            }
            private static void __TimeForecastExceptions_Created(global::LightSwitchApplication.TimeForecastExceptions e)
            {
                e.TimeForecastExceptions_Created();
            }
            private static bool __TimeForecastExceptions_AllowSaveWithErrors(global::LightSwitchApplication.TimeForecastExceptions e)
            {
                bool result = false;
                e.TimeForecastExceptions_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime> EndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.EndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int> Percent
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Percent) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime> LastUpdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.LastUpdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime StartDate { get; set; }
                new global::System.DateTime EndDate { get; set; }
                new int Percent { get; set; }
                new global::System.DateTime LastUpdate { get; set; }
                new string Notes { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Employee { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.DateTime _StartDate_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry
                    EndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry(
                        "EndDate",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._EndDate_OnValueChanged);
                private static void _EndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._EndDate, sf);
                }
                private static bool _EndDate_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.EndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndDate_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndDate_Validate(r);
                }
                private static global::System.DateTime _EndDate_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.EndDate;
                }
                private static void _EndDate_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndDate = global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EndDate_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.EndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Entry
                    Percent = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Entry(
                        "Percent",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Percent_OnValueChanged);
                private static void _Percent_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._Percent, sf);
                }
                private static bool _Percent_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.Percent_IsReadOnly(ref result);
                    return result;
                }
                private static void _Percent_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Percent_Validate(r);
                }
                private static int _Percent_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.Percent;
                }
                private static void _Percent_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Percent = v;
                }
                private static void _Percent_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.Percent_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry
                    LastUpdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdate",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._LastUpdate_OnValueChanged);
                private static void _LastUpdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdate, sf);
                }
                private static bool _LastUpdate_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.LastUpdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastUpdate_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdate_Validate(r);
                }
                private static global::System.DateTime _LastUpdate_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.LastUpdate;
                }
                private static void _LastUpdate_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LastUpdate = global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LastUpdate_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.LastUpdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_Refresh,
                        global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Employee_GetCoreImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static global::LightSwitchApplication.Employee _Employee_GetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee, ref d._Employee, (i, ev) => i.Employee = ev, v);
                }
                private static void _Employee_Refresh(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeForecastExceptions.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.TimeForecastExceptions e)
                {
                    e.Employee_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data _EndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, int>.Data _Percent;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::System.DateTime>.Data _LastUpdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeForecastExceptions, global::LightSwitchApplication.TimeForecastExceptions.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class EvaluationCriteria : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the EvaluationCriteria entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EvaluationCriteria()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EvaluationCriteria(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EvaluationCriteria> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.EvaluationCriteria.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteria_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteria_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Department
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Department);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Department, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Department_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Category
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Category);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Category, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Category_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Criteria
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Criteria);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Criteria, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Criteria_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Department EvaluationCriteriaDepartment
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaDepartment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaDepartment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriaDepartment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.EmployeeLevel EmployeeLevel
        {
            get
            {
                return global::LightSwitchApplication.EvaluationCriteria.DetailsClass.GetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel);
            }
            set
            {
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.SetValue(this, global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevel_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.EvaluationCriteria,
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass,
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.IImplementation,
                global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>.Entry
                __EvaluationCriteriaEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>.Entry(
                    global::LightSwitchApplication.EvaluationCriteria.DetailsClass.__EvaluationCriteria_CreateNew,
                    global::LightSwitchApplication.EvaluationCriteria.DetailsClass.__EvaluationCriteria_Created,
                    global::LightSwitchApplication.EvaluationCriteria.DetailsClass.__EvaluationCriteria_AllowSaveWithErrors);
            private static global::LightSwitchApplication.EvaluationCriteria __EvaluationCriteria_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.EvaluationCriteria> es)
            {
                return new global::LightSwitchApplication.EvaluationCriteria(es);
            }
            private static void __EvaluationCriteria_Created(global::LightSwitchApplication.EvaluationCriteria e)
            {
                e.EvaluationCriteria_Created();
            }
            private static bool __EvaluationCriteria_AllowSaveWithErrors(global::LightSwitchApplication.EvaluationCriteria e)
            {
                bool result = false;
                e.EvaluationCriteria_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string> Department
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Department) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string> Category
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Category) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string> Criteria
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.Criteria) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department> EvaluationCriteriaDepartment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel> EmployeeLevel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Title { get; set; }
                new string Department { get; set; }
                new string Category { get; set; }
                new string Criteria { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation EvaluationCriteriaDepartment { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation EmployeeLevel { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry
                    Department = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry(
                        "Department",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Department_OnValueChanged);
                private static void _Department_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._Department, sf);
                }
                private static bool _Department_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.Department_IsReadOnly(ref result);
                    return result;
                }
                private static void _Department_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Department_Validate(r);
                }
                private static string _Department_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.Department;
                }
                private static void _Department_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Department = v;
                }
                private static void _Department_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.Department_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry
                    Category = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry(
                        "Category",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Category_OnValueChanged);
                private static void _Category_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._Category, sf);
                }
                private static bool _Category_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.Category_IsReadOnly(ref result);
                    return result;
                }
                private static void _Category_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Category_Validate(r);
                }
                private static string _Category_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.Category;
                }
                private static void _Category_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Category = v;
                }
                private static void _Category_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.Category_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry
                    Criteria = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Entry(
                        "Criteria",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._Criteria_OnValueChanged);
                private static void _Criteria_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._Criteria, sf);
                }
                private static bool _Criteria_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.Criteria_IsReadOnly(ref result);
                    return result;
                }
                private static void _Criteria_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Criteria_Validate(r);
                }
                private static string _Criteria_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.Criteria;
                }
                private static void _Criteria_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Criteria = v;
                }
                private static void _Criteria_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.Criteria_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department>.Entry
                    EvaluationCriteriaDepartment = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department>.Entry(
                        "EvaluationCriteriaDepartment",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_GetCoreImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_Refresh,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EvaluationCriteriaDepartment_OnValueChanged);
                private static void _EvaluationCriteriaDepartment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._EvaluationCriteriaDepartment, sf);
                }
                private static bool _EvaluationCriteriaDepartment_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.EvaluationCriteriaDepartment_IsReadOnly(ref result);
                    return result;
                }
                private static void _EvaluationCriteriaDepartment_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EvaluationCriteriaDepartment_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _EvaluationCriteriaDepartment_GetCoreImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.EvaluationCriteriaDepartment;
                }
                private static global::LightSwitchApplication.Department _EvaluationCriteriaDepartment_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Department, global::LightSwitchApplication.Department.DetailsClass>(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment, ref d._EvaluationCriteriaDepartment);
                }
                private static void _EvaluationCriteriaDepartment_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, global::LightSwitchApplication.Department v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment, ref d._EvaluationCriteriaDepartment, (i, ev) => i.EvaluationCriteriaDepartment = ev, v);
                }
                private static void _EvaluationCriteriaDepartment_Refresh(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EvaluationCriteriaDepartment, ref d._EvaluationCriteriaDepartment);
                }
                private static void _EvaluationCriteriaDepartment_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.EvaluationCriteriaDepartment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Entry
                    EmployeeLevel = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Entry(
                        "EmployeeLevel",
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_Stub,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_ComputeIsReadOnly,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_Validate,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_GetCoreImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_GetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_SetImplementationValue,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_Refresh,
                        global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties._EmployeeLevel_OnValueChanged);
                private static void _EmployeeLevel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Data> c, global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, object sf)
                {
                    c(d, ref d._EmployeeLevel, sf);
                }
                private static bool _EmployeeLevel_ComputeIsReadOnly(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    bool result = false;
                    e.EmployeeLevel_IsReadOnly(ref result);
                    return result;
                }
                private static void _EmployeeLevel_Validate(global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EmployeeLevel_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _EmployeeLevel_GetCoreImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.ImplementationEntity.EmployeeLevel;
                }
                private static global::LightSwitchApplication.EmployeeLevel _EmployeeLevel_GetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.EmployeeLevel, global::LightSwitchApplication.EmployeeLevel.DetailsClass>(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel, ref d._EmployeeLevel);
                }
                private static void _EmployeeLevel_SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d, global::LightSwitchApplication.EmployeeLevel v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel, ref d._EmployeeLevel, (i, ev) => i.EmployeeLevel = ev, v);
                }
                private static void _EmployeeLevel_Refresh(global::LightSwitchApplication.EvaluationCriteria.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.EvaluationCriteria.DetailsClass.PropertySetProperties.EmployeeLevel, ref d._EmployeeLevel);
                }
                private static void _EmployeeLevel_OnValueChanged(global::LightSwitchApplication.EvaluationCriteria e)
                {
                    e.EmployeeLevel_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data _Department;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data _Category;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, string>.Data _Criteria;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.Department>.Data _EvaluationCriteriaDepartment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.EvaluationCriteria, global::LightSwitchApplication.EvaluationCriteria.DetailsClass, global::LightSwitchApplication.EmployeeLevel>.Data _EmployeeLevel;
            
        }
    
        #endregion
    }
    
    #endregion
}
