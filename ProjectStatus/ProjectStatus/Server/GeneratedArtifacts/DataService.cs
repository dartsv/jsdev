//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Inserted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updating(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Updated(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleting(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Deleted(global::LightSwitchApplication.Project entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Validate(global::LightSwitchApplication.Project entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Projects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Inserting(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Inserted(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Updating(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Updated(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Deleting(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Deleted(global::LightSwitchApplication.StaffingRequirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Validate(global::LightSwitchApplication.StaffingRequirement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StaffingRequirements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StaffingRequirement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Inserting(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Inserted(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Updating(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Updated(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Deleting(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Deleted(global::LightSwitchApplication.EmployeeAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Validate(global::LightSwitchApplication.EmployeeAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Inserting(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Inserted(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Updating(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Updated(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Deleting(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Deleted(global::LightSwitchApplication.TimeForecast entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Validate(global::LightSwitchApplication.TimeForecast entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecasts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecast, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Inserting(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Inserted(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Updating(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Updated(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Deleting(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Deleted(global::LightSwitchApplication.Holiday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Validate(global::LightSwitchApplication.Holiday entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Holidays_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Holiday, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Inserting(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Inserted(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Updating(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Updated(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Deleting(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Deleted(global::LightSwitchApplication.Announcement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Validate(global::LightSwitchApplication.Announcement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Announcements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Announcement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Inserting(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Inserted(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Updating(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Updated(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Deleting(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Deleted(global::LightSwitchApplication.TimeForecastExceptions entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Validate(global::LightSwitchApplication.TimeForecastExceptions entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptionsSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecastExceptions, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Inserting(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Inserted(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Updating(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Updated(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Deleting(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Deleted(global::LightSwitchApplication.EvaluationCriteria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Validate(global::LightSwitchApplication.EvaluationCriteria entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriterias_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EvaluationCriteria, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Inserting(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Inserted(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Updating(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Updated(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Deleting(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Deleted(global::LightSwitchApplication.ReviewHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Validate(global::LightSwitchApplication.ReviewHeader entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewHeaders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewHeader, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Inserting(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Inserted(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Updating(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Updated(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Deleting(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Deleted(global::LightSwitchApplication.ReviewCritieria entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Validate(global::LightSwitchApplication.ReviewCritieria entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewCritierias_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewCritieria, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Inserting(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Inserted(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Updating(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Updated(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Deleting(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Deleted(global::LightSwitchApplication.Signature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Validate(global::LightSwitchApplication.Signature entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Signatures_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Signature, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Inserting(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Inserted(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Updating(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Updated(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Deleting(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Deleted(global::LightSwitchApplication.TrainingCourses entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Validate(global::LightSwitchApplication.TrainingCourses entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingCoursesSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingCourses, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Inserting(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Inserted(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Updating(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Updated(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Deleting(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Deleted(global::LightSwitchApplication.TrainingPlan entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Validate(global::LightSwitchApplication.TrainingPlan entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrainingPlans_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingPlan, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Inserting(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Inserted(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Updating(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Updated(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Deleting(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Deleted(global::LightSwitchApplication.Country entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Validate(global::LightSwitchApplication.Country entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Countries_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Inserting(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Inserted(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Updating(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Updated(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Deleting(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Deleted(global::LightSwitchApplication.CountryHoliday entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Validate(global::LightSwitchApplication.CountryHoliday entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountryHolidays_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CountryHoliday, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Inserting(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Inserted(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Updating(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Updated(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Deleting(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Deleted(global::LightSwitchApplication.ProjectRate entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Validate(global::LightSwitchApplication.ProjectRate entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRates_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRate, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Inserting(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Inserted(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Updating(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Updated(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Deleting(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Deleted(global::LightSwitchApplication.EmployeeTitle entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Validate(global::LightSwitchApplication.EmployeeTitle entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeTitles_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTitle, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Inserting(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Inserted(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Updating(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Updated(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Deleting(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Deleted(global::LightSwitchApplication.Configuration entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Validate(global::LightSwitchApplication.Configuration entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Configurations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Configuration, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Inserting(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Inserted(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Updating(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Updated(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Deleting(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Deleted(global::LightSwitchApplication.ProjectVpn entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Validate(global::LightSwitchApplication.ProjectVpn entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectVpns_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectVpn, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Inserting(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Inserted(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Updating(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Updated(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Deleting(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Deleted(global::LightSwitchApplication.ProjectFeature entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Validate(global::LightSwitchApplication.ProjectFeature entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatures_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeature, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Inserting(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Inserted(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Updating(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Updated(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Deleting(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Deleted(global::LightSwitchApplication.ProjectIncident entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Validate(global::LightSwitchApplication.ProjectIncident entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidents_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncident, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Inserting(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Inserted(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Updating(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Updated(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Deleting(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Deleted(global::LightSwitchApplication.ProjectEnvironment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Validate(global::LightSwitchApplication.ProjectEnvironment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectEnvironment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Inserting(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Inserted(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Updating(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Updated(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Deleting(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Deleted(global::LightSwitchApplication.ProjectRule entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Validate(global::LightSwitchApplication.ProjectRule entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRules_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRule, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Inserted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updating(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Updated(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleting(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Deleted(global::LightSwitchApplication.Skill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Validate(global::LightSwitchApplication.Skill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Skills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Inserting(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Inserted(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Updating(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Updated(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Deleting(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Deleted(global::LightSwitchApplication.EmployeeSkill entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Validate(global::LightSwitchApplication.EmployeeSkill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeSkills_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkill, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Inserting(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Inserted(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Updating(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Updated(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Deleting(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Deleted(global::LightSwitchApplication.SkillCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Validate(global::LightSwitchApplication.SkillCategory entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkillCategories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkillCategory, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Inserting(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Inserted(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Updating(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Updated(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Deleting(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Deleted(global::LightSwitchApplication.ProjectWebTool entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Validate(global::LightSwitchApplication.ProjectWebTool entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectWebTools_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectWebTool, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Inserting(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Inserted(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Updating(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Updated(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Deleting(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Deleted(global::LightSwitchApplication.ProjectFeatureComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Validate(global::LightSwitchApplication.ProjectFeatureComment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureComments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeatureComment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Inserting(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Inserted(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Updating(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Updated(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Deleting(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Deleted(global::LightSwitchApplication.ProjectIncidentComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Validate(global::LightSwitchApplication.ProjectIncidentComment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncidentComments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncidentComment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updating(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updated(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::LightSwitchApplication.Customer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Inserting(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Inserted(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Updating(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Updated(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Deleting(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Deleted(global::LightSwitchApplication.TimeTracking entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Validate(global::LightSwitchApplication.TimeTracking entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Inserting(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Inserted(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Updating(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Updated(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Deleting(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Deleted(global::LightSwitchApplication.ProjectTask entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Validate(global::LightSwitchApplication.ProjectTask entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTasks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Inserting(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Inserted(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Updating(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Updated(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Deleting(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Deleted(global::LightSwitchApplication.ProjectTaskComment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Validate(global::LightSwitchApplication.ProjectTaskComment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTaskComments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTaskComment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Inserting(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Inserted(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Updating(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Updated(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Deleting(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Deleted(global::LightSwitchApplication.TDDExtension entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Validate(global::LightSwitchApplication.TDDExtension entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDExtensions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDExtension, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Inserting(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Inserted(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Updating(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Updated(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Deleting(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Deleted(global::LightSwitchApplication.Requirement entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Validate(global::LightSwitchApplication.Requirement entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirements_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Requirement, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Inserted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updating(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Updated(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleting(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Deleted(global::LightSwitchApplication.Issue entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Validate(global::LightSwitchApplication.Issue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issues_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Inserting(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Inserted(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Updating(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Updated(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Deleting(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Deleted(global::LightSwitchApplication.TimeTrack entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Validate(global::LightSwitchApplication.TimeTrack entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTracks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTrack, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Inserting(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Inserted(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Updating(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Updated(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Deleting(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Deleted(global::LightSwitchApplication.TDDObject entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Validate(global::LightSwitchApplication.TDDObject entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDObjects_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDObject, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Inserting(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Inserted(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Updating(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Updated(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Deleting(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Deleted(global::LightSwitchApplication.TDDDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Validate(global::LightSwitchApplication.TDDDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TDDDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Inserting(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Inserted(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Updating(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Updated(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Deleting(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Deleted(global::LightSwitchApplication.Department entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Validate(global::LightSwitchApplication.Department entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Departments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Inserting(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Inserted(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Updating(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Updated(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Deleting(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Deleted(global::LightSwitchApplication.EmployeeLevel entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Validate(global::LightSwitchApplication.EmployeeLevel entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeLevels_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeLevel, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentsByName_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeAssignmentsByName_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentsByName_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeAssignmentsByName_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeAssignmentsByName_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectExceptions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectExceptions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectExceptions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectExceptions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectAssignments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectAssignments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectAssignments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectAssignments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectAssignments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeForecastExceptions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeForecastExceptions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.TimeForecast> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeForecastExceptions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeForecast> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeForecastExceptions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterReviews_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterReviews_Executing(string FilterTerm);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FilterReviews_PreprocessQuery(string FilterTerm, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ReviewHeader> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterReviews_Executed(string FilterTerm, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ReviewHeader> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void FilterReviews_ExecuteFailed(string FilterTerm, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeesLookup_Executing(global::System.Nullable<int> Country, string Department, string Title, string Supervsr);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeesLookup_PreprocessQuery(global::System.Nullable<int> Country, string Department, string Title, string Supervsr, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeesLookup_Executed(global::System.Nullable<int> Country, string Department, string Title, string Supervsr, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeesLookup_ExecuteFailed(global::System.Nullable<int> Country, string Department, string Title, string Supervsr, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployees_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODEmployees_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODEmployees_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODEmployees_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODEmployees_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjects_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjects_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjects_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjects_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjects_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedProjects_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AssignedProjects_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedProjects_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AssignedProjects_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void AssignedProjects_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODOnlyProjects_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODOnlyProjects_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODOnlyProjects_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODOnlyProjects_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODOnlyProjects_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveClients_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActiveClients_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveClients_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ActiveClients_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureTimeTrackings_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectFeatureTimeTrackings_Executing(global::System.Nullable<int> ProjectFeatureId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeatureTimeTrackings_PreprocessQuery(global::System.Nullable<int> ProjectFeatureId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectFeatureTimeTrackings_Executed(global::System.Nullable<int> ProjectFeatureId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectFeatureTimeTrackings_ExecuteFailed(global::System.Nullable<int> ProjectFeatureId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIndicentTimeTrackings_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectIndicentTimeTrackings_Executing(global::System.Nullable<int> ProjectIncidentId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIndicentTimeTrackings_PreprocessQuery(global::System.Nullable<int> ProjectIncidentId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectIndicentTimeTrackings_Executed(global::System.Nullable<int> ProjectIncidentId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProjectIndicentTimeTrackings_ExecuteFailed(global::System.Nullable<int> ProjectIncidentId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedClients_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedClients_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortedClients_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedClients_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortedClients_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodAssignments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DodAssignments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DodAssignments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DodAssignments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DodAssignments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonDodAssignments_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NonDodAssignments_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonDodAssignments_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NonDodAssignments_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void NonDodAssignments_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjects_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeProjects_Executing(global::System.Nullable<int> EmployeeId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeProjects_PreprocessQuery(global::System.Nullable<int> EmployeeId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeProjects_Executed(global::System.Nullable<int> EmployeeId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EmployeeProjects_ExecuteFailed(global::System.Nullable<int> EmployeeId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ESEmployees_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ESEmployees_Executing(global::System.Nullable<int> Country);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ESEmployees_PreprocessQuery(global::System.Nullable<int> Country, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ESEmployees_Executed(global::System.Nullable<int> Country, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ESEmployees_ExecuteFailed(global::System.Nullable<int> Country, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTimeTracks_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReqTimeTracks_Executing(global::System.Nullable<int> ReqId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTimeTracks_PreprocessQuery(global::System.Nullable<int> ReqId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReqTimeTracks_Executed(global::System.Nullable<int> ReqId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ReqTimeTracks_ExecuteFailed(global::System.Nullable<int> ReqId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueTimeTracks_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueTimeTracks_Executing(global::System.Nullable<int> IssueId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueTimeTracks_PreprocessQuery(global::System.Nullable<int> IssueId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueTimeTracks_Executed(global::System.Nullable<int> IssueId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void IssueTimeTracks_ExecuteFailed(global::System.Nullable<int> IssueId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortByName_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortByName_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortByName_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTitle> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortByName_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeTitle> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortByName_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortBySupervisor_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortBySupervisor_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SortBySupervisor_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortBySupervisor_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SortBySupervisor_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriasFilter_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EvaluationCriteriasFilter_Executing(string FilterTerm);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EvaluationCriteriasFilter_PreprocessQuery(string FilterTerm, ref global::System.Linq.IQueryable<global::LightSwitchApplication.EvaluationCriteria> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EvaluationCriteriasFilter_Executed(string FilterTerm, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EvaluationCriteria> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void EvaluationCriteriasFilter_ExecuteFailed(string FilterTerm, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "Projects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Projects_Filter);
            private static bool __Projects_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanInsert(ref result);
                return result;
            }
            private static bool __Projects_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanUpdate(ref result);
                return result;
            }
            private static bool __Projects_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanDelete(ref result);
                return result;
            }
            private static bool __Projects_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Projects_CanRead(ref result);
                return result;
            }
            private static void __Projects_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserting(e);
            }
            private static void __Projects_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Inserted(e);
            }
            private static void __Projects_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updating(e);
            }
            private static void __Projects_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Updated(e);
            }
            private static void __Projects_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleting(e);
            }
            private static void __Projects_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e)
            {
                d.Projects_Deleted(e);
            }
            private static void __Projects_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Project e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Projects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> __Projects_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Project, bool>> filter = null;
                d.Projects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StaffingRequirement>
                __StaffingRequirementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StaffingRequirement>(
                    "StaffingRequirements",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StaffingRequirements_Filter);
            private static bool __StaffingRequirements_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StaffingRequirements_CanInsert(ref result);
                return result;
            }
            private static bool __StaffingRequirements_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StaffingRequirements_CanUpdate(ref result);
                return result;
            }
            private static bool __StaffingRequirements_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StaffingRequirements_CanDelete(ref result);
                return result;
            }
            private static bool __StaffingRequirements_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StaffingRequirements_CanRead(ref result);
                return result;
            }
            private static void __StaffingRequirements_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Inserting(e);
            }
            private static void __StaffingRequirements_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Inserted(e);
            }
            private static void __StaffingRequirements_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Updating(e);
            }
            private static void __StaffingRequirements_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Updated(e);
            }
            private static void __StaffingRequirements_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Deleting(e);
            }
            private static void __StaffingRequirements_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e)
            {
                d.StaffingRequirements_Deleted(e);
            }
            private static void __StaffingRequirements_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StaffingRequirement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StaffingRequirements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StaffingRequirement, bool>> __StaffingRequirements_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StaffingRequirement, bool>> filter = null;
                d.StaffingRequirements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>
                __EmployeeAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>(
                    "EmployeeAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignments_Filter);
            private static bool __EmployeeAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeAssignments_CanRead(ref result);
                return result;
            }
            private static void __EmployeeAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Inserting(e);
            }
            private static void __EmployeeAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Inserted(e);
            }
            private static void __EmployeeAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Updating(e);
            }
            private static void __EmployeeAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Updated(e);
            }
            private static void __EmployeeAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Deleting(e);
            }
            private static void __EmployeeAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e)
            {
                d.EmployeeAssignments_Deleted(e);
            }
            private static void __EmployeeAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeAssignment, bool>> __EmployeeAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeAssignment, bool>> filter = null;
                d.EmployeeAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecast>
                __TimeForecastsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecast>(
                    "TimeForecasts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecasts_Filter);
            private static bool __TimeForecasts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecasts_CanInsert(ref result);
                return result;
            }
            private static bool __TimeForecasts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecasts_CanUpdate(ref result);
                return result;
            }
            private static bool __TimeForecasts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecasts_CanDelete(ref result);
                return result;
            }
            private static bool __TimeForecasts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecasts_CanRead(ref result);
                return result;
            }
            private static void __TimeForecasts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Inserting(e);
            }
            private static void __TimeForecasts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Inserted(e);
            }
            private static void __TimeForecasts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Updating(e);
            }
            private static void __TimeForecasts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Updated(e);
            }
            private static void __TimeForecasts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Deleting(e);
            }
            private static void __TimeForecasts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e)
            {
                d.TimeForecasts_Deleted(e);
            }
            private static void __TimeForecasts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecast e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimeForecasts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecast, bool>> __TimeForecasts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecast, bool>> filter = null;
                d.TimeForecasts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Holiday>
                __HolidaysEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Holiday>(
                    "Holidays",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Holidays_Filter);
            private static bool __Holidays_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Holidays_CanInsert(ref result);
                return result;
            }
            private static bool __Holidays_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Holidays_CanUpdate(ref result);
                return result;
            }
            private static bool __Holidays_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Holidays_CanDelete(ref result);
                return result;
            }
            private static bool __Holidays_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Holidays_CanRead(ref result);
                return result;
            }
            private static void __Holidays_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Inserting(e);
            }
            private static void __Holidays_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Inserted(e);
            }
            private static void __Holidays_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Updating(e);
            }
            private static void __Holidays_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Updated(e);
            }
            private static void __Holidays_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Deleting(e);
            }
            private static void __Holidays_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e)
            {
                d.Holidays_Deleted(e);
            }
            private static void __Holidays_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Holiday e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Holidays_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Holiday, bool>> __Holidays_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Holiday, bool>> filter = null;
                d.Holidays_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Announcement>
                __AnnouncementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Announcement>(
                    "Announcements",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Announcements_Filter);
            private static bool __Announcements_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Announcements_CanInsert(ref result);
                return result;
            }
            private static bool __Announcements_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Announcements_CanUpdate(ref result);
                return result;
            }
            private static bool __Announcements_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Announcements_CanDelete(ref result);
                return result;
            }
            private static bool __Announcements_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Announcements_CanRead(ref result);
                return result;
            }
            private static void __Announcements_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Inserting(e);
            }
            private static void __Announcements_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Inserted(e);
            }
            private static void __Announcements_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Updating(e);
            }
            private static void __Announcements_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Updated(e);
            }
            private static void __Announcements_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Deleting(e);
            }
            private static void __Announcements_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e)
            {
                d.Announcements_Deleted(e);
            }
            private static void __Announcements_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Announcement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Announcements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Announcement, bool>> __Announcements_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Announcement, bool>> filter = null;
                d.Announcements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecastExceptions>
                __TimeForecastExceptionsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecastExceptions>(
                    "TimeForecastExceptionsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptionsSet_Filter);
            private static bool __TimeForecastExceptionsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecastExceptionsSet_CanInsert(ref result);
                return result;
            }
            private static bool __TimeForecastExceptionsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecastExceptionsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __TimeForecastExceptionsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecastExceptionsSet_CanDelete(ref result);
                return result;
            }
            private static bool __TimeForecastExceptionsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeForecastExceptionsSet_CanRead(ref result);
                return result;
            }
            private static void __TimeForecastExceptionsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Inserting(e);
            }
            private static void __TimeForecastExceptionsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Inserted(e);
            }
            private static void __TimeForecastExceptionsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Updating(e);
            }
            private static void __TimeForecastExceptionsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Updated(e);
            }
            private static void __TimeForecastExceptionsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Deleting(e);
            }
            private static void __TimeForecastExceptionsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e)
            {
                d.TimeForecastExceptionsSet_Deleted(e);
            }
            private static void __TimeForecastExceptionsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeForecastExceptions e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimeForecastExceptionsSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecastExceptions, bool>> __TimeForecastExceptionsSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeForecastExceptions, bool>> filter = null;
                d.TimeForecastExceptionsSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EvaluationCriteria>
                __EvaluationCriteriasEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EvaluationCriteria>(
                    "EvaluationCriterias",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriterias_Filter);
            private static bool __EvaluationCriterias_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EvaluationCriterias_CanInsert(ref result);
                return result;
            }
            private static bool __EvaluationCriterias_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EvaluationCriterias_CanUpdate(ref result);
                return result;
            }
            private static bool __EvaluationCriterias_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EvaluationCriterias_CanDelete(ref result);
                return result;
            }
            private static bool __EvaluationCriterias_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EvaluationCriterias_CanRead(ref result);
                return result;
            }
            private static void __EvaluationCriterias_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Inserting(e);
            }
            private static void __EvaluationCriterias_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Inserted(e);
            }
            private static void __EvaluationCriterias_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Updating(e);
            }
            private static void __EvaluationCriterias_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Updated(e);
            }
            private static void __EvaluationCriterias_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Deleting(e);
            }
            private static void __EvaluationCriterias_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e)
            {
                d.EvaluationCriterias_Deleted(e);
            }
            private static void __EvaluationCriterias_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EvaluationCriteria e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EvaluationCriterias_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EvaluationCriteria, bool>> __EvaluationCriterias_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EvaluationCriteria, bool>> filter = null;
                d.EvaluationCriterias_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewHeader>
                __ReviewHeadersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewHeader>(
                    "ReviewHeaders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewHeaders_Filter);
            private static bool __ReviewHeaders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewHeaders_CanInsert(ref result);
                return result;
            }
            private static bool __ReviewHeaders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewHeaders_CanUpdate(ref result);
                return result;
            }
            private static bool __ReviewHeaders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewHeaders_CanDelete(ref result);
                return result;
            }
            private static bool __ReviewHeaders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewHeaders_CanRead(ref result);
                return result;
            }
            private static void __ReviewHeaders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Inserting(e);
            }
            private static void __ReviewHeaders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Inserted(e);
            }
            private static void __ReviewHeaders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Updating(e);
            }
            private static void __ReviewHeaders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Updated(e);
            }
            private static void __ReviewHeaders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Deleting(e);
            }
            private static void __ReviewHeaders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e)
            {
                d.ReviewHeaders_Deleted(e);
            }
            private static void __ReviewHeaders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewHeader e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReviewHeaders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewHeader, bool>> __ReviewHeaders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewHeader, bool>> filter = null;
                d.ReviewHeaders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewCritieria>
                __ReviewCritieriasEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewCritieria>(
                    "ReviewCritierias",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReviewCritierias_Filter);
            private static bool __ReviewCritierias_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewCritierias_CanInsert(ref result);
                return result;
            }
            private static bool __ReviewCritierias_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewCritierias_CanUpdate(ref result);
                return result;
            }
            private static bool __ReviewCritierias_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewCritierias_CanDelete(ref result);
                return result;
            }
            private static bool __ReviewCritierias_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReviewCritierias_CanRead(ref result);
                return result;
            }
            private static void __ReviewCritierias_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Inserting(e);
            }
            private static void __ReviewCritierias_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Inserted(e);
            }
            private static void __ReviewCritierias_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Updating(e);
            }
            private static void __ReviewCritierias_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Updated(e);
            }
            private static void __ReviewCritierias_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Deleting(e);
            }
            private static void __ReviewCritierias_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e)
            {
                d.ReviewCritierias_Deleted(e);
            }
            private static void __ReviewCritierias_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReviewCritieria e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReviewCritierias_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewCritieria, bool>> __ReviewCritierias_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReviewCritieria, bool>> filter = null;
                d.ReviewCritierias_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Signature>
                __SignaturesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Signature>(
                    "Signatures",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Signatures_Filter);
            private static bool __Signatures_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Signatures_CanInsert(ref result);
                return result;
            }
            private static bool __Signatures_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Signatures_CanUpdate(ref result);
                return result;
            }
            private static bool __Signatures_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Signatures_CanDelete(ref result);
                return result;
            }
            private static bool __Signatures_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Signatures_CanRead(ref result);
                return result;
            }
            private static void __Signatures_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Inserting(e);
            }
            private static void __Signatures_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Inserted(e);
            }
            private static void __Signatures_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Updating(e);
            }
            private static void __Signatures_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Updated(e);
            }
            private static void __Signatures_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Deleting(e);
            }
            private static void __Signatures_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e)
            {
                d.Signatures_Deleted(e);
            }
            private static void __Signatures_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Signature e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Signatures_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Signature, bool>> __Signatures_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Signature, bool>> filter = null;
                d.Signatures_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingCourses>
                __TrainingCoursesSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingCourses>(
                    "TrainingCoursesSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingCoursesSet_Filter);
            private static bool __TrainingCoursesSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingCoursesSet_CanInsert(ref result);
                return result;
            }
            private static bool __TrainingCoursesSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingCoursesSet_CanUpdate(ref result);
                return result;
            }
            private static bool __TrainingCoursesSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingCoursesSet_CanDelete(ref result);
                return result;
            }
            private static bool __TrainingCoursesSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingCoursesSet_CanRead(ref result);
                return result;
            }
            private static void __TrainingCoursesSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Inserting(e);
            }
            private static void __TrainingCoursesSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Inserted(e);
            }
            private static void __TrainingCoursesSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Updating(e);
            }
            private static void __TrainingCoursesSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Updated(e);
            }
            private static void __TrainingCoursesSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Deleting(e);
            }
            private static void __TrainingCoursesSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e)
            {
                d.TrainingCoursesSet_Deleted(e);
            }
            private static void __TrainingCoursesSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingCourses e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TrainingCoursesSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingCourses, bool>> __TrainingCoursesSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingCourses, bool>> filter = null;
                d.TrainingCoursesSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingPlan>
                __TrainingPlansEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TrainingPlan>(
                    "TrainingPlans",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TrainingPlans_Filter);
            private static bool __TrainingPlans_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingPlans_CanInsert(ref result);
                return result;
            }
            private static bool __TrainingPlans_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingPlans_CanUpdate(ref result);
                return result;
            }
            private static bool __TrainingPlans_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingPlans_CanDelete(ref result);
                return result;
            }
            private static bool __TrainingPlans_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TrainingPlans_CanRead(ref result);
                return result;
            }
            private static void __TrainingPlans_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Inserting(e);
            }
            private static void __TrainingPlans_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Inserted(e);
            }
            private static void __TrainingPlans_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Updating(e);
            }
            private static void __TrainingPlans_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Updated(e);
            }
            private static void __TrainingPlans_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Deleting(e);
            }
            private static void __TrainingPlans_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e)
            {
                d.TrainingPlans_Deleted(e);
            }
            private static void __TrainingPlans_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TrainingPlan e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TrainingPlans_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingPlan, bool>> __TrainingPlans_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TrainingPlan, bool>> filter = null;
                d.TrainingPlans_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Country>
                __CountriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Country>(
                    "Countries",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Countries_Filter);
            private static bool __Countries_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Countries_CanInsert(ref result);
                return result;
            }
            private static bool __Countries_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Countries_CanUpdate(ref result);
                return result;
            }
            private static bool __Countries_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Countries_CanDelete(ref result);
                return result;
            }
            private static bool __Countries_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Countries_CanRead(ref result);
                return result;
            }
            private static void __Countries_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Inserting(e);
            }
            private static void __Countries_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Inserted(e);
            }
            private static void __Countries_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Updating(e);
            }
            private static void __Countries_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Updated(e);
            }
            private static void __Countries_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Deleting(e);
            }
            private static void __Countries_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e)
            {
                d.Countries_Deleted(e);
            }
            private static void __Countries_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Country e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Countries_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> __Countries_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Country, bool>> filter = null;
                d.Countries_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CountryHoliday>
                __CountryHolidaysEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CountryHoliday>(
                    "CountryHolidays",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountryHolidays_Filter);
            private static bool __CountryHolidays_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountryHolidays_CanInsert(ref result);
                return result;
            }
            private static bool __CountryHolidays_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountryHolidays_CanUpdate(ref result);
                return result;
            }
            private static bool __CountryHolidays_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountryHolidays_CanDelete(ref result);
                return result;
            }
            private static bool __CountryHolidays_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountryHolidays_CanRead(ref result);
                return result;
            }
            private static void __CountryHolidays_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Inserting(e);
            }
            private static void __CountryHolidays_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Inserted(e);
            }
            private static void __CountryHolidays_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Updating(e);
            }
            private static void __CountryHolidays_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Updated(e);
            }
            private static void __CountryHolidays_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Deleting(e);
            }
            private static void __CountryHolidays_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e)
            {
                d.CountryHolidays_Deleted(e);
            }
            private static void __CountryHolidays_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CountryHoliday e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CountryHolidays_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CountryHoliday, bool>> __CountryHolidays_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CountryHoliday, bool>> filter = null;
                d.CountryHolidays_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRate>
                __ProjectRatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRate>(
                    "ProjectRates",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRates_Filter);
            private static bool __ProjectRates_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRates_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectRates_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRates_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectRates_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRates_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectRates_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRates_CanRead(ref result);
                return result;
            }
            private static void __ProjectRates_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Inserting(e);
            }
            private static void __ProjectRates_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Inserted(e);
            }
            private static void __ProjectRates_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Updating(e);
            }
            private static void __ProjectRates_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Updated(e);
            }
            private static void __ProjectRates_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Deleting(e);
            }
            private static void __ProjectRates_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e)
            {
                d.ProjectRates_Deleted(e);
            }
            private static void __ProjectRates_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRate e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectRates_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRate, bool>> __ProjectRates_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRate, bool>> filter = null;
                d.ProjectRates_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTitle>
                __EmployeeTitlesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTitle>(
                    "EmployeeTitles",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeTitles_Filter);
            private static bool __EmployeeTitles_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTitles_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeTitles_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTitles_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeTitles_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTitles_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeTitles_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeTitles_CanRead(ref result);
                return result;
            }
            private static void __EmployeeTitles_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Inserting(e);
            }
            private static void __EmployeeTitles_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Inserted(e);
            }
            private static void __EmployeeTitles_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Updating(e);
            }
            private static void __EmployeeTitles_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Updated(e);
            }
            private static void __EmployeeTitles_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Deleting(e);
            }
            private static void __EmployeeTitles_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e)
            {
                d.EmployeeTitles_Deleted(e);
            }
            private static void __EmployeeTitles_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeTitle e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeTitles_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTitle, bool>> __EmployeeTitles_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeTitle, bool>> filter = null;
                d.EmployeeTitles_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Configuration>
                __ConfigurationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Configuration>(
                    "Configurations",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Configurations_Filter);
            private static bool __Configurations_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Configurations_CanInsert(ref result);
                return result;
            }
            private static bool __Configurations_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Configurations_CanUpdate(ref result);
                return result;
            }
            private static bool __Configurations_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Configurations_CanDelete(ref result);
                return result;
            }
            private static bool __Configurations_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Configurations_CanRead(ref result);
                return result;
            }
            private static void __Configurations_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Inserting(e);
            }
            private static void __Configurations_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Inserted(e);
            }
            private static void __Configurations_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Updating(e);
            }
            private static void __Configurations_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Updated(e);
            }
            private static void __Configurations_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Deleting(e);
            }
            private static void __Configurations_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e)
            {
                d.Configurations_Deleted(e);
            }
            private static void __Configurations_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Configuration e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Configurations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Configuration, bool>> __Configurations_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Configuration, bool>> filter = null;
                d.Configurations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectVpn>
                __ProjectVpnsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectVpn>(
                    "ProjectVpns",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectVpns_Filter);
            private static bool __ProjectVpns_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectVpns_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectVpns_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectVpns_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectVpns_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectVpns_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectVpns_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectVpns_CanRead(ref result);
                return result;
            }
            private static void __ProjectVpns_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Inserting(e);
            }
            private static void __ProjectVpns_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Inserted(e);
            }
            private static void __ProjectVpns_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Updating(e);
            }
            private static void __ProjectVpns_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Updated(e);
            }
            private static void __ProjectVpns_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Deleting(e);
            }
            private static void __ProjectVpns_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e)
            {
                d.ProjectVpns_Deleted(e);
            }
            private static void __ProjectVpns_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectVpn e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectVpns_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectVpn, bool>> __ProjectVpns_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectVpn, bool>> filter = null;
                d.ProjectVpns_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectFeature>
                __ProjectFeaturesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectFeature>(
                    "ProjectFeatures",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatures_Filter);
            private static bool __ProjectFeatures_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatures_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectFeatures_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatures_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectFeatures_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatures_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectFeatures_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatures_CanRead(ref result);
                return result;
            }
            private static void __ProjectFeatures_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Inserting(e);
            }
            private static void __ProjectFeatures_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Inserted(e);
            }
            private static void __ProjectFeatures_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Updating(e);
            }
            private static void __ProjectFeatures_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Updated(e);
            }
            private static void __ProjectFeatures_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Deleting(e);
            }
            private static void __ProjectFeatures_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e)
            {
                d.ProjectFeatures_Deleted(e);
            }
            private static void __ProjectFeatures_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeature e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectFeatures_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeature, bool>> __ProjectFeatures_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeature, bool>> filter = null;
                d.ProjectFeatures_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectIncident>
                __ProjectIncidentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectIncident>(
                    "ProjectIncidents",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidents_Filter);
            private static bool __ProjectIncidents_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidents_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectIncidents_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidents_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectIncidents_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidents_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectIncidents_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidents_CanRead(ref result);
                return result;
            }
            private static void __ProjectIncidents_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Inserting(e);
            }
            private static void __ProjectIncidents_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Inserted(e);
            }
            private static void __ProjectIncidents_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Updating(e);
            }
            private static void __ProjectIncidents_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Updated(e);
            }
            private static void __ProjectIncidents_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Deleting(e);
            }
            private static void __ProjectIncidents_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e)
            {
                d.ProjectIncidents_Deleted(e);
            }
            private static void __ProjectIncidents_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectIncidents_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncident, bool>> __ProjectIncidents_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncident, bool>> filter = null;
                d.ProjectIncidents_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectEnvironment>
                __ProjectEnvironmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectEnvironment>(
                    "ProjectEnvironments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectEnvironments_Filter);
            private static bool __ProjectEnvironments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectEnvironments_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectEnvironments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectEnvironments_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectEnvironments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectEnvironments_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectEnvironments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectEnvironments_CanRead(ref result);
                return result;
            }
            private static void __ProjectEnvironments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Inserting(e);
            }
            private static void __ProjectEnvironments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Inserted(e);
            }
            private static void __ProjectEnvironments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Updating(e);
            }
            private static void __ProjectEnvironments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Updated(e);
            }
            private static void __ProjectEnvironments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Deleting(e);
            }
            private static void __ProjectEnvironments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e)
            {
                d.ProjectEnvironments_Deleted(e);
            }
            private static void __ProjectEnvironments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectEnvironments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectEnvironment, bool>> __ProjectEnvironments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectEnvironment, bool>> filter = null;
                d.ProjectEnvironments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRule>
                __ProjectRulesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectRule>(
                    "ProjectRules",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectRules_Filter);
            private static bool __ProjectRules_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRules_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectRules_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRules_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectRules_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRules_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectRules_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectRules_CanRead(ref result);
                return result;
            }
            private static void __ProjectRules_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Inserting(e);
            }
            private static void __ProjectRules_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Inserted(e);
            }
            private static void __ProjectRules_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Updating(e);
            }
            private static void __ProjectRules_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Updated(e);
            }
            private static void __ProjectRules_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Deleting(e);
            }
            private static void __ProjectRules_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e)
            {
                d.ProjectRules_Deleted(e);
            }
            private static void __ProjectRules_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectRules_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRule, bool>> __ProjectRules_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectRule, bool>> filter = null;
                d.ProjectRules_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>
                __SkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Skill>(
                    "Skills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Skills_Filter);
            private static bool __Skills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanInsert(ref result);
                return result;
            }
            private static bool __Skills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanUpdate(ref result);
                return result;
            }
            private static bool __Skills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanDelete(ref result);
                return result;
            }
            private static bool __Skills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Skills_CanRead(ref result);
                return result;
            }
            private static void __Skills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserting(e);
            }
            private static void __Skills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Inserted(e);
            }
            private static void __Skills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updating(e);
            }
            private static void __Skills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Updated(e);
            }
            private static void __Skills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleting(e);
            }
            private static void __Skills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e)
            {
                d.Skills_Deleted(e);
            }
            private static void __Skills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Skill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Skills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> __Skills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Skill, bool>> filter = null;
                d.Skills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeSkill>
                __EmployeeSkillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeSkill>(
                    "EmployeeSkills",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeSkills_Filter);
            private static bool __EmployeeSkills_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeSkills_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeSkills_CanRead(ref result);
                return result;
            }
            private static void __EmployeeSkills_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Inserting(e);
            }
            private static void __EmployeeSkills_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Inserted(e);
            }
            private static void __EmployeeSkills_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Updating(e);
            }
            private static void __EmployeeSkills_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Updated(e);
            }
            private static void __EmployeeSkills_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Deleting(e);
            }
            private static void __EmployeeSkills_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e)
            {
                d.EmployeeSkills_Deleted(e);
            }
            private static void __EmployeeSkills_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeSkill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeSkills_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkill, bool>> __EmployeeSkills_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeSkill, bool>> filter = null;
                d.EmployeeSkills_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SkillCategory>
                __SkillCategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SkillCategory>(
                    "SkillCategories",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SkillCategories_Filter);
            private static bool __SkillCategories_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SkillCategories_CanInsert(ref result);
                return result;
            }
            private static bool __SkillCategories_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SkillCategories_CanUpdate(ref result);
                return result;
            }
            private static bool __SkillCategories_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SkillCategories_CanDelete(ref result);
                return result;
            }
            private static bool __SkillCategories_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SkillCategories_CanRead(ref result);
                return result;
            }
            private static void __SkillCategories_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Inserting(e);
            }
            private static void __SkillCategories_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Inserted(e);
            }
            private static void __SkillCategories_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Updating(e);
            }
            private static void __SkillCategories_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Updated(e);
            }
            private static void __SkillCategories_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Deleting(e);
            }
            private static void __SkillCategories_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e)
            {
                d.SkillCategories_Deleted(e);
            }
            private static void __SkillCategories_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SkillCategory e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SkillCategories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkillCategory, bool>> __SkillCategories_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SkillCategory, bool>> filter = null;
                d.SkillCategories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectWebTool>
                __ProjectWebToolsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectWebTool>(
                    "ProjectWebTools",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectWebTools_Filter);
            private static bool __ProjectWebTools_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectWebTools_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectWebTools_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectWebTools_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectWebTools_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectWebTools_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectWebTools_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectWebTools_CanRead(ref result);
                return result;
            }
            private static void __ProjectWebTools_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Inserting(e);
            }
            private static void __ProjectWebTools_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Inserted(e);
            }
            private static void __ProjectWebTools_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Updating(e);
            }
            private static void __ProjectWebTools_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Updated(e);
            }
            private static void __ProjectWebTools_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Deleting(e);
            }
            private static void __ProjectWebTools_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e)
            {
                d.ProjectWebTools_Deleted(e);
            }
            private static void __ProjectWebTools_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectWebTool e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectWebTools_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectWebTool, bool>> __ProjectWebTools_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectWebTool, bool>> filter = null;
                d.ProjectWebTools_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectFeatureComment>
                __ProjectFeatureCommentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectFeatureComment>(
                    "ProjectFeatureComments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureComments_Filter);
            private static bool __ProjectFeatureComments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatureComments_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectFeatureComments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatureComments_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectFeatureComments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatureComments_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectFeatureComments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectFeatureComments_CanRead(ref result);
                return result;
            }
            private static void __ProjectFeatureComments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Inserting(e);
            }
            private static void __ProjectFeatureComments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Inserted(e);
            }
            private static void __ProjectFeatureComments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Updating(e);
            }
            private static void __ProjectFeatureComments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Updated(e);
            }
            private static void __ProjectFeatureComments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Deleting(e);
            }
            private static void __ProjectFeatureComments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e)
            {
                d.ProjectFeatureComments_Deleted(e);
            }
            private static void __ProjectFeatureComments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectFeatureComment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectFeatureComments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeatureComment, bool>> __ProjectFeatureComments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectFeatureComment, bool>> filter = null;
                d.ProjectFeatureComments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectIncidentComment>
                __ProjectIncidentCommentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectIncidentComment>(
                    "ProjectIncidentComments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIncidentComments_Filter);
            private static bool __ProjectIncidentComments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidentComments_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectIncidentComments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidentComments_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectIncidentComments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidentComments_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectIncidentComments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectIncidentComments_CanRead(ref result);
                return result;
            }
            private static void __ProjectIncidentComments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Inserting(e);
            }
            private static void __ProjectIncidentComments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Inserted(e);
            }
            private static void __ProjectIncidentComments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Updating(e);
            }
            private static void __ProjectIncidentComments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Updated(e);
            }
            private static void __ProjectIncidentComments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Deleting(e);
            }
            private static void __ProjectIncidentComments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e)
            {
                d.ProjectIncidentComments_Deleted(e);
            }
            private static void __ProjectIncidentComments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectIncidentComment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectIncidentComments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncidentComment, bool>> __ProjectIncidentComments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectIncidentComment, bool>> filter = null;
                d.ProjectIncidentComments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Filter);
            private static bool __Customers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanInsert(ref result);
                return result;
            }
            private static bool __Customers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanUpdate(ref result);
                return result;
            }
            private static bool __Customers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanDelete(ref result);
                return result;
            }
            private static bool __Customers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanRead(ref result);
                return result;
            }
            private static void __Customers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserting(e);
            }
            private static void __Customers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserted(e);
            }
            private static void __Customers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updating(e);
            }
            private static void __Customers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updated(e);
            }
            private static void __Customers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleting(e);
            }
            private static void __Customers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleted(e);
            }
            private static void __Customers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Customers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> __Customers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter = null;
                d.Customers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>
                __TimeTrackingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>(
                    "TimeTrackings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTrackings_Filter);
            private static bool __TimeTrackings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanInsert(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanUpdate(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanDelete(ref result);
                return result;
            }
            private static bool __TimeTrackings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTrackings_CanRead(ref result);
                return result;
            }
            private static void __TimeTrackings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Inserting(e);
            }
            private static void __TimeTrackings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Inserted(e);
            }
            private static void __TimeTrackings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Updating(e);
            }
            private static void __TimeTrackings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Updated(e);
            }
            private static void __TimeTrackings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Deleting(e);
            }
            private static void __TimeTrackings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e)
            {
                d.TimeTrackings_Deleted(e);
            }
            private static void __TimeTrackings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTracking e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimeTrackings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> __TimeTrackings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTracking, bool>> filter = null;
                d.TimeTrackings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTask>
                __ProjectTasksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTask>(
                    "ProjectTasks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTasks_Filter);
            private static bool __ProjectTasks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectTasks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTasks_CanRead(ref result);
                return result;
            }
            private static void __ProjectTasks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Inserting(e);
            }
            private static void __ProjectTasks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Inserted(e);
            }
            private static void __ProjectTasks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Updating(e);
            }
            private static void __ProjectTasks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Updated(e);
            }
            private static void __ProjectTasks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Deleting(e);
            }
            private static void __ProjectTasks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e)
            {
                d.ProjectTasks_Deleted(e);
            }
            private static void __ProjectTasks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTask e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectTasks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> __ProjectTasks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTask, bool>> filter = null;
                d.ProjectTasks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTaskComment>
                __ProjectTaskCommentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProjectTaskComment>(
                    "ProjectTaskComments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectTaskComments_Filter);
            private static bool __ProjectTaskComments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTaskComments_CanInsert(ref result);
                return result;
            }
            private static bool __ProjectTaskComments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTaskComments_CanUpdate(ref result);
                return result;
            }
            private static bool __ProjectTaskComments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTaskComments_CanDelete(ref result);
                return result;
            }
            private static bool __ProjectTaskComments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProjectTaskComments_CanRead(ref result);
                return result;
            }
            private static void __ProjectTaskComments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Inserting(e);
            }
            private static void __ProjectTaskComments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Inserted(e);
            }
            private static void __ProjectTaskComments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Updating(e);
            }
            private static void __ProjectTaskComments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Updated(e);
            }
            private static void __ProjectTaskComments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Deleting(e);
            }
            private static void __ProjectTaskComments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e)
            {
                d.ProjectTaskComments_Deleted(e);
            }
            private static void __ProjectTaskComments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProjectTaskComment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectTaskComments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTaskComment, bool>> __ProjectTaskComments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProjectTaskComment, bool>> filter = null;
                d.ProjectTaskComments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDExtension>
                __TDDExtensionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDExtension>(
                    "TDDExtensions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDExtensions_Filter);
            private static bool __TDDExtensions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDExtensions_CanInsert(ref result);
                return result;
            }
            private static bool __TDDExtensions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDExtensions_CanUpdate(ref result);
                return result;
            }
            private static bool __TDDExtensions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDExtensions_CanDelete(ref result);
                return result;
            }
            private static bool __TDDExtensions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDExtensions_CanRead(ref result);
                return result;
            }
            private static void __TDDExtensions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Inserting(e);
            }
            private static void __TDDExtensions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Inserted(e);
            }
            private static void __TDDExtensions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Updating(e);
            }
            private static void __TDDExtensions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Updated(e);
            }
            private static void __TDDExtensions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Deleting(e);
            }
            private static void __TDDExtensions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e)
            {
                d.TDDExtensions_Deleted(e);
            }
            private static void __TDDExtensions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDExtension e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TDDExtensions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDExtension, bool>> __TDDExtensions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDExtension, bool>> filter = null;
                d.TDDExtensions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Requirement>
                __RequirementsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Requirement>(
                    "Requirements",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Requirements_Filter);
            private static bool __Requirements_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Requirements_CanInsert(ref result);
                return result;
            }
            private static bool __Requirements_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Requirements_CanUpdate(ref result);
                return result;
            }
            private static bool __Requirements_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Requirements_CanDelete(ref result);
                return result;
            }
            private static bool __Requirements_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Requirements_CanRead(ref result);
                return result;
            }
            private static void __Requirements_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Inserting(e);
            }
            private static void __Requirements_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Inserted(e);
            }
            private static void __Requirements_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Updating(e);
            }
            private static void __Requirements_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Updated(e);
            }
            private static void __Requirements_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Deleting(e);
            }
            private static void __Requirements_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e)
            {
                d.Requirements_Deleted(e);
            }
            private static void __Requirements_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Requirements_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Requirement, bool>> __Requirements_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Requirement, bool>> filter = null;
                d.Requirements_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>
                __IssuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Issue>(
                    "Issues",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Issues_Filter);
            private static bool __Issues_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanInsert(ref result);
                return result;
            }
            private static bool __Issues_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanUpdate(ref result);
                return result;
            }
            private static bool __Issues_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanDelete(ref result);
                return result;
            }
            private static bool __Issues_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Issues_CanRead(ref result);
                return result;
            }
            private static void __Issues_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserting(e);
            }
            private static void __Issues_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Inserted(e);
            }
            private static void __Issues_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updating(e);
            }
            private static void __Issues_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Updated(e);
            }
            private static void __Issues_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleting(e);
            }
            private static void __Issues_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e)
            {
                d.Issues_Deleted(e);
            }
            private static void __Issues_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Issues_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> __Issues_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Issue, bool>> filter = null;
                d.Issues_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>
                __TimeTracksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>(
                    "TimeTracks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeTracks_Filter);
            private static bool __TimeTracks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTracks_CanInsert(ref result);
                return result;
            }
            private static bool __TimeTracks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTracks_CanUpdate(ref result);
                return result;
            }
            private static bool __TimeTracks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTracks_CanDelete(ref result);
                return result;
            }
            private static bool __TimeTracks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TimeTracks_CanRead(ref result);
                return result;
            }
            private static void __TimeTracks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Inserting(e);
            }
            private static void __TimeTracks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Inserted(e);
            }
            private static void __TimeTracks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Updating(e);
            }
            private static void __TimeTracks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Updated(e);
            }
            private static void __TimeTracks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Deleting(e);
            }
            private static void __TimeTracks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e)
            {
                d.TimeTracks_Deleted(e);
            }
            private static void __TimeTracks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TimeTracks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTrack, bool>> __TimeTracks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TimeTrack, bool>> filter = null;
                d.TimeTracks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDObject>
                __TDDObjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDObject>(
                    "TDDObjects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDObjects_Filter);
            private static bool __TDDObjects_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDObjects_CanInsert(ref result);
                return result;
            }
            private static bool __TDDObjects_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDObjects_CanUpdate(ref result);
                return result;
            }
            private static bool __TDDObjects_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDObjects_CanDelete(ref result);
                return result;
            }
            private static bool __TDDObjects_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDObjects_CanRead(ref result);
                return result;
            }
            private static void __TDDObjects_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Inserting(e);
            }
            private static void __TDDObjects_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Inserted(e);
            }
            private static void __TDDObjects_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Updating(e);
            }
            private static void __TDDObjects_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Updated(e);
            }
            private static void __TDDObjects_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Deleting(e);
            }
            private static void __TDDObjects_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e)
            {
                d.TDDObjects_Deleted(e);
            }
            private static void __TDDObjects_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDObject e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TDDObjects_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDObject, bool>> __TDDObjects_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDObject, bool>> filter = null;
                d.TDDObjects_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDDetail>
                __TDDDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TDDDetail>(
                    "TDDDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TDDDetails_Filter);
            private static bool __TDDDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDDetails_CanInsert(ref result);
                return result;
            }
            private static bool __TDDDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __TDDDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDDetails_CanDelete(ref result);
                return result;
            }
            private static bool __TDDDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TDDDetails_CanRead(ref result);
                return result;
            }
            private static void __TDDDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Inserting(e);
            }
            private static void __TDDDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Inserted(e);
            }
            private static void __TDDDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Updating(e);
            }
            private static void __TDDDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Updated(e);
            }
            private static void __TDDDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Deleting(e);
            }
            private static void __TDDDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e)
            {
                d.TDDDetails_Deleted(e);
            }
            private static void __TDDDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TDDDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TDDDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDDetail, bool>> __TDDDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TDDDetail, bool>> filter = null;
                d.TDDDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Department>
                __DepartmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Department>(
                    "Departments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Departments_Filter);
            private static bool __Departments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanInsert(ref result);
                return result;
            }
            private static bool __Departments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanUpdate(ref result);
                return result;
            }
            private static bool __Departments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanDelete(ref result);
                return result;
            }
            private static bool __Departments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Departments_CanRead(ref result);
                return result;
            }
            private static void __Departments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Inserting(e);
            }
            private static void __Departments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Inserted(e);
            }
            private static void __Departments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Updating(e);
            }
            private static void __Departments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Updated(e);
            }
            private static void __Departments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Deleting(e);
            }
            private static void __Departments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e)
            {
                d.Departments_Deleted(e);
            }
            private static void __Departments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Department e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Departments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> __Departments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Department, bool>> filter = null;
                d.Departments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeLevel>
                __EmployeeLevelsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeLevel>(
                    "EmployeeLevels",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeLevels_Filter);
            private static bool __EmployeeLevels_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeLevels_CanInsert(ref result);
                return result;
            }
            private static bool __EmployeeLevels_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeLevels_CanUpdate(ref result);
                return result;
            }
            private static bool __EmployeeLevels_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeLevels_CanDelete(ref result);
                return result;
            }
            private static bool __EmployeeLevels_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.EmployeeLevels_CanRead(ref result);
                return result;
            }
            private static void __EmployeeLevels_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Inserting(e);
            }
            private static void __EmployeeLevels_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Inserted(e);
            }
            private static void __EmployeeLevels_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Updating(e);
            }
            private static void __EmployeeLevels_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Updated(e);
            }
            private static void __EmployeeLevels_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Deleting(e);
            }
            private static void __EmployeeLevels_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e)
            {
                d.EmployeeLevels_Deleted(e);
            }
            private static void __EmployeeLevels_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.EmployeeLevel e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeLevels_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeLevel, bool>> __EmployeeLevels_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeeLevel, bool>> filter = null;
                d.EmployeeLevels_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>
                __EmployeeAssignmentsByNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>(
                    "EmployeeAssignmentsByName",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignmentsByName_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignmentsByName_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignmentsByName_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignmentsByName_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeAssignmentsByName_PreprocessQuery);
            private static bool __EmployeeAssignmentsByName_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.EmployeeAssignmentsByName_CanExecute(ref r);
                return r;
            }
            private static void __EmployeeAssignmentsByName_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeeAssignmentsByName_Executing();
            }
            private static void __EmployeeAssignmentsByName_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeeAssignmentsByName_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment>)args[0]);
            }
            private static void __EmployeeAssignmentsByName_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.EmployeeAssignmentsByName_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __EmployeeAssignmentsByName_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment>)args[0];
                d.EmployeeAssignmentsByName_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectExceptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "ProjectExceptions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectExceptions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectExceptions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectExceptions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectExceptions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectExceptions_PreprocessQuery);
            private static bool __ProjectExceptions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProjectExceptions_CanExecute(ref r);
                return r;
            }
            private static void __ProjectExceptions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectExceptions_Executing();
            }
            private static void __ProjectExceptions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectExceptions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __ProjectExceptions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProjectExceptions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProjectExceptions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.ProjectExceptions_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __ProjectAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "ProjectAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectAssignments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectAssignments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectAssignments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectAssignments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectAssignments_PreprocessQuery);
            private static bool __ProjectAssignments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProjectAssignments_CanExecute(ref r);
                return r;
            }
            private static void __ProjectAssignments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectAssignments_Executing();
            }
            private static void __ProjectAssignments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectAssignments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __ProjectAssignments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProjectAssignments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProjectAssignments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.ProjectAssignments_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecast>
                __TimeForecastExceptionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeForecast>(
                    "TimeForecastExceptions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TimeForecastExceptions_PreprocessQuery);
            private static bool __TimeForecastExceptions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.TimeForecastExceptions_CanExecute(ref r);
                return r;
            }
            private static void __TimeForecastExceptions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TimeForecastExceptions_Executing();
            }
            private static void __TimeForecastExceptions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TimeForecastExceptions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeForecast>)args[0]);
            }
            private static void __TimeForecastExceptions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.TimeForecastExceptions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __TimeForecastExceptions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TimeForecast> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TimeForecast>)args[0];
                d.TimeForecastExceptions_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewHeader>
                __FilterReviewsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReviewHeader>(
                    "FilterReviews",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterReviews_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterReviews_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterReviews_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterReviews_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FilterReviews_PreprocessQuery);
            private static bool __FilterReviews_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.FilterReviews_CanExecute(ref r);
                return r;
            }
            private static void __FilterReviews_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FilterReviews_Executing((string)args[0]);
            }
            private static void __FilterReviews_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.FilterReviews_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ReviewHeader>)args[1]);
            }
            private static void __FilterReviews_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.FilterReviews_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __FilterReviews_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ReviewHeader> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ReviewHeader>)args[1];
                d.FilterReviews_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesLookupEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "EmployeesLookup",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeesLookup_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeesLookup_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeesLookup_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeesLookup_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeesLookup_PreprocessQuery);
            private static bool __EmployeesLookup_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.EmployeesLookup_CanExecute(ref r);
                return r;
            }
            private static void __EmployeesLookup_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeesLookup_Executing((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3]);
            }
            private static void __EmployeesLookup_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeesLookup_Executed((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee>)args[4]);
            }
            private static void __EmployeesLookup_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.EmployeesLookup_ExecuteFailed((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3], ex);
            }
            private static global::System.Linq.IQueryable __EmployeesLookup_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Employee>)args[4];
                d.EmployeesLookup_PreprocessQuery((global::System.Nullable<int>)args[0], (string)args[1], (string)args[2], (string)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __DODEmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "DODEmployees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODEmployees_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODEmployees_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODEmployees_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODEmployees_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODEmployees_PreprocessQuery);
            private static bool __DODEmployees_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.DODEmployees_CanExecute(ref r);
                return r;
            }
            private static void __DODEmployees_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODEmployees_Executing();
            }
            private static void __DODEmployees_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODEmployees_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee>)args[0]);
            }
            private static void __DODEmployees_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.DODEmployees_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DODEmployees_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Employee>)args[0];
                d.DODEmployees_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __DODProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "DODProjects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODProjects_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODProjects_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODProjects_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODProjects_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODProjects_PreprocessQuery);
            private static bool __DODProjects_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.DODProjects_CanExecute(ref r);
                return r;
            }
            private static void __DODProjects_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODProjects_Executing();
            }
            private static void __DODProjects_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODProjects_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __DODProjects_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.DODProjects_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DODProjects_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.DODProjects_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __AssignedProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "AssignedProjects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssignedProjects_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssignedProjects_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssignedProjects_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssignedProjects_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssignedProjects_PreprocessQuery);
            private static bool __AssignedProjects_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.AssignedProjects_CanExecute(ref r);
                return r;
            }
            private static void __AssignedProjects_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AssignedProjects_Executing();
            }
            private static void __AssignedProjects_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.AssignedProjects_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __AssignedProjects_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.AssignedProjects_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __AssignedProjects_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.AssignedProjects_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __DODOnlyProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "DODOnlyProjects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODOnlyProjects_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODOnlyProjects_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODOnlyProjects_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODOnlyProjects_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DODOnlyProjects_PreprocessQuery);
            private static bool __DODOnlyProjects_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.DODOnlyProjects_CanExecute(ref r);
                return r;
            }
            private static void __DODOnlyProjects_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODOnlyProjects_Executing();
            }
            private static void __DODOnlyProjects_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DODOnlyProjects_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[0]);
            }
            private static void __DODOnlyProjects_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.DODOnlyProjects_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DODOnlyProjects_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[0];
                d.DODOnlyProjects_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ActiveClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "ActiveClients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveClients_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveClients_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveClients_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveClients_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ActiveClients_PreprocessQuery);
            private static bool __ActiveClients_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ActiveClients_CanExecute(ref r);
                return r;
            }
            private static void __ActiveClients_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActiveClients_Executing();
            }
            private static void __ActiveClients_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ActiveClients_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client>)args[0]);
            }
            private static void __ActiveClients_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ActiveClients_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ActiveClients_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Client>)args[0];
                d.ActiveClients_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>
                __ProjectFeatureTimeTrackingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>(
                    "ProjectFeatureTimeTrackings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureTimeTrackings_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureTimeTrackings_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureTimeTrackings_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureTimeTrackings_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectFeatureTimeTrackings_PreprocessQuery);
            private static bool __ProjectFeatureTimeTrackings_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProjectFeatureTimeTrackings_CanExecute(ref r);
                return r;
            }
            private static void __ProjectFeatureTimeTrackings_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectFeatureTimeTrackings_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProjectFeatureTimeTrackings_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectFeatureTimeTrackings_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking>)args[1]);
            }
            private static void __ProjectFeatureTimeTrackings_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProjectFeatureTimeTrackings_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProjectFeatureTimeTrackings_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking>)args[1];
                d.ProjectFeatureTimeTrackings_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>
                __ProjectIndicentTimeTrackingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTracking>(
                    "ProjectIndicentTimeTrackings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIndicentTimeTrackings_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIndicentTimeTrackings_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIndicentTimeTrackings_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIndicentTimeTrackings_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProjectIndicentTimeTrackings_PreprocessQuery);
            private static bool __ProjectIndicentTimeTrackings_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProjectIndicentTimeTrackings_CanExecute(ref r);
                return r;
            }
            private static void __ProjectIndicentTimeTrackings_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectIndicentTimeTrackings_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ProjectIndicentTimeTrackings_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProjectIndicentTimeTrackings_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking>)args[1]);
            }
            private static void __ProjectIndicentTimeTrackings_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProjectIndicentTimeTrackings_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ProjectIndicentTimeTrackings_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTracking>)args[1];
                d.ProjectIndicentTimeTrackings_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __SortedClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "SortedClients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedClients_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedClients_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedClients_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedClients_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortedClients_PreprocessQuery);
            private static bool __SortedClients_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SortedClients_CanExecute(ref r);
                return r;
            }
            private static void __SortedClients_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedClients_Executing();
            }
            private static void __SortedClients_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortedClients_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Client>)args[0]);
            }
            private static void __SortedClients_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SortedClients_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortedClients_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Client> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Client>)args[0];
                d.SortedClients_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>
                __DodAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>(
                    "DodAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DodAssignments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DodAssignments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DodAssignments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DodAssignments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__DodAssignments_PreprocessQuery);
            private static bool __DodAssignments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.DodAssignments_CanExecute(ref r);
                return r;
            }
            private static void __DodAssignments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DodAssignments_Executing();
            }
            private static void __DodAssignments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.DodAssignments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment>)args[0]);
            }
            private static void __DodAssignments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.DodAssignments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __DodAssignments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment>)args[0];
                d.DodAssignments_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>
                __NonDodAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeAssignment>(
                    "NonDodAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NonDodAssignments_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NonDodAssignments_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NonDodAssignments_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NonDodAssignments_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__NonDodAssignments_PreprocessQuery);
            private static bool __NonDodAssignments_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.NonDodAssignments_CanExecute(ref r);
                return r;
            }
            private static void __NonDodAssignments_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NonDodAssignments_Executing();
            }
            private static void __NonDodAssignments_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.NonDodAssignments_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeAssignment>)args[0]);
            }
            private static void __NonDodAssignments_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.NonDodAssignments_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __NonDodAssignments_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeAssignment>)args[0];
                d.NonDodAssignments_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>
                __EmployeeProjectsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Project>(
                    "EmployeeProjects",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeProjects_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeProjects_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeProjects_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeProjects_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EmployeeProjects_PreprocessQuery);
            private static bool __EmployeeProjects_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.EmployeeProjects_CanExecute(ref r);
                return r;
            }
            private static void __EmployeeProjects_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeeProjects_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __EmployeeProjects_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EmployeeProjects_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Project>)args[1]);
            }
            private static void __EmployeeProjects_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.EmployeeProjects_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __EmployeeProjects_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Project> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Project>)args[1];
                d.EmployeeProjects_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __ESEmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "ESEmployees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ESEmployees_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ESEmployees_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ESEmployees_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ESEmployees_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ESEmployees_PreprocessQuery);
            private static bool __ESEmployees_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ESEmployees_CanExecute(ref r);
                return r;
            }
            private static void __ESEmployees_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ESEmployees_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ESEmployees_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ESEmployees_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee>)args[1]);
            }
            private static void __ESEmployees_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ESEmployees_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ESEmployees_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Employee>)args[1];
                d.ESEmployees_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>
                __ReqTimeTracksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>(
                    "ReqTimeTracks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReqTimeTracks_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReqTimeTracks_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReqTimeTracks_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReqTimeTracks_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReqTimeTracks_PreprocessQuery);
            private static bool __ReqTimeTracks_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ReqTimeTracks_CanExecute(ref r);
                return r;
            }
            private static void __ReqTimeTracks_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ReqTimeTracks_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ReqTimeTracks_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ReqTimeTracks_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack>)args[1]);
            }
            private static void __ReqTimeTracks_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ReqTimeTracks_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ReqTimeTracks_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack>)args[1];
                d.ReqTimeTracks_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>
                __IssueTimeTracksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TimeTrack>(
                    "IssueTimeTracks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueTimeTracks_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueTimeTracks_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueTimeTracks_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueTimeTracks_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__IssueTimeTracks_PreprocessQuery);
            private static bool __IssueTimeTracks_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.IssueTimeTracks_CanExecute(ref r);
                return r;
            }
            private static void __IssueTimeTracks_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssueTimeTracks_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __IssueTimeTracks_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.IssueTimeTracks_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack>)args[1]);
            }
            private static void __IssueTimeTracks_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.IssueTimeTracks_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __IssueTimeTracks_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TimeTrack>)args[1];
                d.IssueTimeTracks_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTitle>
                __SortByNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EmployeeTitle>(
                    "SortByName",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortByName_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortByName_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortByName_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortByName_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortByName_PreprocessQuery);
            private static bool __SortByName_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SortByName_CanExecute(ref r);
                return r;
            }
            private static void __SortByName_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortByName_Executing();
            }
            private static void __SortByName_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortByName_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EmployeeTitle>)args[0]);
            }
            private static void __SortByName_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SortByName_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortByName_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTitle> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EmployeeTitle>)args[0];
                d.SortByName_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __SortBySupervisorEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "SortBySupervisor",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortBySupervisor_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortBySupervisor_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortBySupervisor_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortBySupervisor_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SortBySupervisor_PreprocessQuery);
            private static bool __SortBySupervisor_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SortBySupervisor_CanExecute(ref r);
                return r;
            }
            private static void __SortBySupervisor_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortBySupervisor_Executing();
            }
            private static void __SortBySupervisor_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SortBySupervisor_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Employee>)args[0]);
            }
            private static void __SortBySupervisor_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SortBySupervisor_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SortBySupervisor_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Employee> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Employee>)args[0];
                d.SortBySupervisor_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EvaluationCriteria>
                __EvaluationCriteriasFilterEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.EvaluationCriteria>(
                    "EvaluationCriteriasFilter",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriteriasFilter_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriteriasFilter_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriteriasFilter_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriteriasFilter_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__EvaluationCriteriasFilter_PreprocessQuery);
            private static bool __EvaluationCriteriasFilter_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.EvaluationCriteriasFilter_CanExecute(ref r);
                return r;
            }
            private static void __EvaluationCriteriasFilter_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EvaluationCriteriasFilter_Executing((string)args[0]);
            }
            private static void __EvaluationCriteriasFilter_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.EvaluationCriteriasFilter_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.EvaluationCriteria>)args[1]);
            }
            private static void __EvaluationCriteriasFilter_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.EvaluationCriteriasFilter_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __EvaluationCriteriasFilter_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.EvaluationCriteria> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.EvaluationCriteria>)args[1];
                d.EvaluationCriteriasFilter_PreprocessQuery((string)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the ProjectStatus_RIA_ServiceData datasource.
    /// </summary>
    public sealed partial class ProjectStatus_RIA_ServiceDataService
        : global::LightSwitchApplication.ProjectStatus_RIA_ServiceData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectStatus_RIA_ServiceDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnassignedEmployees_Validate(global::LightSwitchApplication.UnassignedEmployee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummaries_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StatusSummaries_Validate(global::LightSwitchApplication.StatusSummary entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Forecasts_Validate(global::LightSwitchApplication.Forecast entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentReports_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EmployeeAssignmentReports_Validate(global::LightSwitchApplication.EmployeeAssignmentReport entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MultiPeriodForecasts_Validate(global::LightSwitchApplication.MultiPeriodForecast entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AnnualReviewStatus_Validate(global::LightSwitchApplication.AnnualReviewStatu entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RevenueForecast_Validate(global::LightSwitchApplication.RevenueForecastItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectStatusChartData_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectStatusChartData_Validate(global::LightSwitchApplication.DODProjectStatusChartDataItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODFeatureChartData_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODFeatureChartData_Validate(global::LightSwitchApplication.DODFeatureChartDataItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODIncidentChartData_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODIncidentChartData_Validate(global::LightSwitchApplication.DODIncidentChartDataItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTimeLines_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTimeLines_Validate(global::LightSwitchApplication.ProjectTimeLine entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTORecords_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTORecords_Validate(global::LightSwitchApplication.PTORecord entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReportJS_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReviewSummaryReportJS_Validate(global::LightSwitchApplication.ReviewSummaryReportJ entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSpecificForecast_Executing(global::System.Nullable<int> employeeId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetSpecificForecast_PreprocessQuery(global::System.Nullable<int> employeeId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Forecast> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSpecificForecast_Executed(global::System.Nullable<int> employeeId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Forecast> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetSpecificForecast_ExecuteFailed(global::System.Nullable<int> employeeId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetDifferencesReport_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetDifferencesReport_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetDifferencesReport_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.AnnualReviewStatu> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetDifferencesReport_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AnnualReviewStatu> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetDifferencesReport_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetRevenueForecasts_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetRevenueForecasts_Executing(global::System.Nullable<decimal> expPerc, global::System.Nullable<int> countryId, string client, global::System.Nullable<int> quarter, global::System.Nullable<int> year);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetRevenueForecasts_PreprocessQuery(global::System.Nullable<decimal> expPerc, global::System.Nullable<int> countryId, string client, global::System.Nullable<int> quarter, global::System.Nullable<int> year, ref global::System.Linq.IQueryable<global::LightSwitchApplication.RevenueForecastItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetRevenueForecasts_Executed(global::System.Nullable<decimal> expPerc, global::System.Nullable<int> countryId, string client, global::System.Nullable<int> quarter, global::System.Nullable<int> year, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.RevenueForecastItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetRevenueForecasts_ExecuteFailed(global::System.Nullable<decimal> expPerc, global::System.Nullable<int> countryId, string client, global::System.Nullable<int> quarter, global::System.Nullable<int> year, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMultiperiodForecasts_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetMultiperiodForecasts_Executing(global::System.Nullable<int> skillId, string level);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetMultiperiodForecasts_PreprocessQuery(global::System.Nullable<int> skillId, string level, ref global::System.Linq.IQueryable<global::LightSwitchApplication.MultiPeriodForecast> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetMultiperiodForecasts_Executed(global::System.Nullable<int> skillId, string level, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MultiPeriodForecast> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void GetMultiperiodForecasts_ExecuteFailed(global::System.Nullable<int> skillId, string level, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectCountByStatus_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjectCountByStatus_Executing(global::System.Nullable<bool> includeJS);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODProjectCountByStatus_PreprocessQuery(global::System.Nullable<bool> includeJS, ref global::System.Linq.IQueryable<global::LightSwitchApplication.DODProjectStatusChartDataItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjectCountByStatus_Executed(global::System.Nullable<bool> includeJS, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODProjectStatusChartDataItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODProjectCountByStatus_ExecuteFailed(global::System.Nullable<bool> includeJS, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODFeatureCountByStatus_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODFeatureCountByStatus_Executing(global::System.Nullable<int> projectId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODFeatureCountByStatus_PreprocessQuery(global::System.Nullable<int> projectId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.DODFeatureChartDataItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODFeatureCountByStatus_Executed(global::System.Nullable<int> projectId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODFeatureChartDataItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODFeatureCountByStatus_ExecuteFailed(global::System.Nullable<int> projectId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODIncidentCountByStatus_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODIncidentCountByStatus_Executing(global::System.Nullable<int> projectId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODIncidentCountByStatus_PreprocessQuery(global::System.Nullable<int> projectId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.DODIncidentChartDataItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODIncidentCountByStatus_Executed(global::System.Nullable<int> projectId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODIncidentChartDataItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void DODIncidentCountByStatus_ExecuteFailed(global::System.Nullable<int> projectId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReport_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeTrackReport_Executing(global::System.Nullable<int> employeeId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrackReport_PreprocessQuery(global::System.Nullable<int> employeeId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectTimeLine> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeTrackReport_Executed(global::System.Nullable<int> employeeId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectTimeLine> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TimeTrackReport_ExecuteFailed(global::System.Nullable<int> employeeId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReport_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PTOReport_Executing(global::System.Nullable<int> countryId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PTOReport_PreprocessQuery(global::System.Nullable<int> countryId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.PTORecord> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PTOReport_Executed(global::System.Nullable<int> countryId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PTORecord> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PTOReport_ExecuteFailed(global::System.Nullable<int> countryId, global::System.Nullable<global::System.DateTime> pFromDate, global::System.Nullable<global::System.DateTime> pToDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.UnassignedEmployee>
                __UnassignedEmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.UnassignedEmployee>(
                    "UnassignedEmployees",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__UnassignedEmployees_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__UnassignedEmployees_Validate,
                    null);
            private static bool __UnassignedEmployees_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.UnassignedEmployees_CanRead(ref result);
                return result;
            }
            private static void __UnassignedEmployees_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.UnassignedEmployee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UnassignedEmployees_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.StatusSummary>
                __StatusSummariesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.StatusSummary>(
                    "StatusSummaries",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__StatusSummaries_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__StatusSummaries_Validate,
                    null);
            private static bool __StatusSummaries_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.StatusSummaries_CanRead(ref result);
                return result;
            }
            private static void __StatusSummaries_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.StatusSummary e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StatusSummaries_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.Forecast>
                __ForecastsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.Forecast>(
                    "Forecasts",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__Forecasts_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__Forecasts_Validate,
                    null);
            private static bool __Forecasts_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.Forecasts_CanRead(ref result);
                return result;
            }
            private static void __Forecasts_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.Forecast e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Forecasts_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.EmployeeAssignmentReport>
                __EmployeeAssignmentReportsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.EmployeeAssignmentReport>(
                    "EmployeeAssignmentReports",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__EmployeeAssignmentReports_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__EmployeeAssignmentReports_Validate,
                    null);
            private static bool __EmployeeAssignmentReports_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.EmployeeAssignmentReports_CanRead(ref result);
                return result;
            }
            private static void __EmployeeAssignmentReports_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.EmployeeAssignmentReport e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.EmployeeAssignmentReports_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.MultiPeriodForecast>
                __MultiPeriodForecastsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.MultiPeriodForecast>(
                    "MultiPeriodForecasts",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__MultiPeriodForecasts_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__MultiPeriodForecasts_Validate,
                    null);
            private static bool __MultiPeriodForecasts_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.MultiPeriodForecasts_CanRead(ref result);
                return result;
            }
            private static void __MultiPeriodForecasts_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.MultiPeriodForecast e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.MultiPeriodForecasts_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.AnnualReviewStatu>
                __AnnualReviewStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.AnnualReviewStatu>(
                    "AnnualReviewStatus",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__AnnualReviewStatus_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__AnnualReviewStatus_Validate,
                    null);
            private static bool __AnnualReviewStatus_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.AnnualReviewStatus_CanRead(ref result);
                return result;
            }
            private static void __AnnualReviewStatus_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.AnnualReviewStatu e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AnnualReviewStatus_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.RevenueForecastItem>
                __RevenueForecastEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.RevenueForecastItem>(
                    "RevenueForecast",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__RevenueForecast_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__RevenueForecast_Validate,
                    null);
            private static bool __RevenueForecast_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.RevenueForecast_CanRead(ref result);
                return result;
            }
            private static void __RevenueForecast_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.RevenueForecastItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.RevenueForecast_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODProjectStatusChartDataItem>
                __DODProjectStatusChartDataEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODProjectStatusChartDataItem>(
                    "DODProjectStatusChartData",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectStatusChartData_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectStatusChartData_Validate,
                    null);
            private static bool __DODProjectStatusChartData_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.DODProjectStatusChartData_CanRead(ref result);
                return result;
            }
            private static void __DODProjectStatusChartData_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.DODProjectStatusChartDataItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DODProjectStatusChartData_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODFeatureChartDataItem>
                __DODFeatureChartDataEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODFeatureChartDataItem>(
                    "DODFeatureChartData",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureChartData_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureChartData_Validate,
                    null);
            private static bool __DODFeatureChartData_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.DODFeatureChartData_CanRead(ref result);
                return result;
            }
            private static void __DODFeatureChartData_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.DODFeatureChartDataItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DODFeatureChartData_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODIncidentChartDataItem>
                __DODIncidentChartDataEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODIncidentChartDataItem>(
                    "DODIncidentChartData",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentChartData_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentChartData_Validate,
                    null);
            private static bool __DODIncidentChartData_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.DODIncidentChartData_CanRead(ref result);
                return result;
            }
            private static void __DODIncidentChartData_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.DODIncidentChartDataItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.DODIncidentChartData_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ProjectTimeLine>
                __ProjectTimeLinesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ProjectTimeLine>(
                    "ProjectTimeLines",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__ProjectTimeLines_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__ProjectTimeLines_Validate,
                    null);
            private static bool __ProjectTimeLines_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.ProjectTimeLines_CanRead(ref result);
                return result;
            }
            private static void __ProjectTimeLines_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.ProjectTimeLine e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProjectTimeLines_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.PTORecord>
                __PTORecordsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.PTORecord>(
                    "PTORecords",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTORecords_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTORecords_Validate,
                    null);
            private static bool __PTORecords_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.PTORecords_CanRead(ref result);
                return result;
            }
            private static void __PTORecords_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.PTORecord e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PTORecords_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ReviewSummaryReportJ>
                __ReviewSummaryReportJSEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ReviewSummaryReportJ>(
                    "ReviewSummaryReportJS",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__ReviewSummaryReportJS_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__ReviewSummaryReportJS_Validate,
                    null);
            private static bool __ReviewSummaryReportJS_CanRead(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d)
            {
                bool result = true;
                d.ReviewSummaryReportJS_CanRead(ref result);
                return result;
            }
            private static void __ReviewSummaryReportJS_Validate(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::LightSwitchApplication.ReviewSummaryReportJ e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReviewSummaryReportJS_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.Forecast>
                __GetSpecificForecastEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.Forecast>(
                    "GetSpecificForecast",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetSpecificForecast_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetSpecificForecast_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetSpecificForecast_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetSpecificForecast_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetSpecificForecast_PreprocessQuery);
            private static bool __GetSpecificForecast_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.GetSpecificForecast_CanExecute(ref r);
                return r;
            }
            private static void __GetSpecificForecast_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetSpecificForecast_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __GetSpecificForecast_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetSpecificForecast_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Forecast>)args[1]);
            }
            private static void __GetSpecificForecast_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetSpecificForecast_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetSpecificForecast_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Forecast> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Forecast>)args[1];
                d.GetSpecificForecast_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.AnnualReviewStatu>
                __GetDifferencesReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.AnnualReviewStatu>(
                    "GetDifferencesReport",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetDifferencesReport_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetDifferencesReport_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetDifferencesReport_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetDifferencesReport_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetDifferencesReport_PreprocessQuery);
            private static bool __GetDifferencesReport_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.GetDifferencesReport_CanExecute(ref r);
                return r;
            }
            private static void __GetDifferencesReport_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetDifferencesReport_Executing();
            }
            private static void __GetDifferencesReport_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetDifferencesReport_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AnnualReviewStatu>)args[0]);
            }
            private static void __GetDifferencesReport_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetDifferencesReport_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __GetDifferencesReport_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AnnualReviewStatu> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AnnualReviewStatu>)args[0];
                d.GetDifferencesReport_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.RevenueForecastItem>
                __GetRevenueForecastsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.RevenueForecastItem>(
                    "GetRevenueForecasts",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetRevenueForecasts_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetRevenueForecasts_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetRevenueForecasts_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetRevenueForecasts_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetRevenueForecasts_PreprocessQuery);
            private static bool __GetRevenueForecasts_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.GetRevenueForecasts_CanExecute(ref r);
                return r;
            }
            private static void __GetRevenueForecasts_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetRevenueForecasts_Executing((global::System.Nullable<decimal>)args[0], (global::System.Nullable<int>)args[1], (string)args[2], (global::System.Nullable<int>)args[3], (global::System.Nullable<int>)args[4]);
            }
            private static void __GetRevenueForecasts_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetRevenueForecasts_Executed((global::System.Nullable<decimal>)args[0], (global::System.Nullable<int>)args[1], (string)args[2], (global::System.Nullable<int>)args[3], (global::System.Nullable<int>)args[4], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.RevenueForecastItem>)args[5]);
            }
            private static void __GetRevenueForecasts_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetRevenueForecasts_ExecuteFailed((global::System.Nullable<decimal>)args[0], (global::System.Nullable<int>)args[1], (string)args[2], (global::System.Nullable<int>)args[3], (global::System.Nullable<int>)args[4], ex);
            }
            private static global::System.Linq.IQueryable __GetRevenueForecasts_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.RevenueForecastItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.RevenueForecastItem>)args[5];
                d.GetRevenueForecasts_PreprocessQuery((global::System.Nullable<decimal>)args[0], (global::System.Nullable<int>)args[1], (string)args[2], (global::System.Nullable<int>)args[3], (global::System.Nullable<int>)args[4], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.MultiPeriodForecast>
                __GetMultiperiodForecastsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.MultiPeriodForecast>(
                    "GetMultiperiodForecasts",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetMultiperiodForecasts_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetMultiperiodForecasts_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetMultiperiodForecasts_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetMultiperiodForecasts_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__GetMultiperiodForecasts_PreprocessQuery);
            private static bool __GetMultiperiodForecasts_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.GetMultiperiodForecasts_CanExecute(ref r);
                return r;
            }
            private static void __GetMultiperiodForecasts_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetMultiperiodForecasts_Executing((global::System.Nullable<int>)args[0], (string)args[1]);
            }
            private static void __GetMultiperiodForecasts_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.GetMultiperiodForecasts_Executed((global::System.Nullable<int>)args[0], (string)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.MultiPeriodForecast>)args[2]);
            }
            private static void __GetMultiperiodForecasts_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetMultiperiodForecasts_ExecuteFailed((global::System.Nullable<int>)args[0], (string)args[1], ex);
            }
            private static global::System.Linq.IQueryable __GetMultiperiodForecasts_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.MultiPeriodForecast> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.MultiPeriodForecast>)args[2];
                d.GetMultiperiodForecasts_PreprocessQuery((global::System.Nullable<int>)args[0], (string)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODProjectStatusChartDataItem>
                __DODProjectCountByStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODProjectStatusChartDataItem>(
                    "DODProjectCountByStatus",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectCountByStatus_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectCountByStatus_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectCountByStatus_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectCountByStatus_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODProjectCountByStatus_PreprocessQuery);
            private static bool __DODProjectCountByStatus_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.DODProjectCountByStatus_CanExecute(ref r);
                return r;
            }
            private static void __DODProjectCountByStatus_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODProjectCountByStatus_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __DODProjectCountByStatus_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODProjectCountByStatus_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODProjectStatusChartDataItem>)args[1]);
            }
            private static void __DODProjectCountByStatus_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.DODProjectCountByStatus_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DODProjectCountByStatus_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DODProjectStatusChartDataItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DODProjectStatusChartDataItem>)args[1];
                d.DODProjectCountByStatus_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODFeatureChartDataItem>
                __DODFeatureCountByStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODFeatureChartDataItem>(
                    "DODFeatureCountByStatus",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureCountByStatus_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureCountByStatus_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureCountByStatus_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureCountByStatus_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODFeatureCountByStatus_PreprocessQuery);
            private static bool __DODFeatureCountByStatus_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.DODFeatureCountByStatus_CanExecute(ref r);
                return r;
            }
            private static void __DODFeatureCountByStatus_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODFeatureCountByStatus_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __DODFeatureCountByStatus_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODFeatureCountByStatus_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODFeatureChartDataItem>)args[1]);
            }
            private static void __DODFeatureCountByStatus_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.DODFeatureCountByStatus_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DODFeatureCountByStatus_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DODFeatureChartDataItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DODFeatureChartDataItem>)args[1];
                d.DODFeatureCountByStatus_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODIncidentChartDataItem>
                __DODIncidentCountByStatusEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.DODIncidentChartDataItem>(
                    "DODIncidentCountByStatus",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentCountByStatus_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentCountByStatus_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentCountByStatus_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentCountByStatus_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__DODIncidentCountByStatus_PreprocessQuery);
            private static bool __DODIncidentCountByStatus_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.DODIncidentCountByStatus_CanExecute(ref r);
                return r;
            }
            private static void __DODIncidentCountByStatus_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODIncidentCountByStatus_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __DODIncidentCountByStatus_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.DODIncidentCountByStatus_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.DODIncidentChartDataItem>)args[1]);
            }
            private static void __DODIncidentCountByStatus_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.DODIncidentCountByStatus_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __DODIncidentCountByStatus_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.DODIncidentChartDataItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.DODIncidentChartDataItem>)args[1];
                d.DODIncidentCountByStatus_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ProjectTimeLine>
                __TimeTrackReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.ProjectTimeLine>(
                    "TimeTrackReport",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__TimeTrackReport_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__TimeTrackReport_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__TimeTrackReport_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__TimeTrackReport_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__TimeTrackReport_PreprocessQuery);
            private static bool __TimeTrackReport_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.TimeTrackReport_CanExecute(ref r);
                return r;
            }
            private static void __TimeTrackReport_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.TimeTrackReport_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
            }
            private static void __TimeTrackReport_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.TimeTrackReport_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectTimeLine>)args[3]);
            }
            private static void __TimeTrackReport_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.TimeTrackReport_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __TimeTrackReport_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectTimeLine> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProjectTimeLine>)args[3];
                d.TimeTrackReport_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.PTORecord>
                __PTOReportEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService, global::LightSwitchApplication.PTORecord>(
                    "PTOReport",
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTOReport_CanExecute,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTOReport_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTOReport_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTOReport_Failed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__PTOReport_PreprocessQuery);
            private static bool __PTOReport_CanExecute(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, bool r)
            {
                d.PTOReport_CanExecute(ref r);
                return r;
            }
            private static void __PTOReport_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.PTOReport_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2]);
            }
            private static void __PTOReport_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                d.PTOReport_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PTORecord>)args[3]);
            }
            private static void __PTOReport_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.PTOReport_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ex);
            }
            private static global::System.Linq.IQueryable __PTOReport_PreprocessQuery(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PTORecord> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PTORecord>)args[3];
                d.PTOReport_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<global::System.DateTime>)args[1], (global::System.Nullable<global::System.DateTime>)args[2], ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService>(
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ProjectStatus_RIA_ServiceDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
