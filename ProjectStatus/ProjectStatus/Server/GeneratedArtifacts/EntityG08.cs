

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectIncident : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectIncident entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectIncident()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectIncident(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectIncident> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectIncident.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IncidentId
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IncidentId);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IncidentId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IncidentId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientId
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ClientId);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ClientId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SkyDriveLink
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.SkyDriveLink);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.SkyDriveLink, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SkyDriveLink_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateFound
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DateFound);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DateFound, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFound_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFound_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFound_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Priority
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Severity
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Severity);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Severity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Severity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> AssignedDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.AssignedDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.AssignedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DODTeam
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DODTeam);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DODTeam, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DODTeam_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ConsumedAnalysisHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedAnalysisHours);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedAnalysisHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedAnalysisHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ConsumedDevelopmentHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ConsumedDevelopmentHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> PercentageCompleted
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.PercentageCompleted);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.PercentageCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PercentageCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CompletedDate
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.CompletedDate);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.CompletedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompletedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DevelopmentProjectName
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DevelopmentProjectName);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DevelopmentProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DevelopmentProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LastUpdate);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LastUpdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdateInLocalTime
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LastUpdateInLocalTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Compute(ref global::System.DateTime result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedAnalysisHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedAnalysisHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedAnalysisHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedAnalysisHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedDevHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedDevHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedDevHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedDevHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> TotalEstimatedHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TotalEstimatedHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalEstimatedHours_Compute(ref global::System.Nullable<decimal> result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalEstimatedHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal TrackedBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TrackedBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal RemainingHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.RemainingHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RemainingHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableOverHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.BillableOverHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ReqTotalEstimate
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReqTotalEstimate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalEstimate_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalEstimate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal ReqTotalBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReqTotalBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqTotalBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal IssuesTotalEstimate
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IssuesTotalEstimate);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalEstimate_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalEstimate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal IssuesTotalBillableHours
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IssuesTotalBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssuesTotalBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VisualStudioProjectName
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.VisualStudioProjectName);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.VisualStudioProjectName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VisualStudioProjectName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LabelFileName
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LabelFileName);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LabelFileName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFileName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Developer
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Developer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ProjectIncidentComments);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentCommentsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ProjectIncidentComments);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimeTracking> TimeTrackings
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTracking> TimeTrackingsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TimeTrackings);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TDDExtension> TDDExtensions
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDExtensions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDExtension> TDDExtensionsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDExtensions);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee ReportedBy
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy);
            }
            set
            {
                global::LightSwitchApplication.ProjectIncident.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Requirement> Requirements
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Requirements);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Requirement> RequirementsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Requirements);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Issue> Issues
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Issues);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Issue> IssuesQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Issues);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TDDObject> TDDObjects
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDObjects);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TDDObject> TDDObjectsQuery
        {
            get
            {
                return global::LightSwitchApplication.ProjectIncident.DetailsClass.GetQuery(this, global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDObjects);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectIncident,
                global::LightSwitchApplication.ProjectIncident.DetailsClass,
                global::LightSwitchApplication.ProjectIncident.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>.Entry
                __ProjectIncidentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectIncident.DetailsClass.__ProjectIncident_CreateNew,
                    global::LightSwitchApplication.ProjectIncident.DetailsClass.__ProjectIncident_Created,
                    global::LightSwitchApplication.ProjectIncident.DetailsClass.__ProjectIncident_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectIncident __ProjectIncident_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectIncident> es)
            {
                return new global::LightSwitchApplication.ProjectIncident(es);
            }
            private static void __ProjectIncident_Created(global::LightSwitchApplication.ProjectIncident e)
            {
                e.ProjectIncident_Created();
            }
            private static bool __ProjectIncident_AllowSaveWithErrors(global::LightSwitchApplication.ProjectIncident e)
            {
                bool result = false;
                e.ProjectIncident_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> IncidentId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IncidentId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> ClientId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ClientId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> SkyDriveLink
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.SkyDriveLink) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime> DateFound
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DateFound) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int> Severity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Severity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>> AssignedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.AssignedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> DODTeam
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DODTeam) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>> ConsumedAnalysisHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedAnalysisHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>> ConsumedDevelopmentHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ConsumedDevelopmentHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>> PercentageCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.PercentageCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>> CompletedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.CompletedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> DevelopmentProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.DevelopmentProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime> LastUpdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LastUpdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime> LastUpdateInLocalTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LastUpdateInLocalTime) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> TrackedAnalysisHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedAnalysisHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> TrackedDevHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedDevHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>> TotalEstimatedHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TotalEstimatedHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> TrackedBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TrackedBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> RemainingHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.RemainingHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> BillableOverHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.BillableOverHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> ReqTotalEstimate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReqTotalEstimate) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> ReqTotalBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReqTotalBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> IssuesTotalEstimate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IssuesTotalEstimate) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal> IssuesTotalBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.IssuesTotalBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> VisualStudioProjectName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.VisualStudioProjectName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string> LabelFileName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.LabelFileName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee> Developer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment> ProjectIncidentComments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ProjectIncidentComments) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking> TimeTrackings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TimeTrackings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension> TDDExtensions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDExtensions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee> ReportedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement> Requirements
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Requirements) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue> Issues
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Issues) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject> TDDObjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDObjects) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string IncidentId { get; set; }
                new string ClientId { get; set; }
                new string Name { get; set; }
                new string SkyDriveLink { get; set; }
                new string Description { get; set; }
                new global::System.DateTime DateFound { get; set; }
                new int Priority { get; set; }
                new int Severity { get; set; }
                new global::System.Nullable<global::System.DateTime> AssignedDate { get; set; }
                new string DODTeam { get; set; }
                new string Status { get; set; }
                new global::System.Nullable<int> ConsumedAnalysisHours { get; set; }
                new global::System.Nullable<int> ConsumedDevelopmentHours { get; set; }
                new global::System.Nullable<decimal> PercentageCompleted { get; set; }
                new global::System.Nullable<global::System.DateTime> CompletedDate { get; set; }
                new string DevelopmentProjectName { get; set; }
                new global::System.DateTime LastUpdate { get; set; }
                new string VisualStudioProjectName { get; set; }
                new string LabelFileName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Developer { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
                new global::System.Collections.IEnumerable ProjectIncidentComments { get; }
                new global::System.Collections.IEnumerable TimeTrackings { get; }
                new global::System.Collections.IEnumerable TDDExtensions { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ReportedBy { get; set; }
                new global::System.Collections.IEnumerable Requirements { get; }
                new global::System.Collections.IEnumerable Issues { get; }
                new global::System.Collections.IEnumerable TDDObjects { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    IncidentId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "IncidentId",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IncidentId_OnValueChanged);
                private static void _IncidentId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._IncidentId, sf);
                }
                private static bool _IncidentId_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.IncidentId_IsReadOnly(ref result);
                    return result;
                }
                private static void _IncidentId_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IncidentId_Validate(r);
                }
                private static string _IncidentId_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.IncidentId;
                }
                private static void _IncidentId_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IncidentId = v;
                }
                private static void _IncidentId_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.IncidentId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    ClientId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "ClientId",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ClientId_OnValueChanged);
                private static void _ClientId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientId, sf);
                }
                private static bool _ClientId_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.ClientId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientId_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientId_Validate(r);
                }
                private static string _ClientId_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientId;
                }
                private static void _ClientId_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientId = v;
                }
                private static void _ClientId_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.ClientId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    SkyDriveLink = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "SkyDriveLink",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._SkyDriveLink_OnValueChanged);
                private static void _SkyDriveLink_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._SkyDriveLink, sf);
                }
                private static bool _SkyDriveLink_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.SkyDriveLink_IsReadOnly(ref result);
                    return result;
                }
                private static void _SkyDriveLink_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SkyDriveLink_Validate(r);
                }
                private static string _SkyDriveLink_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.SkyDriveLink;
                }
                private static void _SkyDriveLink_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SkyDriveLink = v;
                }
                private static void _SkyDriveLink_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.SkyDriveLink_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry
                    DateFound = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry(
                        "DateFound",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DateFound_OnValueChanged);
                private static void _DateFound_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._DateFound, sf);
                }
                private static bool _DateFound_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.DateFound_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateFound_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateFound_Validate(r);
                }
                private static global::System.DateTime _DateFound_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.DateFound;
                }
                private static void _DateFound_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateFound = global::LightSwitchApplication.ProjectIncident.DetailsClass.TruncateDate(v);
                }
                private static void _DateFound_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.DateFound_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry(
                        "Priority",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static int _Priority_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry
                    Severity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Entry(
                        "Severity",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Severity_OnValueChanged);
                private static void _Severity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Severity, sf);
                }
                private static bool _Severity_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Severity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Severity_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Severity_Validate(r);
                }
                private static int _Severity_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Severity;
                }
                private static void _Severity_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Severity = v;
                }
                private static void _Severity_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Severity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    AssignedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "AssignedDate",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._AssignedDate_OnValueChanged);
                private static void _AssignedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedDate, sf);
                }
                private static bool _AssignedDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.AssignedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedDate_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _AssignedDate_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedDate;
                }
                private static void _AssignedDate_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.AssignedDate = global::LightSwitchApplication.ProjectIncident.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _AssignedDate_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.AssignedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    DODTeam = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "DODTeam",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DODTeam_OnValueChanged);
                private static void _DODTeam_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._DODTeam, sf);
                }
                private static bool _DODTeam_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.DODTeam_IsReadOnly(ref result);
                    return result;
                }
                private static void _DODTeam_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DODTeam_Validate(r);
                }
                private static string _DODTeam_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.DODTeam;
                }
                private static void _DODTeam_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DODTeam = v;
                }
                private static void _DODTeam_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.DODTeam_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Entry
                    ConsumedAnalysisHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ConsumedAnalysisHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedAnalysisHours_OnValueChanged);
                private static void _ConsumedAnalysisHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ConsumedAnalysisHours, sf);
                }
                private static bool _ConsumedAnalysisHours_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.ConsumedAnalysisHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConsumedAnalysisHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConsumedAnalysisHours_Validate(r);
                }
                private static global::System.Nullable<int> _ConsumedAnalysisHours_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.ConsumedAnalysisHours;
                }
                private static void _ConsumedAnalysisHours_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ConsumedAnalysisHours = v;
                }
                private static void _ConsumedAnalysisHours_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.ConsumedAnalysisHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Entry
                    ConsumedDevelopmentHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ConsumedDevelopmentHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ConsumedDevelopmentHours_OnValueChanged);
                private static void _ConsumedDevelopmentHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ConsumedDevelopmentHours, sf);
                }
                private static bool _ConsumedDevelopmentHours_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.ConsumedDevelopmentHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _ConsumedDevelopmentHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ConsumedDevelopmentHours_Validate(r);
                }
                private static global::System.Nullable<int> _ConsumedDevelopmentHours_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.ConsumedDevelopmentHours;
                }
                private static void _ConsumedDevelopmentHours_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ConsumedDevelopmentHours = v;
                }
                private static void _ConsumedDevelopmentHours_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.ConsumedDevelopmentHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Entry
                    PercentageCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "PercentageCompleted",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._PercentageCompleted_OnValueChanged);
                private static void _PercentageCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._PercentageCompleted, sf);
                }
                private static bool _PercentageCompleted_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.PercentageCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _PercentageCompleted_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PercentageCompleted_Validate(r);
                }
                private static global::System.Nullable<decimal> _PercentageCompleted_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.PercentageCompleted;
                }
                private static void _PercentageCompleted_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.PercentageCompleted = v;
                }
                private static void _PercentageCompleted_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.PercentageCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CompletedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CompletedDate",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._CompletedDate_OnValueChanged);
                private static void _CompletedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._CompletedDate, sf);
                }
                private static bool _CompletedDate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.CompletedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompletedDate_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompletedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CompletedDate_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.CompletedDate;
                }
                private static void _CompletedDate_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CompletedDate = global::LightSwitchApplication.ProjectIncident.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CompletedDate_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.CompletedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    DevelopmentProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "DevelopmentProjectName",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._DevelopmentProjectName_OnValueChanged);
                private static void _DevelopmentProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._DevelopmentProjectName, sf);
                }
                private static bool _DevelopmentProjectName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.DevelopmentProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _DevelopmentProjectName_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DevelopmentProjectName_Validate(r);
                }
                private static string _DevelopmentProjectName_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.DevelopmentProjectName;
                }
                private static void _DevelopmentProjectName_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DevelopmentProjectName = v;
                }
                private static void _DevelopmentProjectName_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.DevelopmentProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry
                    LastUpdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdate",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdate_OnValueChanged);
                private static void _LastUpdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdate, sf);
                }
                private static bool _LastUpdate_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.LastUpdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastUpdate_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdate_Validate(r);
                }
                private static global::System.DateTime _LastUpdate_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.LastUpdate;
                }
                private static void _LastUpdate_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LastUpdate = global::LightSwitchApplication.ProjectIncident.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LastUpdate_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.LastUpdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry
                    LastUpdateInLocalTime = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdateInLocalTime",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_ComputeValue);
                private static void _LastUpdateInLocalTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdateInLocalTime, sf);
                }
                private static void _LastUpdateInLocalTime_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdateInLocalTime_Validate(r);
                }
                private static global::System.DateTime _LastUpdateInLocalTime_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    global::System.DateTime value = default(global::System.DateTime);
                    e.LastUpdateInLocalTime_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    TrackedAnalysisHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "TrackedAnalysisHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedAnalysisHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedAnalysisHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedAnalysisHours_ComputeValue);
                private static void _TrackedAnalysisHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedAnalysisHours, sf);
                }
                private static void _TrackedAnalysisHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedAnalysisHours_Validate(r);
                }
                private static decimal _TrackedAnalysisHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.TrackedAnalysisHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    TrackedDevHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "TrackedDevHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedDevHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedDevHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedDevHours_ComputeValue);
                private static void _TrackedDevHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedDevHours, sf);
                }
                private static void _TrackedDevHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedDevHours_Validate(r);
                }
                private static decimal _TrackedDevHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.TrackedDevHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Entry
                    TotalEstimatedHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "TotalEstimatedHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TotalEstimatedHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TotalEstimatedHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TotalEstimatedHours_ComputeValue);
                private static void _TotalEstimatedHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalEstimatedHours, sf);
                }
                private static void _TotalEstimatedHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalEstimatedHours_Validate(r);
                }
                private static global::System.Nullable<decimal> _TotalEstimatedHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    global::System.Nullable<decimal> value = default(global::System.Nullable<decimal>);
                    e.TotalEstimatedHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    TrackedBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "TrackedBillableHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedBillableHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedBillableHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TrackedBillableHours_ComputeValue);
                private static void _TrackedBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TrackedBillableHours, sf);
                }
                private static void _TrackedBillableHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TrackedBillableHours_Validate(r);
                }
                private static decimal _TrackedBillableHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.TrackedBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    RemainingHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "RemainingHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RemainingHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RemainingHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._RemainingHours_ComputeValue);
                private static void _RemainingHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._RemainingHours, sf);
                }
                private static void _RemainingHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RemainingHours_Validate(r);
                }
                private static decimal _RemainingHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.RemainingHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    BillableOverHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "BillableOverHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._BillableOverHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._BillableOverHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._BillableOverHours_ComputeValue);
                private static void _BillableOverHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableOverHours, sf);
                }
                private static void _BillableOverHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableOverHours_Validate(r);
                }
                private static decimal _BillableOverHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.BillableOverHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    ReqTotalEstimate = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "ReqTotalEstimate",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalEstimate_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalEstimate_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalEstimate_ComputeValue);
                private static void _ReqTotalEstimate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ReqTotalEstimate, sf);
                }
                private static void _ReqTotalEstimate_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReqTotalEstimate_Validate(r);
                }
                private static decimal _ReqTotalEstimate_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.ReqTotalEstimate_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    ReqTotalBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "ReqTotalBillableHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalBillableHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalBillableHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReqTotalBillableHours_ComputeValue);
                private static void _ReqTotalBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ReqTotalBillableHours, sf);
                }
                private static void _ReqTotalBillableHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReqTotalBillableHours_Validate(r);
                }
                private static decimal _ReqTotalBillableHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.ReqTotalBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    IssuesTotalEstimate = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "IssuesTotalEstimate",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalEstimate_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalEstimate_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalEstimate_ComputeValue);
                private static void _IssuesTotalEstimate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesTotalEstimate, sf);
                }
                private static void _IssuesTotalEstimate_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssuesTotalEstimate_Validate(r);
                }
                private static decimal _IssuesTotalEstimate_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.IssuesTotalEstimate_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry
                    IssuesTotalBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Entry(
                        "IssuesTotalBillableHours",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._IssuesTotalBillableHours_ComputeValue);
                private static void _IssuesTotalBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._IssuesTotalBillableHours, sf);
                }
                private static void _IssuesTotalBillableHours_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssuesTotalBillableHours_Validate(r);
                }
                private static decimal _IssuesTotalBillableHours_ComputeValue(global::LightSwitchApplication.ProjectIncident e)
                {
                    decimal value = default(decimal);
                    e.IssuesTotalBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    VisualStudioProjectName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "VisualStudioProjectName",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._VisualStudioProjectName_OnValueChanged);
                private static void _VisualStudioProjectName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._VisualStudioProjectName, sf);
                }
                private static bool _VisualStudioProjectName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.VisualStudioProjectName_IsReadOnly(ref result);
                    return result;
                }
                private static void _VisualStudioProjectName_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VisualStudioProjectName_Validate(r);
                }
                private static string _VisualStudioProjectName_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.VisualStudioProjectName;
                }
                private static void _VisualStudioProjectName_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VisualStudioProjectName = v;
                }
                private static void _VisualStudioProjectName_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.VisualStudioProjectName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry
                    LabelFileName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Entry(
                        "LabelFileName",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._LabelFileName_OnValueChanged);
                private static void _LabelFileName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._LabelFileName, sf);
                }
                private static bool _LabelFileName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.LabelFileName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LabelFileName_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LabelFileName_Validate(r);
                }
                private static string _LabelFileName_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.LabelFileName;
                }
                private static void _LabelFileName_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LabelFileName = v;
                }
                private static void _LabelFileName_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.LabelFileName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Developer = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Developer",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_Refresh,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Developer_OnValueChanged);
                private static void _Developer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Developer, sf);
                }
                private static bool _Developer_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Developer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Developer_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Developer_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Developer_GetCoreImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Developer;
                }
                private static global::LightSwitchApplication.Employee _Developer_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer, ref d._Developer);
                }
                private static void _Developer_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer, ref d._Developer, (i, ev) => i.Developer = ev, v);
                }
                private static void _Developer_Refresh(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Developer, ref d._Developer);
                }
                private static void _Developer_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Developer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.Project_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry
                    ProjectIncidentComments = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Entry(
                        "ProjectIncidentComments",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ProjectIncidentComments_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ProjectIncidentComments_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ProjectIncidentComments_GetEntityCollection);
                private static void _ProjectIncidentComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncidentComments, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProjectIncidentComment> _ProjectIncidentComments_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProjectIncidentComment, global::LightSwitchApplication.ProjectIncidentComment.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ProjectIncidentComments, ref d._ProjectIncidentComments);
                }
                private static global::System.Collections.IEnumerable _ProjectIncidentComments_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectIncidentComments;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry
                    TimeTrackings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking>.Entry(
                        "TimeTrackings",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TimeTrackings_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TimeTrackings_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TimeTrackings_GetEntityCollection);
                private static void _TimeTrackings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTrackings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTracking> _TimeTrackings_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimeTracking, global::LightSwitchApplication.TimeTracking.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TimeTrackings, ref d._TimeTrackings);
                }
                private static global::System.Collections.IEnumerable _TimeTrackings_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeTrackings;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry
                    TDDExtensions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension>.Entry(
                        "TDDExtensions",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDExtensions_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDExtensions_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDExtensions_GetEntityCollection);
                private static void _TDDExtensions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TDDExtensions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TDDExtension> _TDDExtensions_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TDDExtension, global::LightSwitchApplication.TDDExtension.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDExtensions, ref d._TDDExtensions);
                }
                private static global::System.Collections.IEnumerable _TDDExtensions_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.TDDExtensions;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    ReportedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "ReportedBy",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_Validate,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_GetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_SetImplementationValue,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_Refresh,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._ReportedBy_OnValueChanged);
                private static void _ReportedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportedBy, sf);
                }
                private static bool _ReportedBy_ComputeIsReadOnly(global::LightSwitchApplication.ProjectIncident e)
                {
                    bool result = false;
                    e.ReportedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportedBy_Validate(global::LightSwitchApplication.ProjectIncident e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportedBy_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ReportedBy_GetCoreImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportedBy;
                }
                private static global::LightSwitchApplication.Employee _ReportedBy_GetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy);
                }
                private static void _ReportedBy_SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy, (i, ev) => i.ReportedBy = ev, v);
                }
                private static void _ReportedBy_Refresh(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy);
                }
                private static void _ReportedBy_OnValueChanged(global::LightSwitchApplication.ProjectIncident e)
                {
                    e.ReportedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    Requirements = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "Requirements",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Requirements_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Requirements_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Requirements_GetEntityCollection);
                private static void _Requirements_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Requirements, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Requirement> _Requirements_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Requirements, ref d._Requirements);
                }
                private static global::System.Collections.IEnumerable _Requirements_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Requirements;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issues = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issues",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Issues_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Issues_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._Issues_GetEntityCollection);
                private static void _Issues_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._Issues, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Issue> _Issues_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.Issues, ref d._Issues);
                }
                private static global::System.Collections.IEnumerable _Issues_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.Issues;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry
                    TDDObjects = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject>.Entry(
                        "TDDObjects",
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDObjects_Stub,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDObjects_GetReferencedEntities,
                        global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties._TDDObjects_GetEntityCollection);
                private static void _TDDObjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectIncident.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject>.Data> c, global::LightSwitchApplication.ProjectIncident.DetailsClass d, object sf)
                {
                    c(d, ref d._TDDObjects, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TDDObject> _TDDObjects_GetReferencedEntities(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TDDObject, global::LightSwitchApplication.TDDObject.DetailsClass>(global::LightSwitchApplication.ProjectIncident.DetailsClass.PropertySetProperties.TDDObjects, ref d._TDDObjects);
                }
                private static global::System.Collections.IEnumerable _TDDObjects_GetEntityCollection(global::LightSwitchApplication.ProjectIncident.DetailsClass d)
                {
                    return d.ImplementationEntity.TDDObjects;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _IncidentId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _ClientId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _SkyDriveLink;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data _DateFound;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, int>.Data _Severity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _AssignedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _DODTeam;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Data _ConsumedAnalysisHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<int>>.Data _ConsumedDevelopmentHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Data _PercentageCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CompletedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _DevelopmentProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data _LastUpdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.DateTime>.Data _LastUpdateInLocalTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _TrackedAnalysisHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _TrackedDevHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::System.Nullable<decimal>>.Data _TotalEstimatedHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _TrackedBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _RemainingHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _BillableOverHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _ReqTotalEstimate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _ReqTotalBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _IssuesTotalEstimate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, decimal>.Data _IssuesTotalBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _VisualStudioProjectName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, string>.Data _LabelFileName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Data _Developer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.ProjectIncidentComment>.Data _ProjectIncidentComments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TimeTracking>.Data _TimeTrackings;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDExtension>.Data _TDDExtensions;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Employee>.Data _ReportedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Requirement>.Data _Requirements;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issues;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass, global::LightSwitchApplication.TDDObject>.Data _TDDObjects;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectEnvironment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectEnvironment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectEnvironment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectEnvironment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectEnvironment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectEnvironment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectEnvironment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.IpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.IpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Port
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Port);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Port, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Port_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Port_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Port_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DbIpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.DbIpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.DbIpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DbIpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DbIpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DbIpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SsrsIpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsrsIpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsrsIpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsrsIpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsrsIpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsrsIpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SsasIpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsasIpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsasIpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsasIpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsasIpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SsasIpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string EpIpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.EpIpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.EpIpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EpIpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EpIpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EpIpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientIpName
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.ClientIpName);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.ClientIpName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientIpName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientIpName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientIpName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectEnvironment.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectEnvironment,
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass,
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>.Entry
                __ProjectEnvironmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectEnvironment.DetailsClass.__ProjectEnvironment_CreateNew,
                    global::LightSwitchApplication.ProjectEnvironment.DetailsClass.__ProjectEnvironment_Created,
                    global::LightSwitchApplication.ProjectEnvironment.DetailsClass.__ProjectEnvironment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectEnvironment __ProjectEnvironment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectEnvironment> es)
            {
                return new global::LightSwitchApplication.ProjectEnvironment(es);
            }
            private static void __ProjectEnvironment_Created(global::LightSwitchApplication.ProjectEnvironment e)
            {
                e.ProjectEnvironment_Created();
            }
            private static bool __ProjectEnvironment_AllowSaveWithErrors(global::LightSwitchApplication.ProjectEnvironment e)
            {
                bool result = false;
                e.ProjectEnvironment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> IpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.IpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> Port
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Port) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> DbIpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.DbIpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> SsrsIpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsrsIpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> SsasIpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.SsasIpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> EpIpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.EpIpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string> ClientIpName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.ClientIpName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string Type { get; set; }
                new string IpName { get; set; }
                new string Port { get; set; }
                new string DbIpName { get; set; }
                new string SsrsIpName { get; set; }
                new string SsasIpName { get; set; }
                new string EpIpName { get; set; }
                new string ClientIpName { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    IpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "IpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._IpName_OnValueChanged);
                private static void _IpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._IpName, sf);
                }
                private static bool _IpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.IpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _IpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IpName_Validate(r);
                }
                private static string _IpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.IpName;
                }
                private static void _IpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IpName = v;
                }
                private static void _IpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.IpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    Port = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "Port",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Port_OnValueChanged);
                private static void _Port_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._Port, sf);
                }
                private static bool _Port_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.Port_IsReadOnly(ref result);
                    return result;
                }
                private static void _Port_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Port_Validate(r);
                }
                private static string _Port_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.Port;
                }
                private static void _Port_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Port = v;
                }
                private static void _Port_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.Port_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    DbIpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "DbIpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._DbIpName_OnValueChanged);
                private static void _DbIpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._DbIpName, sf);
                }
                private static bool _DbIpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.DbIpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _DbIpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DbIpName_Validate(r);
                }
                private static string _DbIpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.DbIpName;
                }
                private static void _DbIpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DbIpName = v;
                }
                private static void _DbIpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.DbIpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    SsrsIpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "SsrsIpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsrsIpName_OnValueChanged);
                private static void _SsrsIpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._SsrsIpName, sf);
                }
                private static bool _SsrsIpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.SsrsIpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SsrsIpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SsrsIpName_Validate(r);
                }
                private static string _SsrsIpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.SsrsIpName;
                }
                private static void _SsrsIpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SsrsIpName = v;
                }
                private static void _SsrsIpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.SsrsIpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    SsasIpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "SsasIpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._SsasIpName_OnValueChanged);
                private static void _SsasIpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._SsasIpName, sf);
                }
                private static bool _SsasIpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.SsasIpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SsasIpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SsasIpName_Validate(r);
                }
                private static string _SsasIpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.SsasIpName;
                }
                private static void _SsasIpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SsasIpName = v;
                }
                private static void _SsasIpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.SsasIpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    EpIpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "EpIpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._EpIpName_OnValueChanged);
                private static void _EpIpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._EpIpName, sf);
                }
                private static bool _EpIpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.EpIpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _EpIpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EpIpName_Validate(r);
                }
                private static string _EpIpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.EpIpName;
                }
                private static void _EpIpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.EpIpName = v;
                }
                private static void _EpIpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.EpIpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry
                    ClientIpName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Entry(
                        "ClientIpName",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._ClientIpName_OnValueChanged);
                private static void _ClientIpName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientIpName, sf);
                }
                private static bool _ClientIpName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.ClientIpName_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientIpName_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientIpName_Validate(r);
                }
                private static string _ClientIpName_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientIpName;
                }
                private static void _ClientIpName_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientIpName = v;
                }
                private static void _ClientIpName_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.ClientIpName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectEnvironment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.ProjectEnvironment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectEnvironment.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectEnvironment e)
                {
                    e.Project_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _IpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _Port;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _DbIpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _SsrsIpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _SsasIpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _EpIpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, string>.Data _ClientIpName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectEnvironment, global::LightSwitchApplication.ProjectEnvironment.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class ProjectRule : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ProjectRule entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectRule()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProjectRule(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectRule> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ProjectRule.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRule_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectRule_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CommentRule
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentRule);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentRule, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentRule_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentRule_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentRule_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CommentMethodName
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentMethodName);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentMethodName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentMethodName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentMethodName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CommentMethodName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LabelFile
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LabelFile);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LabelFile, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFile_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFile_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LabelFile_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Layer
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Layer);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Layer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Layer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Layer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Layer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LayerKey
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LayerKey);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LayerKey, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LayerKey_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LayerKey_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LayerKey_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BestPracticeLevel
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BestPracticeLevel);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BestPracticeLevel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BestPracticeLevel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BestPracticeLevel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BestPracticeLevel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrefixOfObject
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfObject);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfObject, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfObject_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfObject_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfObject_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrefixOfMethod
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfMethod);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfMethod, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfMethod_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfMethod_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfMethod_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrefixOfField
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfField);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfField, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfField_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfField_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfField_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PrefixOfAotProjects
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfAotProjects);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfAotProjects, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfAotProjects_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfAotProjects_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrefixOfAotProjects_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BackupFolder
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BackupFolder);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BackupFolder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BackupFolder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BackupFolder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BackupFolder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Project Project
        {
            get
            {
                return global::LightSwitchApplication.ProjectRule.DetailsClass.GetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project);
            }
            set
            {
                global::LightSwitchApplication.ProjectRule.DetailsClass.SetValue(this, global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Project_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ProjectRule,
                global::LightSwitchApplication.ProjectRule.DetailsClass,
                global::LightSwitchApplication.ProjectRule.DetailsClass.IImplementation,
                global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>.Entry
                __ProjectRuleEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>.Entry(
                    global::LightSwitchApplication.ProjectRule.DetailsClass.__ProjectRule_CreateNew,
                    global::LightSwitchApplication.ProjectRule.DetailsClass.__ProjectRule_Created,
                    global::LightSwitchApplication.ProjectRule.DetailsClass.__ProjectRule_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ProjectRule __ProjectRule_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ProjectRule> es)
            {
                return new global::LightSwitchApplication.ProjectRule(es);
            }
            private static void __ProjectRule_Created(global::LightSwitchApplication.ProjectRule e)
            {
                e.ProjectRule_Created();
            }
            private static bool __ProjectRule_AllowSaveWithErrors(global::LightSwitchApplication.ProjectRule e)
            {
                bool result = false;
                e.ProjectRule_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> CommentRule
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentRule) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> CommentMethodName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.CommentMethodName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> LabelFile
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LabelFile) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> Layer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Layer) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> LayerKey
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.LayerKey) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> BestPracticeLevel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BestPracticeLevel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> PrefixOfObject
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfObject) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> PrefixOfMethod
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfMethod) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> PrefixOfField
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfField) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> PrefixOfAotProjects
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.PrefixOfAotProjects) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string> BackupFolder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.BackupFolder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project> Project
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string CommentRule { get; set; }
                new string CommentMethodName { get; set; }
                new string LabelFile { get; set; }
                new string Layer { get; set; }
                new string LayerKey { get; set; }
                new string BestPracticeLevel { get; set; }
                new string PrefixOfObject { get; set; }
                new string PrefixOfMethod { get; set; }
                new string PrefixOfField { get; set; }
                new string PrefixOfAotProjects { get; set; }
                new string BackupFolder { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Project { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    CommentRule = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "CommentRule",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentRule_OnValueChanged);
                private static void _CommentRule_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._CommentRule, sf);
                }
                private static bool _CommentRule_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.CommentRule_IsReadOnly(ref result);
                    return result;
                }
                private static void _CommentRule_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CommentRule_Validate(r);
                }
                private static string _CommentRule_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.CommentRule;
                }
                private static void _CommentRule_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CommentRule = v;
                }
                private static void _CommentRule_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.CommentRule_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    CommentMethodName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "CommentMethodName",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._CommentMethodName_OnValueChanged);
                private static void _CommentMethodName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._CommentMethodName, sf);
                }
                private static bool _CommentMethodName_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.CommentMethodName_IsReadOnly(ref result);
                    return result;
                }
                private static void _CommentMethodName_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CommentMethodName_Validate(r);
                }
                private static string _CommentMethodName_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.CommentMethodName;
                }
                private static void _CommentMethodName_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CommentMethodName = v;
                }
                private static void _CommentMethodName_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.CommentMethodName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    LabelFile = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "LabelFile",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LabelFile_OnValueChanged);
                private static void _LabelFile_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._LabelFile, sf);
                }
                private static bool _LabelFile_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.LabelFile_IsReadOnly(ref result);
                    return result;
                }
                private static void _LabelFile_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LabelFile_Validate(r);
                }
                private static string _LabelFile_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.LabelFile;
                }
                private static void _LabelFile_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LabelFile = v;
                }
                private static void _LabelFile_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.LabelFile_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    Layer = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "Layer",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Layer_OnValueChanged);
                private static void _Layer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._Layer, sf);
                }
                private static bool _Layer_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.Layer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Layer_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Layer_Validate(r);
                }
                private static string _Layer_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.Layer;
                }
                private static void _Layer_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Layer = v;
                }
                private static void _Layer_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.Layer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    LayerKey = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "LayerKey",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._LayerKey_OnValueChanged);
                private static void _LayerKey_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._LayerKey, sf);
                }
                private static bool _LayerKey_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.LayerKey_IsReadOnly(ref result);
                    return result;
                }
                private static void _LayerKey_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LayerKey_Validate(r);
                }
                private static string _LayerKey_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.LayerKey;
                }
                private static void _LayerKey_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LayerKey = v;
                }
                private static void _LayerKey_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.LayerKey_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    BestPracticeLevel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "BestPracticeLevel",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BestPracticeLevel_OnValueChanged);
                private static void _BestPracticeLevel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._BestPracticeLevel, sf);
                }
                private static bool _BestPracticeLevel_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.BestPracticeLevel_IsReadOnly(ref result);
                    return result;
                }
                private static void _BestPracticeLevel_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BestPracticeLevel_Validate(r);
                }
                private static string _BestPracticeLevel_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.BestPracticeLevel;
                }
                private static void _BestPracticeLevel_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BestPracticeLevel = v;
                }
                private static void _BestPracticeLevel_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.BestPracticeLevel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    PrefixOfObject = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "PrefixOfObject",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfObject_OnValueChanged);
                private static void _PrefixOfObject_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._PrefixOfObject, sf);
                }
                private static bool _PrefixOfObject_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.PrefixOfObject_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrefixOfObject_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrefixOfObject_Validate(r);
                }
                private static string _PrefixOfObject_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.PrefixOfObject;
                }
                private static void _PrefixOfObject_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrefixOfObject = v;
                }
                private static void _PrefixOfObject_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.PrefixOfObject_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    PrefixOfMethod = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "PrefixOfMethod",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfMethod_OnValueChanged);
                private static void _PrefixOfMethod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._PrefixOfMethod, sf);
                }
                private static bool _PrefixOfMethod_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.PrefixOfMethod_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrefixOfMethod_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrefixOfMethod_Validate(r);
                }
                private static string _PrefixOfMethod_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.PrefixOfMethod;
                }
                private static void _PrefixOfMethod_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrefixOfMethod = v;
                }
                private static void _PrefixOfMethod_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.PrefixOfMethod_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    PrefixOfField = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "PrefixOfField",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfField_OnValueChanged);
                private static void _PrefixOfField_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._PrefixOfField, sf);
                }
                private static bool _PrefixOfField_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.PrefixOfField_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrefixOfField_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrefixOfField_Validate(r);
                }
                private static string _PrefixOfField_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.PrefixOfField;
                }
                private static void _PrefixOfField_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrefixOfField = v;
                }
                private static void _PrefixOfField_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.PrefixOfField_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    PrefixOfAotProjects = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "PrefixOfAotProjects",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._PrefixOfAotProjects_OnValueChanged);
                private static void _PrefixOfAotProjects_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._PrefixOfAotProjects, sf);
                }
                private static bool _PrefixOfAotProjects_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.PrefixOfAotProjects_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrefixOfAotProjects_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrefixOfAotProjects_Validate(r);
                }
                private static string _PrefixOfAotProjects_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.PrefixOfAotProjects;
                }
                private static void _PrefixOfAotProjects_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PrefixOfAotProjects = v;
                }
                private static void _PrefixOfAotProjects_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.PrefixOfAotProjects_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry
                    BackupFolder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Entry(
                        "BackupFolder",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._BackupFolder_OnValueChanged);
                private static void _BackupFolder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._BackupFolder, sf);
                }
                private static bool _BackupFolder_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.BackupFolder_IsReadOnly(ref result);
                    return result;
                }
                private static void _BackupFolder_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BackupFolder_Validate(r);
                }
                private static string _BackupFolder_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.BackupFolder;
                }
                private static void _BackupFolder_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BackupFolder = v;
                }
                private static void _BackupFolder_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.BackupFolder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project>.Entry
                    Project = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project>.Entry(
                        "Project",
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_Stub,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_ComputeIsReadOnly,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_Validate,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_GetCoreImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_GetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_SetImplementationValue,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_Refresh,
                        global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties._Project_OnValueChanged);
                private static void _Project_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ProjectRule.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project>.Data> c, global::LightSwitchApplication.ProjectRule.DetailsClass d, object sf)
                {
                    c(d, ref d._Project, sf);
                }
                private static bool _Project_ComputeIsReadOnly(global::LightSwitchApplication.ProjectRule e)
                {
                    bool result = false;
                    e.Project_IsReadOnly(ref result);
                    return result;
                }
                private static void _Project_Validate(global::LightSwitchApplication.ProjectRule e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Project_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Project_GetCoreImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.ImplementationEntity.Project;
                }
                private static global::LightSwitchApplication.Project _Project_GetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Project, global::LightSwitchApplication.Project.DetailsClass>(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass d, global::LightSwitchApplication.Project v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project, ref d._Project, (i, ev) => i.Project = ev, v);
                }
                private static void _Project_Refresh(global::LightSwitchApplication.ProjectRule.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ProjectRule.DetailsClass.PropertySetProperties.Project, ref d._Project);
                }
                private static void _Project_OnValueChanged(global::LightSwitchApplication.ProjectRule e)
                {
                    e.Project_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _CommentRule;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _CommentMethodName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _LabelFile;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _Layer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _LayerKey;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _BestPracticeLevel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _PrefixOfObject;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _PrefixOfMethod;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _PrefixOfField;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _PrefixOfAotProjects;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, string>.Data _BackupFolder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ProjectRule, global::LightSwitchApplication.ProjectRule.DetailsClass, global::LightSwitchApplication.Project>.Data _Project;
            
        }
    
        #endregion
    }
    
    #endregion
}
