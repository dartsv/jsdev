

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Requirement : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Requirement entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Requirement()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Requirement(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Requirement> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Requirement.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirement_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirement_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReqId
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ReqId);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ReqId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReqId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Priority
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> EstimateHours
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.EstimateHours);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.EstimateHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.LastUpdate);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.LastUpdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableHours
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal NonBillableHours
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.NonBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableRemainingHours
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableRemainingHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableRemainingHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableRemainingHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableOverHours
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableOverHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableOverHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdateInLocalTime
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.LastUpdateInLocalTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Compute(ref global::System.DateTime result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectFeature ProjectFeature
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectIncident ProjectIncident
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectTask ProjectTask
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.Requirement.DetailsClass.SetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimeTrack> TimeTracks
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetValue(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.TimeTracks);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> TimeTracksQuery
        {
            get
            {
                return global::LightSwitchApplication.Requirement.DetailsClass.GetQuery(this, global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.TimeTracks);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Requirement,
                global::LightSwitchApplication.Requirement.DetailsClass,
                global::LightSwitchApplication.Requirement.DetailsClass.IImplementation,
                global::LightSwitchApplication.Requirement.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>.Entry
                __RequirementEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>.Entry(
                    global::LightSwitchApplication.Requirement.DetailsClass.__Requirement_CreateNew,
                    global::LightSwitchApplication.Requirement.DetailsClass.__Requirement_Created,
                    global::LightSwitchApplication.Requirement.DetailsClass.__Requirement_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Requirement __Requirement_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Requirement> es)
            {
                return new global::LightSwitchApplication.Requirement(es);
            }
            private static void __Requirement_Created(global::LightSwitchApplication.Requirement e)
            {
                e.Requirement_Created();
            }
            private static bool __Requirement_AllowSaveWithErrors(global::LightSwitchApplication.Requirement e)
            {
                bool result = false;
                e.Requirement_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Requirement.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string> ReqId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ReqId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>> EstimateHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.EstimateHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime> LastUpdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.LastUpdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal> BillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal> NonBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.NonBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal> BillableRemainingHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableRemainingHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal> BillableOverHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.BillableOverHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime> LastUpdateInLocalTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.LastUpdateInLocalTime) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature> ProjectFeature
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncident
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTask
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack> TimeTracks
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.TimeTracks) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string ReqId { get; set; }
                new string Name { get; set; }
                new string Status { get; set; }
                new string Priority { get; set; }
                new global::System.Nullable<decimal> EstimateHours { get; set; }
                new global::System.DateTime LastUpdate { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectFeature { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectIncident { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectTask { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::System.Collections.IEnumerable TimeTracks { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry
                    ReqId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry(
                        "ReqId",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ReqId_OnValueChanged);
                private static void _ReqId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._ReqId, sf);
                }
                private static bool _ReqId_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.ReqId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReqId_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReqId_Validate(r);
                }
                private static string _ReqId_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.ReqId;
                }
                private static void _ReqId_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReqId = v;
                }
                private static void _ReqId_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.ReqId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Entry(
                        "Priority",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static string _Priority_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>>.Entry
                    EstimateHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "EstimateHours",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._EstimateHours_OnValueChanged);
                private static void _EstimateHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._EstimateHours, sf);
                }
                private static bool _EstimateHours_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.EstimateHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _EstimateHours_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EstimateHours_Validate(r);
                }
                private static global::System.Nullable<decimal> _EstimateHours_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.EstimateHours;
                }
                private static void _EstimateHours_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.EstimateHours = v;
                }
                private static void _EstimateHours_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.EstimateHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Entry
                    LastUpdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdate",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdate_OnValueChanged);
                private static void _LastUpdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdate, sf);
                }
                private static bool _LastUpdate_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.LastUpdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastUpdate_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdate_Validate(r);
                }
                private static global::System.DateTime _LastUpdate_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.LastUpdate;
                }
                private static void _LastUpdate_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LastUpdate = global::LightSwitchApplication.Requirement.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LastUpdate_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.LastUpdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry
                    BillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry(
                        "BillableHours",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableHours_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableHours_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableHours_ComputeValue);
                private static void _BillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableHours, sf);
                }
                private static void _BillableHours_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableHours_Validate(r);
                }
                private static decimal _BillableHours_ComputeValue(global::LightSwitchApplication.Requirement e)
                {
                    decimal value = default(decimal);
                    e.BillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry
                    NonBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry(
                        "NonBillableHours",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._NonBillableHours_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._NonBillableHours_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._NonBillableHours_ComputeValue);
                private static void _NonBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._NonBillableHours, sf);
                }
                private static void _NonBillableHours_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NonBillableHours_Validate(r);
                }
                private static decimal _NonBillableHours_ComputeValue(global::LightSwitchApplication.Requirement e)
                {
                    decimal value = default(decimal);
                    e.NonBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry
                    BillableRemainingHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry(
                        "BillableRemainingHours",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableRemainingHours_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableRemainingHours_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableRemainingHours_ComputeValue);
                private static void _BillableRemainingHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableRemainingHours, sf);
                }
                private static void _BillableRemainingHours_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableRemainingHours_Validate(r);
                }
                private static decimal _BillableRemainingHours_ComputeValue(global::LightSwitchApplication.Requirement e)
                {
                    decimal value = default(decimal);
                    e.BillableRemainingHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry
                    BillableOverHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Entry(
                        "BillableOverHours",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableOverHours_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableOverHours_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._BillableOverHours_ComputeValue);
                private static void _BillableOverHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableOverHours, sf);
                }
                private static void _BillableOverHours_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableOverHours_Validate(r);
                }
                private static decimal _BillableOverHours_ComputeValue(global::LightSwitchApplication.Requirement e)
                {
                    decimal value = default(decimal);
                    e.BillableOverHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Entry
                    LastUpdateInLocalTime = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdateInLocalTime",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_ComputeValue);
                private static void _LastUpdateInLocalTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdateInLocalTime, sf);
                }
                private static void _LastUpdateInLocalTime_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdateInLocalTime_Validate(r);
                }
                private static global::System.DateTime _LastUpdateInLocalTime_ComputeValue(global::LightSwitchApplication.Requirement e)
                {
                    global::System.DateTime value = default(global::System.DateTime);
                    e.LastUpdateInLocalTime_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    ProjectFeature = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "ProjectFeature",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_GetCoreImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_Refresh,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectFeature_OnValueChanged);
                private static void _ProjectFeature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeature, sf);
                }
                private static bool _ProjectFeature_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.ProjectFeature_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectFeature_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectFeature_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectFeature_GetCoreImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectFeature;
                }
                private static global::LightSwitchApplication.ProjectFeature _ProjectFeature_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::LightSwitchApplication.ProjectFeature v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature, (i, ev) => i.ProjectFeature = ev, v);
                }
                private static void _ProjectFeature_Refresh(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.ProjectFeature_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncident = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncident",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_GetCoreImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_Refresh,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectIncident_OnValueChanged);
                private static void _ProjectIncident_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncident, sf);
                }
                private static bool _ProjectIncident_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.ProjectIncident_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectIncident_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectIncident_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectIncident_GetCoreImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectIncident;
                }
                private static global::LightSwitchApplication.ProjectIncident _ProjectIncident_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::LightSwitchApplication.ProjectIncident v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident, (i, ev) => i.ProjectIncident = ev, v);
                }
                private static void _ProjectIncident_Refresh(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.ProjectIncident_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTask = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTask",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_GetCoreImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_Refresh,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._ProjectTask_OnValueChanged);
                private static void _ProjectTask_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTask, sf);
                }
                private static bool _ProjectTask_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.ProjectTask_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectTask_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectTask_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectTask_GetCoreImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectTask;
                }
                private static global::LightSwitchApplication.ProjectTask _ProjectTask_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectTask, global::LightSwitchApplication.ProjectTask.DetailsClass>(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::LightSwitchApplication.ProjectTask v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask, (i, ev) => i.ProjectTask = ev, v);
                }
                private static void _ProjectTask_Refresh(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.ProjectTask_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.Requirement e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.Requirement e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.Requirement e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TimeTracks = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TimeTracks",
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._TimeTracks_Stub,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._TimeTracks_GetReferencedEntities,
                        global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties._TimeTracks_GetEntityCollection);
                private static void _TimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Requirement.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.Requirement.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTracks, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack> _TimeTracks_GetReferencedEntities(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>(global::LightSwitchApplication.Requirement.DetailsClass.PropertySetProperties.TimeTracks, ref d._TimeTracks);
                }
                private static global::System.Collections.IEnumerable _TimeTracks_GetEntityCollection(global::LightSwitchApplication.Requirement.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeTracks;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data _ReqId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, string>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.Nullable<decimal>>.Data _EstimateHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Data _LastUpdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data _BillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data _NonBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data _BillableRemainingHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, decimal>.Data _BillableOverHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::System.DateTime>.Data _LastUpdateInLocalTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _ProjectFeature;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncident;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTask;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TimeTracks;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Issue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Issue entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Issue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueId
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueId);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ReportedAt
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedAt);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedAt, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedAt_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedAt_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedAt_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Priority
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<decimal> EstimateHours
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.EstimateHours);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.EstimateHours, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EstimateHours_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.LastUpdate);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.LastUpdate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal BillableHours
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.BillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal NonBillableHours
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.NonBillableHours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonBillableHours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NonBillableHours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime LastUpdateInLocalTime
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.LastUpdateInLocalTime);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Compute(ref global::System.DateTime result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastUpdateInLocalTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectFeature ProjectFeature
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectFeature_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectIncident ProjectIncident
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectIncident_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ProjectTask ProjectTask
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectTask_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee ReportedBy
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReportedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TimeTrack> TimeTracks
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTracks);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TimeTrack> TimeTracksQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTracks);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Issue,
                global::LightSwitchApplication.Issue.DetailsClass,
                global::LightSwitchApplication.Issue.DetailsClass.IImplementation,
                global::LightSwitchApplication.Issue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry
                __IssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry(
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_CreateNew,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_Created,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Issue __Issue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> es)
            {
                return new global::LightSwitchApplication.Issue(es);
            }
            private static void __Issue_Created(global::LightSwitchApplication.Issue e)
            {
                e.Issue_Created();
            }
            private static bool __Issue_AllowSaveWithErrors(global::LightSwitchApplication.Issue e)
            {
                bool result = false;
                e.Issue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Issue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> IssueId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> ReportedAt
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedAt) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>> EstimateHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.EstimateHours) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> LastUpdate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.LastUpdate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal> BillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.BillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal> NonBillableHours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.NonBillableHours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> LastUpdateInLocalTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.LastUpdateInLocalTime) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature> ProjectFeature
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident> ProjectIncident
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask> ProjectTask
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee> ReportedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack> TimeTracks
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTracks) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string IssueId { get; set; }
                new string Name { get; set; }
                new string Type { get; set; }
                new global::System.Nullable<global::System.DateTime> ReportedAt { get; set; }
                new string Status { get; set; }
                new string Priority { get; set; }
                new global::System.Nullable<decimal> EstimateHours { get; set; }
                new global::System.DateTime LastUpdate { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectFeature { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectIncident { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ProjectTask { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ReportedBy { get; set; }
                new global::System.Collections.IEnumerable TimeTracks { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    IssueId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "IssueId",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueId_OnValueChanged);
                private static void _IssueId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueId, sf);
                }
                private static bool _IssueId_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueId_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueId_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueId_Validate(r);
                }
                private static string _IssueId_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueId;
                }
                private static void _IssueId_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IssueId = v;
                }
                private static void _IssueId_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ReportedAt = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ReportedAt",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedAt_OnValueChanged);
                private static void _ReportedAt_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportedAt, sf);
                }
                private static bool _ReportedAt_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ReportedAt_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportedAt_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportedAt_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ReportedAt_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportedAt;
                }
                private static void _ReportedAt_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ReportedAt = global::LightSwitchApplication.Issue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ReportedAt_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ReportedAt_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Priority",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static string _Priority_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>>.Entry
                    EstimateHours = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>>.Entry(
                        "EstimateHours",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._EstimateHours_OnValueChanged);
                private static void _EstimateHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._EstimateHours, sf);
                }
                private static bool _EstimateHours_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.EstimateHours_IsReadOnly(ref result);
                    return result;
                }
                private static void _EstimateHours_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EstimateHours_Validate(r);
                }
                private static global::System.Nullable<decimal> _EstimateHours_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.EstimateHours;
                }
                private static void _EstimateHours_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<decimal> v)
                {
                    d.ImplementationEntity.EstimateHours = v;
                }
                private static void _EstimateHours_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.EstimateHours_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    LastUpdate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdate",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdate_OnValueChanged);
                private static void _LastUpdate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdate, sf);
                }
                private static bool _LastUpdate_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.LastUpdate_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastUpdate_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdate_Validate(r);
                }
                private static global::System.DateTime _LastUpdate_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.LastUpdate;
                }
                private static void _LastUpdate_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.LastUpdate = global::LightSwitchApplication.Issue.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _LastUpdate_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.LastUpdate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Entry
                    BillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Entry(
                        "BillableHours",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._BillableHours_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._BillableHours_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._BillableHours_ComputeValue);
                private static void _BillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._BillableHours, sf);
                }
                private static void _BillableHours_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BillableHours_Validate(r);
                }
                private static decimal _BillableHours_ComputeValue(global::LightSwitchApplication.Issue e)
                {
                    decimal value = default(decimal);
                    e.BillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Entry
                    NonBillableHours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Entry(
                        "NonBillableHours",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._NonBillableHours_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._NonBillableHours_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._NonBillableHours_ComputeValue);
                private static void _NonBillableHours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._NonBillableHours, sf);
                }
                private static void _NonBillableHours_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NonBillableHours_Validate(r);
                }
                private static decimal _NonBillableHours_ComputeValue(global::LightSwitchApplication.Issue e)
                {
                    decimal value = default(decimal);
                    e.NonBillableHours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    LastUpdateInLocalTime = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "LastUpdateInLocalTime",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._LastUpdateInLocalTime_ComputeValue);
                private static void _LastUpdateInLocalTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._LastUpdateInLocalTime, sf);
                }
                private static void _LastUpdateInLocalTime_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastUpdateInLocalTime_Validate(r);
                }
                private static global::System.DateTime _LastUpdateInLocalTime_ComputeValue(global::LightSwitchApplication.Issue e)
                {
                    global::System.DateTime value = default(global::System.DateTime);
                    e.LastUpdateInLocalTime_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry
                    ProjectFeature = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Entry(
                        "ProjectFeature",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectFeature_OnValueChanged);
                private static void _ProjectFeature_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectFeature, sf);
                }
                private static bool _ProjectFeature_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ProjectFeature_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectFeature_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectFeature_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectFeature_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectFeature;
                }
                private static global::LightSwitchApplication.ProjectFeature _ProjectFeature_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectFeature, global::LightSwitchApplication.ProjectFeature.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.ProjectFeature v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature, (i, ev) => i.ProjectFeature = ev, v);
                }
                private static void _ProjectFeature_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectFeature, ref d._ProjectFeature);
                }
                private static void _ProjectFeature_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ProjectFeature_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry
                    ProjectIncident = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Entry(
                        "ProjectIncident",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectIncident_OnValueChanged);
                private static void _ProjectIncident_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectIncident, sf);
                }
                private static bool _ProjectIncident_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ProjectIncident_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectIncident_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectIncident_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectIncident_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectIncident;
                }
                private static global::LightSwitchApplication.ProjectIncident _ProjectIncident_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectIncident, global::LightSwitchApplication.ProjectIncident.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.ProjectIncident v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident, (i, ev) => i.ProjectIncident = ev, v);
                }
                private static void _ProjectIncident_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectIncident, ref d._ProjectIncident);
                }
                private static void _ProjectIncident_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ProjectIncident_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry
                    ProjectTask = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask>.Entry(
                        "ProjectTask",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ProjectTask_OnValueChanged);
                private static void _ProjectTask_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectTask, sf);
                }
                private static bool _ProjectTask_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ProjectTask_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectTask_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectTask_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ProjectTask_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectTask;
                }
                private static global::LightSwitchApplication.ProjectTask _ProjectTask_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ProjectTask, global::LightSwitchApplication.ProjectTask.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.ProjectTask v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask, (i, ev) => i.ProjectTask = ev, v);
                }
                private static void _ProjectTask_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ProjectTask, ref d._ProjectTask);
                }
                private static void _ProjectTask_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ProjectTask_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    ReportedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "ReportedBy",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ReportedBy_OnValueChanged);
                private static void _ReportedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReportedBy, sf);
                }
                private static bool _ReportedBy_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ReportedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReportedBy_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReportedBy_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ReportedBy_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReportedBy;
                }
                private static global::LightSwitchApplication.Employee _ReportedBy_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy);
                }
                private static void _ReportedBy_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy, (i, ev) => i.ReportedBy = ev, v);
                }
                private static void _ReportedBy_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ReportedBy, ref d._ReportedBy);
                }
                private static void _ReportedBy_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ReportedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry
                    TimeTracks = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack>.Entry(
                        "TimeTracks",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTracks_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTracks_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TimeTracks_GetEntityCollection);
                private static void _TimeTracks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeTracks, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TimeTrack> _TimeTracks_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TimeTracks, ref d._TimeTracks);
                }
                private static global::System.Collections.IEnumerable _TimeTracks_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeTracks;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _IssueId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ReportedAt;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<decimal>>.Data _EstimateHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _LastUpdate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Data _BillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, decimal>.Data _NonBillableHours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _LastUpdateInLocalTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectFeature>.Data _ProjectFeature;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectIncident>.Data _ProjectIncident;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.ProjectTask>.Data _ProjectTask;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data _ReportedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.TimeTrack>.Data _TimeTracks;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class TimeTrack : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the TimeTrack entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeTrack()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TimeTrack(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeTrack> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.TimeTrack.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrack_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeTrack_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal Hours
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Hours);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Compute(ref decimal result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hours_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.StartTime);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.StartTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime EndTime
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.EndTime);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.EndTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void EndTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime WorkDate
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.WorkDate);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.WorkDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsForIssue
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.IsForIssue);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.IsForIssue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsForIssue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Type
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Type);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Type, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Type_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Billable
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Billable);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Billable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Billable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Billable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Billable_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Task
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Task);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Task, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Task_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee Employee
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Requirement Requirement
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirement_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirement_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Requirement_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Issue Issue
        {
            get
            {
                return global::LightSwitchApplication.TimeTrack.DetailsClass.GetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue);
            }
            set
            {
                global::LightSwitchApplication.TimeTrack.DetailsClass.SetValue(this, global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.TimeTrack,
                global::LightSwitchApplication.TimeTrack.DetailsClass,
                global::LightSwitchApplication.TimeTrack.DetailsClass.IImplementation,
                global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>.Entry
                __TimeTrackEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>.Entry(
                    global::LightSwitchApplication.TimeTrack.DetailsClass.__TimeTrack_CreateNew,
                    global::LightSwitchApplication.TimeTrack.DetailsClass.__TimeTrack_Created,
                    global::LightSwitchApplication.TimeTrack.DetailsClass.__TimeTrack_AllowSaveWithErrors);
            private static global::LightSwitchApplication.TimeTrack __TimeTrack_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.TimeTrack> es)
            {
                return new global::LightSwitchApplication.TimeTrack(es);
            }
            private static void __TimeTrack_Created(global::LightSwitchApplication.TimeTrack e)
            {
                e.TimeTrack_Created();
            }
            private static bool __TimeTrack_AllowSaveWithErrors(global::LightSwitchApplication.TimeTrack e)
            {
                bool result = false;
                e.TimeTrack_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal> Hours
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Hours) as global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime> StartTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.StartTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime> EndTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.EndTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime> WorkDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.WorkDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool> IsForIssue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.IsForIssue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string> Type
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Type) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string> Billable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Billable) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string> Task
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Task) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement> Requirement
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue> Issue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new global::System.DateTime StartTime { get; set; }
                new global::System.DateTime EndTime { get; set; }
                new global::System.DateTime WorkDate { get; set; }
                new bool IsForIssue { get; set; }
                new string Type { get; set; }
                new string Billable { get; set; }
                new string Notes { get; set; }
                new string Task { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Employee { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Requirement { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Issue { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal>.Entry
                    Hours = new global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal>.Entry(
                        "Hours",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Hours_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Hours_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Hours_ComputeValue);
                private static void _Hours_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Hours, sf);
                }
                private static void _Hours_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Hours_Validate(r);
                }
                private static decimal _Hours_ComputeValue(global::LightSwitchApplication.TimeTrack e)
                {
                    decimal value = default(decimal);
                    e.Hours_Compute(ref value);
                    return value;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry
                    StartTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry(
                        "StartTime",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._StartTime_OnValueChanged);
                private static void _StartTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._StartTime, sf);
                }
                private static bool _StartTime_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.StartTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartTime_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartTime_Validate(r);
                }
                private static global::System.DateTime _StartTime_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.StartTime;
                }
                private static void _StartTime_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.StartTime = global::LightSwitchApplication.TimeTrack.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _StartTime_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.StartTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry
                    EndTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry(
                        "EndTime",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._EndTime_OnValueChanged);
                private static void _EndTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._EndTime, sf);
                }
                private static bool _EndTime_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.EndTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _EndTime_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.EndTime_Validate(r);
                }
                private static global::System.DateTime _EndTime_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.EndTime;
                }
                private static void _EndTime_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.EndTime = global::LightSwitchApplication.TimeTrack.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _EndTime_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.EndTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry
                    WorkDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Entry(
                        "WorkDate",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._WorkDate_OnValueChanged);
                private static void _WorkDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkDate, sf);
                }
                private static bool _WorkDate_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.WorkDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _WorkDate_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.WorkDate_Validate(r);
                }
                private static global::System.DateTime _WorkDate_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkDate;
                }
                private static void _WorkDate_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.WorkDate = global::LightSwitchApplication.TimeTrack.DetailsClass.TruncateDate(v);
                }
                private static void _WorkDate_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.WorkDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool>.Entry
                    IsForIssue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool>.Entry(
                        "IsForIssue",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._IsForIssue_OnValueChanged);
                private static void _IsForIssue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._IsForIssue, sf);
                }
                private static bool _IsForIssue_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.IsForIssue_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsForIssue_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsForIssue_Validate(r);
                }
                private static bool _IsForIssue_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.IsForIssue;
                }
                private static void _IsForIssue_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsForIssue = v;
                }
                private static void _IsForIssue_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.IsForIssue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry
                    Type = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry(
                        "Type",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Type_OnValueChanged);
                private static void _Type_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Type, sf);
                }
                private static bool _Type_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Type_IsReadOnly(ref result);
                    return result;
                }
                private static void _Type_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Type_Validate(r);
                }
                private static string _Type_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Type;
                }
                private static void _Type_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Type = v;
                }
                private static void _Type_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Type_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry
                    Billable = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry(
                        "Billable",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Billable_OnValueChanged);
                private static void _Billable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Billable, sf);
                }
                private static bool _Billable_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Billable_IsReadOnly(ref result);
                    return result;
                }
                private static void _Billable_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Billable_Validate(r);
                }
                private static string _Billable_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Billable;
                }
                private static void _Billable_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Billable = v;
                }
                private static void _Billable_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Billable_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry
                    Task = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Entry(
                        "Task",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Task_OnValueChanged);
                private static void _Task_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Task, sf);
                }
                private static bool _Task_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Task_IsReadOnly(ref result);
                    return result;
                }
                private static void _Task_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Task_Validate(r);
                }
                private static string _Task_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Task;
                }
                private static void _Task_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Task = v;
                }
                private static void _Task_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Task_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "Employee",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_Refresh,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Employee_GetCoreImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static global::LightSwitchApplication.Employee _Employee_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee, ref d._Employee, (i, ev) => i.Employee = ev, v);
                }
                private static void _Employee_Refresh(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Employee, ref d._Employee);
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Employee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement>.Entry
                    Requirement = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement>.Entry(
                        "Requirement",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_Refresh,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Requirement_OnValueChanged);
                private static void _Requirement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Requirement, sf);
                }
                private static bool _Requirement_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Requirement_IsReadOnly(ref result);
                    return result;
                }
                private static void _Requirement_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Requirement_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Requirement_GetCoreImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Requirement;
                }
                private static global::LightSwitchApplication.Requirement _Requirement_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Requirement, global::LightSwitchApplication.Requirement.DetailsClass>(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement, ref d._Requirement);
                }
                private static void _Requirement_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::LightSwitchApplication.Requirement v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement, ref d._Requirement, (i, ev) => i.Requirement = ev, v);
                }
                private static void _Requirement_Refresh(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Requirement, ref d._Requirement);
                }
                private static void _Requirement_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Requirement_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue>.Entry
                    Issue = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue>.Entry(
                        "Issue",
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_Stub,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_ComputeIsReadOnly,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_Validate,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_GetCoreImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_GetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_SetImplementationValue,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_Refresh,
                        global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties._Issue_OnValueChanged);
                private static void _Issue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.TimeTrack.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue>.Data> c, global::LightSwitchApplication.TimeTrack.DetailsClass d, object sf)
                {
                    c(d, ref d._Issue, sf);
                }
                private static bool _Issue_ComputeIsReadOnly(global::LightSwitchApplication.TimeTrack e)
                {
                    bool result = false;
                    e.Issue_IsReadOnly(ref result);
                    return result;
                }
                private static void _Issue_Validate(global::LightSwitchApplication.TimeTrack e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Issue_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Issue_GetCoreImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.ImplementationEntity.Issue;
                }
                private static global::LightSwitchApplication.Issue _Issue_GetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue, ref d._Issue);
                }
                private static void _Issue_SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass d, global::LightSwitchApplication.Issue v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue, ref d._Issue, (i, ev) => i.Issue = ev, v);
                }
                private static void _Issue_Refresh(global::LightSwitchApplication.TimeTrack.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.TimeTrack.DetailsClass.PropertySetProperties.Issue, ref d._Issue);
                }
                private static void _Issue_OnValueChanged(global::LightSwitchApplication.TimeTrack e)
                {
                    e.Issue_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityComputedProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, decimal>.Data _Hours;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data _StartTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data _EndTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::System.DateTime>.Data _WorkDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, bool>.Data _IsForIssue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data _Type;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data _Billable;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, string>.Data _Task;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Employee>.Data _Employee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Requirement>.Data _Requirement;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.TimeTrack, global::LightSwitchApplication.TimeTrack.DetailsClass, global::LightSwitchApplication.Issue>.Data _Issue;
            
        }
    
        #endregion
    }
    
    #endregion
}
